{"version":3,"sources":["u3-features/Navbar/Navbar.module.css","u1-assets/images/preloader.gif","u2-components/common/preloader/Preloader.module.css","u1-assets/images/avatar.png","u3-features/Profile/Post/Post.module.css","u1-assets/images/user.png","u3-features/Dialogs/Dialogs.module.css","serviceWorker.js","u3-features/Navbar/Navbar.jsx","u3-features/News/News.jsx","u3-features/Music/Music.jsx","u3-features/Settings/Settings.jsx","u3-features/Header/Header.jsx","u5-api/api.js","u5-api/auth-api.js","u4-redux/auth-reducer.js","u3-features/Header/HeaderContainer.jsx","u2-components/common/preloader/Preloader.jsx","u3-features/Profile/ProfInfo/ProfileStatusWithHooks.jsx","u3-features/Profile/ProfInfo/ProfileInfo.jsx","u5-api/profile-api.js","u4-redux/profile-reducer.js","u3-features/Profile/Post/Post.jsx","utils/validators/validators.js","u2-components/common/FormsControls/FormControls.jsx","u3-features/Profile/MyPosts/MyPosts.jsx","u3-features/Profile/MyPosts/MyPostsContainer.js","u3-features/Profile/Profile.jsx","u3-features/Profile/ProfileContainer.jsx","u4-redux/dialogs-reducer.js","u3-features/Dialogs/Message/Message.jsx","u3-features/Dialogs/Dialog/Dialog.jsx","u3-features/Dialogs/AddMessageForm/AddMessageForm.jsx","u2-components/hoc/withAuthRedirect.jsx","u3-features/Dialogs/DialogsContainer.js","u3-features/Dialogs/Dialogs.jsx","u5-api/user-api.js","u4-redux/users-reducer.js","u3-features/Users/Users.jsx","u4-redux/users-selectors.js","u3-features/Users/UsersContainer.jsx","u3-features/Login/Login.jsx","u4-redux/app-reducer.js","App.js","u4-redux/store.js","index.js","u3-features/Users/Users.module.css","u3-features/Header/Header.module.css","u3-features/Profile/ProfInfo/ProfileInfo.module.css","u3-features/Profile/MyPosts/MyPosts.module.css","u2-components/common/FormsControls/FormControls.module.css","u3-features/Login/Login.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","active","to","activeClassName","activeLink","News","props","content","Music","Settings","Header","header","alt","src","logo_name","login","isAuth","onClick","logout","instance","axios","withCredentials","baseURL","headers","authAPI","get","email","password","rememberMe","post","delete","initializeState","id","isFetching","TOGGLE_IS_FETCHING","SET_USER_DATA","setAuthUserData","type","data","getAuthUserData","dispatch","then","response","resultCode","HeaderContainer","this","React","Component","connect","state","auth","Preloader","preloader","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateOwnProfileStatus","onChange","e","currentTarget","value","ProfileInfo","profile","descriptionBlock","avatarImg","photos","large","avatar","aboutMe","contacts","instagram","lookingForAJob","userId","lookingForAJobDescription","profileAPI","res","put","posts","message","likesCount","ADD_POST","SET_USER_PROFILE","GET_USER_PROFILE_STATUS","SET_OWN_PROFILE_STATUS","DELETE_POST","Post","required","maxLengthCreator","maxLength","length","FormControl","input","meta","child","hasError","touched","error","formControl","children","Textarea","restProps","Input","MyPosts","memo","console","log","postsElements","map","p","key","postsBlock","AddNewPostForm","onSubmit","addPost","newPostText","maxLength10","reduxForm","form","handleSubmit","Field","placeholder","component","name","validate","MyPostsContainer","profilePage","postMessageText","addPostActionCreator","Profile","ProfileContainer","componentDidMount","params","authorizedUserId","history","push","getUserProfileData","getStatusFromUser","compose","userStatus","setOwnProfileStatus","withRouter","dialogs","messages","SEND_MESSAGE","Message","DialogItem","path","dialog","maxLength50","mapStateToPropsForRedirect","dialogsPage","addMessage","messageText","sendMessageCreator","RedirectComponent","dialogsElements","d","messagesElements","m","dialogsItems","newMessageText","usersAPI","currentPage","pageSize","users","totalUsersCount","followingInProgress","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FOLLOWING_IN_PROGRESS","setCurrentPage","toggleIsFetching","toggleFollowingProgress","Users","pages","i","users_wrapper","selectPage","onPageChanged","u","user","small","userPhoto","followed","disabled","some","unfollow_button","unfollow","follow_button","follow","getUsers","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","followSuccess","unfollowSuccess","requestingPage","items","totalCount","count","LoginReduxForm","formSummaryError","stopSubmit","_error","formData","initialized","INITIALIZED_SUCCESS","App","initializeApp","render","DialogsContainer","app","promise","Promise","all","reducers","combineReducers","action","filter","postId","newMessage","formReducer","store","createStore","applyMiddleware","thinkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.bb28b9ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3e9lb\",\"item\":\"Navbar_item__2hClh\",\"activeLink\":\"Navbar_activeLink__2Y-m_\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.d5c02aa6.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2xK9x\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.e67e358c.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1KkTd\"};","module.exports = __webpack_public_path__ + \"static/media/user.abb5b607.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__LB3Hj\",\"dialog\":\"Dialogs_dialog__3ZwYP\",\"dialogsItems\":\"Dialogs_dialogsItems__19IAe\",\"messages\":\"Dialogs_messages__JxiAm\",\"addMessage\":\"Dialogs_addMessage__1guBq\",\"add_post\":\"Dialogs_add_post__3RwTP\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'Settings content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\n   return (\r\n      <nav className={s.nav}>\r\n         <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n         </div>\r\n         <div className={s.item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n         </div>\r\n         <div className={s.item}>\r\n            <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n         </div>\r\n         <div className={s.item}>\r\n            <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n         </div>\r\n         <div className={s.item}>\r\n            <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n         </div>\r\n         <div className={s.item}>\r\n            <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n         </div>\r\n      </nav>\r\n   )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nexport const News = (props) => {\r\n   return (\r\n      <div className={s.content}>\r\n         This will be news\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nexport const Music = (props) => {\r\n   return (\r\n      <div className={s.content}>\r\n         Music\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nexport const Settings = (props) => {\r\n   return (\r\n      <div className={s.content}>\r\n         Settings\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const Header = (props) => {\r\n   return (\r\n      <header className={s.header}>\r\n         <img alt={'header'} src=\"https://img.icons8.com/carbon-copy/100/000000/minecraft-logo.png\"/>\r\n         <div className={s.logo_name}>Social netWork</div>\r\n         <div className={s.login}>\r\n            {props.isAuth\r\n               ? <div> {props.login} - <button onClick={props.logout}>logout</button></div>\r\n               : <NavLink to={'/login'}>Login</NavLink>}\r\n         </div>\r\n      </header>\r\n   )\r\n}\r\n\r\n\r\n","import * as axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n\theaders: {\r\n\t\t'API-KEY': 'ec9092bf-d7c1-484e-b4e6-892ed49a92ea'\r\n\t}\r\n});\r\n\r\n\r\n\r\n\r\n","import {instance} from './api';\r\n\r\nexport const authAPI = {\r\n   authMe() {\r\n      return instance.get(`auth/me`)\r\n   },\r\n\r\n   login(email,password,rememberMe = false) {\r\n      return instance.post(`auth/login`,{email,password,rememberMe})\r\n   },\r\n\r\n   logout() {\r\n      return instance.delete(`auth/login`)\r\n   },\r\n}","import {authAPI} from '../u5-api/auth-api';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nlet initializeState = {\r\n   id: null,\r\n   email: null,\r\n   login: null,\r\n   isFetching: true,\r\n   isAuth: false\r\n};\r\n\r\nexport const authReducer = (state = initializeState, action) => {\r\n   switch (action.type) {\r\n      case SET_USER_DATA:\r\n         return {\r\n            ...state,\r\n            ...action.data,\r\n         };\r\n      case TOGGLE_IS_FETCHING: {\r\n         return {...state, isFetching: action.isFetching}\r\n      }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\n//Actions Type\r\nconst TOGGLE_IS_FETCHING = 'AUTH/IS_FETCHING';\r\nconst SET_USER_DATA = 'AUTH/SET_USER_DATA'\r\n\r\n//Actions\r\nexport const setAuthUserData = (id, email, login, isAuth) => (\r\n   {type: SET_USER_DATA, data: {id, email, login, isAuth}});\r\n\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\n\r\n//Thunks\r\nexport const getAuthUserData = () => (dispatch) => {\r\n   return authAPI.authMe()\r\n      .then(response => {\r\n         if (response.data.resultCode === 0) {\r\n            let {id, login, email} = response.data.data;\r\n            dispatch(setAuthUserData(id, login, email, true));\r\n         }\r\n      });\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n   authAPI.login(email, password, rememberMe)\r\n      .then(response => {\r\n         if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData(email, password, rememberMe));\r\n         } else {\r\n            let messages = response.data.messages.length > 0 ? response.data.messages[0] : 'some error';\r\n            dispatch(stopSubmit('login', {_error: messages}))\r\n         }\r\n      });\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n   authAPI.logout()\r\n      .then(response => {\r\n         if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n         }\r\n      });\r\n}","import React from 'react';\r\nimport {Header} from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../../u4-redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n   render() {\r\n      return <Header {...this.props} />\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   isAuth: state.auth.isAuth,\r\n   login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n\r\n","import React from \"react\";\r\nimport preloader from \"../../../u1-assets/images/preloader.gif\";\r\nimport s from './Preloader.module.css';\r\n\r\nexport const Preloader = () => {\r\n\treturn <div><img alt={'preloader'} className={s.preloader} src={preloader} /></div>\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\n\r\nexport const ProfileStatusWithHooks = (props) => {\r\n\r\n   let [editMode, setEditMode] = useState(false)\r\n   let [status, setStatus] = useState(props.status)\r\n\r\n   useEffect(() => {\r\n      setStatus(props.status)\r\n   },[props.status])\r\n\r\n   const activateEditMode = () => {\r\n      setEditMode(true)\r\n   }\r\n\r\n   const deactivateEditMode = () => {\r\n      setEditMode(false)\r\n      props.updateOwnProfileStatus(status)\r\n   }\r\n\r\n   const onStatusChange = (e) => {\r\n      setStatus(e.currentTarget.value)\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         {!editMode &&\r\n         <div>\r\n               <span onDoubleClick={activateEditMode}>\r\n                  {props.status || '-----'}\r\n               </span>\r\n         </div>}\r\n         {editMode &&\r\n         <div>\r\n            <input autoFocus={true}\r\n                   onBlur={deactivateEditMode}\r\n                   onChange={onStatusChange}\r\n                   value={status}\r\n            />\r\n         </div>}\r\n      </div>\r\n   )\r\n}","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport {Preloader} from '../../../u2-components/common/preloader/Preloader';\r\nimport avatar from '../../../u1-assets/images/avatar.png'\r\nimport {ProfileStatusWithHooks} from './ProfileStatusWithHooks';\r\n\r\nexport const ProfileInfo = (props) => {\r\n   if (!props.profile) {\r\n      return <Preloader/>\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <div className={s.descriptionBlock}>\r\n            <div className={s.avatarImg}>\r\n               <img alt='avatar' src={props.profile.photos.large ? props.profile.photos.large : avatar}/>\r\n            </div>\r\n            <div>\r\n               <ProfileStatusWithHooks status={props.status} updateOwnProfileStatus={props.updateOwnProfileStatus}/>\r\n            </div>\r\n            <p>{props.profile.aboutMe}</p>\r\n            <p>{props.profile.contacts.instagram}</p>\r\n            <p>{props.profile.lookingForAJob}</p>\r\n            <p>{props.profile.userId}</p>\r\n            <p>{props.profile.lookingForAJobDescription}</p>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n","import {instance} from './api';\r\n\r\nexport const profileAPI = {\r\n   getProfile(userId) {\r\n      return instance.get(`profile/${userId}`)\r\n         .then(res => {\r\n            return res.data\r\n         });\r\n   },\r\n\r\n   getUserStatus(userId) {\r\n      return instance.get(`profile/status/${userId}`)\r\n         .then(res => res);\r\n   },\r\n\r\n   updateOwnProfileStatus(status) {\r\n      return instance.put(`profile/status/`,{status})\r\n         .then(res => {\r\n            return res.data\r\n         });\r\n   },\r\n}","import {profileAPI} from '../u5-api/profile-api';\r\n\r\nlet initializeState = {\r\n   posts: [\r\n      {id: 1, message: 'Hi, how do you feel? I have not seen you since I was in Berlin!', likesCount: 12},\r\n      {id: 2, message: 'Wow! It is great! When are you going there?', likesCount: 12}\r\n   ],\r\n   profile: null,\r\n   status: '',\r\n};\r\n\r\nexport const profileReducer = (state = initializeState, action) => {\r\n   switch (action.type) {\r\n      case ADD_POST:\r\n         return {\r\n            ...state,\r\n            posts: [{id: 5, message: action.postMessageText, likesCount: 0}, ...state.posts],\r\n         };\r\n      case DELETE_POST:\r\n         return {\r\n            ...state,\r\n            posts: state.posts.filter(p => p.id !== action.postId)\r\n         };\r\n      case SET_USER_PROFILE: {\r\n         return {\r\n            ...state,\r\n            profile: action.profile\r\n         };\r\n      }\r\n      case GET_USER_PROFILE_STATUS: {\r\n         return {\r\n            ...state,\r\n            status: action.userStatus\r\n         };\r\n      }\r\n      case SET_OWN_PROFILE_STATUS: {\r\n         return {\r\n            ...state,\r\n            status: action.status\r\n         };\r\n      }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\n//Actions Type\r\nconst ADD_POST = 'PROFILE/ADD-POST';\r\nconst SET_USER_PROFILE = 'PROFILE/SET-USER-PROFILE';\r\nconst GET_USER_PROFILE_STATUS = 'PROFILE/SET-USER-PROFILE-STATUS';\r\nconst SET_OWN_PROFILE_STATUS = 'PROFILE/UPDATE-PROFILE-STATUS';\r\nconst DELETE_POST = 'PROFILE/DELETE-POST';\r\n\r\n//Actions\r\nexport const addPostActionCreator = (postMessageText) => ({type: ADD_POST, postMessageText});\r\nexport const setUserProfileData = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const deletePostAC = (postId) => ({type: SET_USER_PROFILE, postId});\r\n//---status\r\nexport const getUserStatus = (userStatus) => ({type: GET_USER_PROFILE_STATUS, userStatus});\r\nexport const setOwnProfileStatus = (status) => ({type: DELETE_POST, status});\r\n\r\n//Thunks\r\nexport const getUserProfileData = (userId) => (dispatch) => {\r\n   profileAPI.getProfile(userId)\r\n      .then(data => {\r\n         dispatch(setUserProfileData(data));\r\n      });\r\n}\r\n\r\nexport const getStatusFromUser = (userId) => (dispatch) => {\r\n   profileAPI.getUserStatus(userId)\r\n      .then(res => {\r\n         dispatch(getUserStatus(res.data));\r\n      });\r\n}\r\n\r\nexport const updateOwnProfileStatus = (status) => (dispatch) => {\r\n   profileAPI.updateOwnProfileStatus(status)\r\n      .then(data => {\r\n         if (data.resultCode === 0) {\r\n            dispatch(setOwnProfileStatus(status));\r\n         }\r\n      });\r\n}\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nexport const Post = (props) => {\r\n   return <div className={s.item}>\r\n      <img alt={'post'} src=\"https://img.icons8.com/bubbles/100/000000/flag-person-male.png\"/>\r\n      <div>\r\n         {props.message}\r\n         <span> Like</span> {props.likesCount}\r\n      </div>\r\n   </div>\r\n\r\n}\r\n\r\n\r\n","export const required = value => {\r\n   if(value) return undefined;\r\n\r\n   return 'Field id required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) =>{\r\n   if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n   return undefined;\r\n}","import React from 'react';\r\nimport s from './FormControls.module.css'\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n   const hasError = meta.touched && meta.error\r\n   return (\r\n      <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n         <div>\r\n            {props.children}\r\n         </div>\r\n         {hasError && <span>{meta.error}</span>}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n   const {input, meta, ...restProps} = props\r\n   return <FormControl {...props}><textarea {...input}{...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n   const {input, meta, ...restProps} = props\r\n   return <FormControl {...props}><input {...input}{...restProps}/></FormControl>\r\n}\r\n\r\n\r\n/*const Element = Element => ({ input, meta, ...props }) => {\r\n   const hasError = meta.touched && meta.error;\r\n   return (\r\n      <div className={ s.formControl + \" \" + (hasError ? s.error : \"\") }>\r\n         <Element {...input} {...props} />\r\n         { hasError && <span> { meta.error } </span> }\r\n      </div>\r\n   );\r\n};\r\n\r\nА потом просто его импортим в компоненту формы, вызываем как\r\n\r\nconst Textarea = Element(\"textarea\");\r\n\r\nи передаем\r\n\r\n<Field component={Textarea} .../>\r\n\r\nP.S. Аргумент у HOC должен быть с большой буквы, чтобы React понимал, что перед ним не обычный html-тег, а компонент/переменная.\r\nP.P.S. Создавать const Textarea = Element(\"textarea\"); нужно вне компонента с формой. Иначе фокус с формы сбрасывается после первого символа (хз почему, видимо, ререндерится)\r\n\r\n*/\r\n\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport {Post} from '../Post/Post';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\nimport {Textarea} from '../../../u2-components/common/FormsControls/FormControls';\r\n\r\nexport const MyPosts = React.memo((props) => {\r\n   console.log('MyPosts')\r\n   let postsElements =\r\n      props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n   let addNewPost = (value) => {\r\n      props.addPost(value.newPostText)\r\n   }\r\n\r\n   return (\r\n      <div className={s.postsBlock}>\r\n         <h3>My posts</h3>\r\n         <AddNewPostForm onSubmit={addNewPost}/>\r\n         <div className={s.posts}>\r\n            {postsElements}\r\n         </div>\r\n      </div>\r\n   )\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nexport const AddPost = (props) => {\r\n   console.log('AddPost')\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <div>\r\n            <Field placeholder='Add post'\r\n                   component={Textarea}\r\n                   name='newPostText'\r\n                   validate={[required,maxLength10]}\r\n            />\r\n         </div>\r\n         <div>\r\n            <button>Add post</button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\n\r\nconst AddNewPostForm = reduxForm({form: 'dialogAddMessageForm'})(AddPost)\r\n","import {addPostActionCreator} from '../../../u4-redux/profile-reducer';\r\nimport {MyPosts} from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      posts: state.profilePage.posts,\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      addPost: (postMessageText) => {\r\n         dispatch(addPostActionCreator(postMessageText));\r\n      }\r\n   }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport {ProfileInfo} from './ProfInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nexport const Profile = (props) => {\r\n   return (\r\n      <div>\r\n         <ProfileInfo profile={props.profile}\r\n                      status={props.status}\r\n                      updateOwnProfileStatus={props.updateOwnProfileStatus}/>\r\n         <MyPostsContainer/>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {Profile} from './Profile';\r\nimport {getStatusFromUser, getUserProfileData, updateOwnProfileStatus} from '../../u4-redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass ProfileContainer extends React.Component {\r\n   componentDidMount = () => {\r\n\r\n      let userId = this.props.match.params.userId;\r\n      if (!userId) {\r\n         userId = this.props.authorizedUserId\r\n         if (!userId) {\r\n            this.props.history.push('/login')\r\n         }\r\n      }\r\n      this.props.getUserProfileData(userId);\r\n      this.props.getStatusFromUser(userId);\r\n   }\r\n\r\n   render() {\r\n      return <Profile {...this.props}\r\n                      profile={this.props.profile}\r\n                      status={this.props.status}\r\n                      updateOwnProfileStatus={this.props.updateOwnProfileStatus}/>\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   profile: state.profilePage.profile,\r\n   status: state.profilePage.status,\r\n   authorizedUserId: state.auth.id,\r\n   isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, {getUserProfileData, getStatusFromUser, updateOwnProfileStatus}),\r\n   withRouter,\r\n   // withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n","let initializeState = {\r\n   dialogs: [\r\n      {id: 1, name: 'Egor'},\r\n      {id: 2, name: 'Andrew'},\r\n      {id: 3, name: 'David'}\r\n   ],\r\n   messages: [\r\n      {id: 1, message: 'Hi'},\r\n      {id: 2, message: 'How are you?'},\r\n      {id: 3, message: 'I can met with you'}\r\n   ],\r\n};\r\n\r\nexport const dialogsReducer = (state = initializeState, action) => {\r\n   switch (action.type) {\r\n      case SEND_MESSAGE:\r\n         let newMessage = action.messageText;\r\n         return {\r\n            ...state,\r\n            messages: [...state.messages, {id: 6, message:newMessage}]\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\n//Actions Type\r\nconst SEND_MESSAGE = 'DIALOGS/ADD-MESSAGE';\r\n\r\n//Actions\r\nexport const sendMessageCreator = (messageText) => ({type: SEND_MESSAGE, messageText});\r\n\r\n\r\n","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\nexport const Message = (props) => {\r\n   return (\r\n      <div className={s.message}>{props.message}</div>\r\n   )\r\n}\r\n","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const DialogItem = (props) => {\r\n   let path = '/dialogs/' + props.id;\r\n   return (\r\n      <div className={s.dialog + ' ' + s.active}>\r\n         <NavLink to={path}>{props.name}</NavLink>\r\n      </div>\r\n   )\r\n}","import React from 'react';\r\nimport {Field,reduxForm} from 'redux-form';\r\nimport {Textarea} from '../../../u2-components/common/FormsControls/FormControls';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\n\r\nconst maxLength50 = maxLengthCreator(100)\r\n\r\nconst AddMessageForm = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <div>\r\n            <Field component={Textarea}\r\n                   name={'newMessageText'}\r\n                   validate={[required,maxLength50]}\r\n                   placeholder={'Enter your message'}\r\n            />\r\n         </div>\r\n         <div>\r\n            <button>Send message</button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\n\r\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n   isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Redirect to='/login'/>\r\n         return <Component {...this.props}/>\r\n      }\r\n   }\r\n\r\n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n   return ConnectedAuthRedirectComponent;\r\n}","import {sendMessageCreator,} from '../../u4-redux/dialogs-reducer';\r\nimport {Dialogs} from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {withAuthRedirect} from '../../u2-components/hoc/withAuthRedirect';\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      dialogsPage: state.dialogsPage\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      addMessage: (messageText) => {\r\n         dispatch(sendMessageCreator(messageText))\r\n      },\r\n   }\r\n}\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, mapDispatchToProps),\r\n   withAuthRedirect\r\n)(Dialogs);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {Message} from './Message/Message';\r\nimport {DialogItem} from './Dialog/Dialog';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\nexport const Dialogs = (props) => {\r\n\r\n   let state = props.dialogsPage;\r\n\r\n   let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n   let messagesElements = state.messages.map(m => <Message key={m.id} message={m.message}/>);\r\n\r\n   let addNewMessage = (value) => {\r\n      props.addMessage(value.newMessageText);\r\n   }\r\n\r\n   return (\r\n      <div className={s.dialogs}>\r\n         <div className={s.dialogsItems}>\r\n            {dialogsElements}\r\n         </div>\r\n         <div className={s.messages}>\r\n            <div>{messagesElements}</div>\r\n            <div className={s.addMessage}>\r\n               <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n","import {instance} from './api';\r\n\r\nexport const usersAPI = {\r\n\r\n\tgetUsers(currentPage = 1, pageSize = 10) {\r\n\t\treturn instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.data;\r\n\t\t\t});\r\n\t},\r\n\tfollow(userId) {\r\n\t\treturn instance.post(`follow/${userId}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.data;\r\n\t\t\t});\r\n\t},\r\n\tunfollow(userId) {\r\n\t\treturn instance.delete(`follow/${userId}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.data;\r\n\t\t\t});\r\n\t},\r\n}","import {usersAPI} from '../u5-api/user-api';\r\n\r\nlet initializeState = {\r\n   users: [],\r\n   pageSize: 5,\r\n   totalUsersCount: 0,\r\n   currentPage: 1,\r\n   isFetching: true,\r\n   followingInProgress: [1, 2]\r\n};\r\n\r\nexport const usersReducer = (state = initializeState, action) => {\r\n   switch (action.type) {\r\n      case FOLLOW:\r\n         return {\r\n            ...state,\r\n            users: state.users.map(u => {\r\n               if (u.id === action.userId) {\r\n                  return {...u, followed: true}\r\n               }\r\n               return u;\r\n            })\r\n         };\r\n      case UNFOLLOW:\r\n         return {\r\n            ...state,\r\n            users: state.users.map(u => {\r\n               if (u.id === action.userId) {\r\n                  return {...u, followed: false}\r\n               }\r\n               return u;\r\n            })\r\n         };\r\n      case SET_USERS: {\r\n         return {...state, users: action.users}\r\n      }\r\n      case SET_CURRENT_PAGE: {\r\n         return {...state, currentPage: action.currentPage}\r\n      }\r\n      case SET_TOTAL_USERS_COUNT: {\r\n         return {...state, totalUsersCount: action.count}\r\n      }\r\n      case TOGGLE_IS_FETCHING: {\r\n         return {...state, isFetching: action.isFetching}\r\n      }\r\n      case TOGGLE_IS_FOLLOWING_IN_PROGRESS: {\r\n         return {\r\n            ...state,\r\n            followingInProgress: action.isFetching\r\n               ? [...state.followingInProgress, action.userId]\r\n               : state.followingInProgress.filter(id => id !== action.userId)\r\n         }\r\n      }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\n//Actions type\r\nconst FOLLOW = 'USERS/FOLLOW';\r\nconst UNFOLLOW = 'USERS/UNFOLLOW';\r\nconst SET_USERS = 'USERS/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'USERS/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'USERS/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'USERS/IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'USERS/TOGGLE_IS_FOLLOWING_IN_PROGRESS';\r\n\r\n//Actions\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n   type: TOGGLE_IS_FOLLOWING_IN_PROGRESS,\r\n   isFetching,\r\n   userId\r\n});\r\n\r\n//Thunks\r\nexport const requestUsers = (requestingPage, pageSize) => (dispatch) => {\r\n   dispatch(toggleIsFetching(true))\r\n   dispatch(setCurrentPage(requestingPage))\r\n   usersAPI.getUsers(requestingPage, pageSize).then(data => {\r\n      dispatch(toggleIsFetching(false))\r\n      dispatch(setUsers(data.items))\r\n      dispatch(setUsersTotalCount(data.totalCount))\r\n   });\r\n}\r\n\r\nexport const follow = (userId) => (dispatch) => {\r\n   dispatch(toggleFollowingProgress(true, userId));\r\n   usersAPI.follow(userId)\r\n      .then(response => {\r\n         if (response.resultCode === 0) {\r\n            dispatch(followSuccess(userId));\r\n         }\r\n         dispatch(toggleFollowingProgress(false, userId));\r\n      });\r\n}\r\n\r\nexport const unfollow = (userId) => (dispatch) => {\r\n   dispatch(toggleFollowingProgress(true, userId));\r\n   usersAPI.unfollow(userId)\r\n      .then(response => {\r\n         if (response.resultCode === 0) {\r\n            dispatch(unfollowSuccess(userId));\r\n         }\r\n         dispatch(toggleFollowingProgress(false, userId));\r\n      });\r\n}\r\n","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport userPhoto from '../../u1-assets/images/user.png'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const Users = (props) => {\r\n   let pages = []\r\n   for (let i = 505; i <= 525; i++) {\r\n      pages.push(i)\r\n   }\r\n\r\n   return (\r\n      <div className={s.users_wrapper}>\r\n         <div>\r\n            {pages.map(p => {\r\n               return <span key={p.id} className={props.currentPage === p && s.selectPage}\r\n                            onClick={(e) => {\r\n                               props.onPageChanged(p);\r\n                            }}>{p}</span>\r\n            })}\r\n         </div>\r\n         {\r\n            props.users.map(u => <div key={u.id}>\r\n               <div className={s.user}>\r\n                  <div>\r\n                     <NavLink to={'/profile/' + u.id}>\r\n                        <img alt={'user'} className={s.avatar}\r\n                             src={u.photos.small != null ? u.photos.small : userPhoto}/>\r\n                     </NavLink>\r\n                  </div>\r\n                  <div>\r\n                     {u.followed\r\n                        ? <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                  className={s.unfollow_button}\r\n                                  onClick={() => {\r\n                                     props.unfollow(u.id)\r\n                                  }}>Unfollow</button>\r\n                        :\r\n                        <button disabled={props.followingInProgress.some(id => id === u.id)} className={s.follow_button}\r\n                                onClick={() => {\r\n                                   props.follow(u.id)\r\n                                }}>Follow</button>}\r\n                  </div>\r\n               </div>\r\n               <div>\r\n                  <div>{u.name}</div>\r\n                  <div>{u.status}</div>\r\n               </div>\r\n               <div>\r\n                  <div>{'u.location.city'}</div>\r\n                  <div>{'u.location.country'}</div>\r\n               </div>\r\n            </div>)\r\n         }\r\n      </div>\r\n   )\r\n}\r\n","export const getUsers = (state) => {\r\n   return state.usersPage.users\r\n}\r\nexport const getPageSize = (state) => {\r\n   return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n   return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n   return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n   return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n   return state.usersPage.followingInProgress\r\n}\r\n\r\n//RESELECT library example\r\n//can get 3 dependency\r\n/*const SuperUserSelector = createSelector(getUsers,(users)=>{\r\n   return users.filter(u => true)\r\n})*/\r\n//can get 3 dependency\r\n/*const SuperUserSelector2 = createSelector(getUsers,getCurrentPage,(users,currentPage)=>{\r\n   return users.filter(u => true)\r\n})*/","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {follow, requestUsers, setCurrentPage, toggleFollowingProgress, unfollow,} from '../../u4-redux/users-reducer';\r\nimport {Users} from './Users';\r\nimport {Preloader} from '../../u2-components/common/preloader/Preloader';\r\nimport {compose} from 'redux';\r\nimport {\r\n   getCurrentPage,\r\n   getFollowingInProgress,\r\n   getIsFetching,\r\n   getPageSize,\r\n   getTotalUsersCount,\r\n   getUsers,\r\n} from '../../u4-redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n   componentDidMount() {\r\n      this.props.requestUsers(this.props.currentPage, this.props.pageSize)\r\n   }\r\n\r\n   onPageChanged = (pageNumber) => {\r\n      this.props.requestUsers(pageNumber, this.props.pageSize)\r\n      this.props.setCurrentPage(pageNumber);\r\n   }\r\n\r\n   render() {\r\n      return <>\r\n         {this.props.isFetching ? <Preloader/> : null}\r\n         <Users pageSize={this.props.pageSize}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                followingInProgress={this.props.followingInProgress}\r\n         />\r\n      </>\r\n   }\r\n}\r\n\r\n/*const mapStateToProps = (state) => {\r\n   return {\r\n      users: state.usersPage.users,\r\n      pageSize: state.usersPage.pageSize,\r\n      totalUsersCount: state.usersPage.totalUsersCount,\r\n      currentPage: state.usersPage.currentPage,\r\n      isFetching: state.usersPage.isFetching,\r\n      followingInProgress: state.usersPage.followingInProgress\r\n   }\r\n}*/\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      users: getUsers(state),\r\n      pageSize: getPageSize(state),\r\n      totalUsersCount: getTotalUsersCount(state),\r\n      currentPage: getCurrentPage(state),\r\n      isFetching: getIsFetching(state),\r\n      followingInProgress: getFollowingInProgress(state)\r\n   }\r\n}\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, {\r\n      follow, unfollow, setCurrentPage,\r\n      toggleFollowingProgress, requestUsers,\r\n   }),\r\n)(UsersContainer)","import React from 'react';\r\nimport s from './Login.module.css';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {Input} from '../../u2-components/common/FormsControls/FormControls';\r\nimport {required} from '../../utils/validators/validators';\r\nimport {connect} from 'react-redux';\r\nimport {login} from '../../u4-redux/auth-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport const LoginForm = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <p>Use test data</p>\r\n         <p>Email: free@samuraijs.com</p>\r\n         <p>Password: free</p>\r\n         <div>\r\n            <Field placeholder={'Login'}\r\n                   name={'login'}\r\n                   component={Input}\r\n                   validate={[required]}\r\n            />\r\n         </div>\r\n         <div>\r\n            <Field placeholder={'Password'}\r\n                   name={'password'}\r\n                   type={'password'}\r\n                   component={Input}\r\n                   validate={[required]}\r\n            />\r\n         </div>\r\n         <div>\r\n            <Field type={'checkbox'}\r\n                   name={'rememberMe'}\r\n                   component={Input}\r\n                   validate={[required]}\r\n            />Remember me\r\n         </div>\r\n         <div>\r\n            <button>Login</button>\r\n         </div>\r\n         {props.error &&  <div className={s.formSummaryError}>{props.error}</div>}\r\n      </form>\r\n   )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n   const onSubmit = (formData) => {\r\n      props.login(formData.login, formData.password, formData.rememberMe)\r\n   }\r\n   if (props.isAuth) {\r\n      return <Redirect to={'/profile'}/>\r\n   }\r\n   return (\r\n      <div className={s.login}>\r\n         <h1>Login</h1>\r\n         <LoginReduxForm onSubmit={onSubmit}/>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   isAuth: state.auth.isAuth\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)\r\n","import {getAuthUserData} from './auth-reducer';\r\n\r\nlet initializeState = {\r\n   initialized: false\r\n};\r\n\r\nexport const appReducer = (state = initializeState, action) => {\r\n   switch (action.type) {\r\n      case INITIALIZED_SUCCESS: {\r\n         return {...state, initialized: true}\r\n      }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\n//Actions type\r\nconst INITIALIZED_SUCCESS = 'APP/INITIALIZED-SUCCESS';\r\n\r\n//Actions\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\n//Thunks\r\nexport const initializeApp = () => (dispatch) => {\r\n\r\n   let promise = dispatch(getAuthUserData())\r\n\r\n   Promise.all([promise])\r\n      .then(() => {\r\n         dispatch(initializedSuccess())\r\n      })\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {Navbar} from './u3-features/Navbar/Navbar';\r\nimport {News} from './u3-features/News/News';\r\nimport {Music} from './u3-features/Music/Music';\r\nimport {Settings} from './u3-features/Settings/Settings';\r\nimport {Route, withRouter} from 'react-router-dom';\r\nimport HeaderContainer from './u3-features/Header/HeaderContainer';\r\nimport ProfileContainer from './u3-features/Profile/ProfileContainer';\r\nimport DialogsContainer from './u3-features/Dialogs/DialogsContainer';\r\nimport UsersContainer from './u3-features/Users/UsersContainer';\r\nimport Login from './u3-features/Login/Login';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {initializeApp} from './u4-redux/app-reducer';\r\nimport {Preloader} from './u2-components/common/preloader/Preloader';\r\n\r\nclass App extends React.Component {\r\n\r\n   componentDidMount() {\r\n      this.props.initializeApp()\r\n   }\r\n\r\n   render() {\r\n      if (!this.props.initialized) {\r\n         return <Preloader/>\r\n      }\r\n\r\n      return (\r\n         <div className='all_wrapper'>\r\n            <div className='app-wrapper'>\r\n               <HeaderContainer/>\r\n               <Navbar/>\r\n               <div className='app-wrapper-content'>\r\n                  <Route path='/login' render={() => <Login/>}/>\r\n                  <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n                  <Route path='/dialogs' render={() => <DialogsContainer/>}/>\r\n                  <Route path='/news' render={() => <News/>}/>\r\n                  <Route path='/music' render={() => <Music/>}/>\r\n                  <Route path='/settings' render={() => <Settings/>}/>\r\n                  <Route path='/users' render={() => <UsersContainer/>}/>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n   withRouter,\r\n   connect(mapStateToProps, {initializeApp}))(App);\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {profileReducer} from './profile-reducer';\r\nimport {dialogsReducer} from './dialogs-reducer';\r\nimport {usersReducer} from './users-reducer';\r\nimport {authReducer} from './auth-reducer';\r\nimport {appReducer} from './app-reducer';\r\nimport thinkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n   profilePage: profileReducer,\r\n   dialogsPage: dialogsReducer,\r\n   usersPage: usersReducer,\r\n   auth: authReducer,\r\n   form: formReducer,\r\n   app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thinkMiddleware));\r\n\r\nwindow.store = store;\r\nexport default store;","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './u4-redux/store';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\n\r\nReactDOM.render(\r\n   <BrowserRouter>\r\n      <Provider store={store}>\r\n         <App/>\r\n      </Provider>\r\n   </BrowserRouter>, document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users_wrapper\":\"Users_users_wrapper__ApN5K\",\"selectPage\":\"Users_selectPage__2n_fZ\",\"avatar\":\"Users_avatar__3o9Ed\",\"follow_button\":\"Users_follow_button__1cKkb\",\"unfollow_button\":\"Users_unfollow_button__q9xcA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__32p7j\",\"logo_name\":\"Header_logo_name__3zk27\",\"login\":\"Header_login__16CVX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__Dzl7e\",\"avatarImg\":\"ProfileInfo_avatarImg__L3g3w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3D8pD\",\"posts\":\"MyPosts_posts__WUP1F\",\"add_post\":\"MyPosts_add_post__1nG-m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__D0p8B\",\"error\":\"FormControls_error__2QGSA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Login_formSummaryError__2UExk\"};"],"sourceRoot":""}