{"version":3,"sources":["components/Navbar/Navbar.module.css","asets/images/preloader.gif","components/common/preloader/Preloader.module.css","asets/images/avatar.png","components/Profile/Post/Post.module.css","asets/images/user.png","components/Dialogs/Dialogs.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Header/Header.jsx","api/api.js","api/auth-api.js","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/common/preloader/Preloader.jsx","components/Profile/ProfInfo/ProfileStatus.jsx","components/Profile/ProfInfo/ProfileInfo.jsx","api/profile-api.js","redux/profile-reducer.js","components/Profile/Post/Post.jsx","utils/validators/validators.js","components/common/FormsControls/FormControls.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","redux/dialogs-reducer.js","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.js","components/Dialogs/Dialogs.jsx","api/user-api.js","redux/users-reducer.js","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","App.js","redux/store.js","index.js","components/Users/Users.module.css","components/Header/Header.module.css","components/Profile/ProfInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/common/FormsControls/FormControls.module.css","components/Login/Login.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","active","to","activeClassName","activeLink","News","props","content","Music","Settings","Header","header","alt","src","logo_name","login","isAuth","onClick","logout","instance","axios","withCredentials","baseURL","headers","authAPI","get","email","password","rememberMe","post","delete","initializeState","id","isFetching","TOGGLE_IS_FETCHING","SET_USER_DATA","setAuthUserData","type","data","getAuthUserData","dispatch","then","response","resultCode","HeaderContainer","this","React","Component","connect","state","auth","Preloader","preloader","ProfileStatus","editMode","status","activatedMode","setState","deactivatedMode","updateOwnProfileStatus","onStatusChange","e","currentTarget","value","componentDidUpdate","prevProps","prevState","onChange","autoFocus","onBlur","ProfileInfo","profile","descriptionBlock","avatarImg","photos","large","avatar","aboutMe","contacts","instagram","lookingForAJob","userId","lookingForAJobDescription","profileAPI","res","put","posts","message","likesCount","ADD_POST","SET_USER_PROFILE","GET_USER_PROFILE_STATUS","SET_OWN_PROFILE_STATUS","Post","required","maxLengthCreator","maxLength","length","FormControl","input","meta","child","hasError","touched","error","formControl","children","Textarea","restProps","Input","maxLength10","AddNewPostForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","name","validate","MyPostsContainer","profilePage","addPost","postMessageText","addPostActionCreator","postsElements","map","p","key","postsBlock","newPostText","Profile","ProfileContainer","componentDidMount","params","authorizedUserId","history","push","getUserProfileData","getStatusFromUser","compose","userStatus","setOwnProfileStatus","withRouter","dialogs","messages","SEND_MESSAGE","Message","DialogItem","path","dialog","maxLength50","mapStateToPropsForRedirect","dialogsPage","addMessage","messageText","sendMessageCreator","RedirectComponent","dialogsElements","d","messagesElements","m","dialogsItems","newMessageText","usersAPI","currentPage","pageSize","users","totalUsersCount","followingInProgress","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FOLLOWING_IN_PROGRESS","setCurrentPage","toggleIsFetching","toggleFollowingProgress","Users","pages","i","users_wrapper","selectPage","onPageChanged","u","user","small","userPhoto","followed","disabled","some","unfollow_button","unfollow","follow_button","follow","getUsers","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","followSuccess","unfollowSuccess","requestingPage","items","totalCount","count","LoginReduxForm","formSummaryError","stopSubmit","_error","formData","initialized","INITIALIZED_SUCCESS","App","initializeApp","render","DialogsContainer","app","promise","Promise","all","reducers","combineReducers","action","newMessage","filter","formReducer","store","createStore","applyMiddleware","thinkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.4e47b684.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3JSLM\",\"item\":\"Navbar_item__tfWnZ\",\"activeLink\":\"Navbar_activeLink__DEEo2\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.d5c02aa6.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3NrQu\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.bb9bcac6.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1B3C-\"};","module.exports = __webpack_public_path__ + \"static/media/user.abb5b607.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3OFj2\",\"dialog\":\"Dialogs_dialog__3fVZr\",\"dialogsItems\":\"Dialogs_dialogsItems__3fcb5\",\"messages\":\"Dialogs_messages__39mll\",\"addMessage\":\"Dialogs_addMessage__1fBss\",\"add_post\":\"Dialogs_add_post__2QLIl\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'Settings content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\n   return (\r\n      <nav className={s.nav}>\r\n         <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n         </div>\r\n         <div className={s.item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n         </div>\r\n         <div className={s.item}>\r\n            <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n         </div>\r\n         <div className={s.item}>\r\n            <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n         </div>\r\n         <div className={s.item}>\r\n            <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n         </div>\r\n         <div className={s.item}>\r\n            <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n         </div>\r\n      </nav>\r\n   )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nexport const News = (props) => {\r\n   return (\r\n      <div className={s.content}>\r\n         This will be news\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nexport const Music = (props) => {\r\n   return (\r\n      <div className={s.content}>\r\n         Music\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nexport const Settings = (props) => {\r\n   return (\r\n      <div className={s.content}>\r\n         Settings\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const Header = (props) => {\r\n   return (\r\n      <header className={s.header}>\r\n         <img alt={'header'} src=\"https://img.icons8.com/carbon-copy/100/000000/minecraft-logo.png\"/>\r\n         <div className={s.logo_name}>Social netWork</div>\r\n         <div className={s.login}>\r\n            {props.isAuth\r\n               ? <div> {props.login} - <button onClick={props.logout}>logout</button></div>\r\n               : <NavLink to={'/login'}>Login</NavLink>}\r\n         </div>\r\n      </header>\r\n   )\r\n}\r\n\r\n\r\n","import * as axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n\theaders: {\r\n\t\t'API-KEY': 'ec9092bf-d7c1-484e-b4e6-892ed49a92ea'\r\n\t}\r\n});\r\n\r\n\r\n\r\n\r\n","import {instance} from './api';\r\n\r\nexport const authAPI = {\r\n   authMe() {\r\n      return instance.get(`auth/me`)\r\n   },\r\n\r\n   login(email,password,rememberMe = false) {\r\n      return instance.post(`auth/login`,{email,password,rememberMe})\r\n   },\r\n\r\n   logout() {\r\n      return instance.delete(`auth/login`)\r\n   },\r\n}","import {authAPI} from '../api/auth-api';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nlet initializeState = {\r\n   id: null,\r\n   email: null,\r\n   login: null,\r\n   isFetching: true,\r\n   isAuth: false\r\n};\r\n\r\nexport const authReducer = (state = initializeState, action) => {\r\n   switch (action.type) {\r\n      case SET_USER_DATA:\r\n         return {\r\n            ...state,\r\n            ...action.data,\r\n         };\r\n      case TOGGLE_IS_FETCHING: {\r\n         return {...state, isFetching: action.isFetching}\r\n      }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\n//Actions Type\r\nconst TOGGLE_IS_FETCHING = 'AUTH/IS_FETCHING';\r\nconst SET_USER_DATA = 'AUTH/SET_USER_DATA'\r\n\r\n//Actions\r\nexport const setAuthUserData = (id, email, login, isAuth) => (\r\n   {type: SET_USER_DATA, data: {id, email, login, isAuth}});\r\n\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\n\r\n//Thunks\r\nexport const getAuthUserData = () => (dispatch) => {\r\n   return authAPI.authMe()\r\n      .then(response => {\r\n         if (response.data.resultCode === 0) {\r\n            let {id, login, email} = response.data.data;\r\n            dispatch(setAuthUserData(id, login, email, true));\r\n         }\r\n      });\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n   authAPI.login(email, password, rememberMe)\r\n      .then(response => {\r\n         if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData(email, password, rememberMe));\r\n         } else {\r\n            let messages = response.data.messages.length > 0 ? response.data.messages[0] : 'some error';\r\n            dispatch(stopSubmit('login', {_error: messages}))\r\n         }\r\n      });\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n   authAPI.logout()\r\n      .then(response => {\r\n         if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n         }\r\n      });\r\n}","import React from 'react';\r\nimport {Header} from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n   render() {\r\n      return <Header {...this.props} />\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   isAuth: state.auth.isAuth,\r\n   login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n\r\n","import React from \"react\";\r\nimport preloader from \"../../../asets/images/preloader.gif\";\r\nimport s from './Preloader.module.css';\r\n\r\nexport const Preloader = () => {\r\n\treturn <div><img alt={'preloader'} className={s.preloader} src={preloader} /></div>\r\n}\r\n","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n   state = {\r\n      editMode: false,\r\n      status: this.props.status\r\n   }\r\n   activatedMode = () => {\r\n      this.setState({editMode: true})\r\n   }\r\n   deactivatedMode = () => {\r\n      this.setState({editMode: false})\r\n      this.props.updateOwnProfileStatus(this.state.status)\r\n   }\r\n   onStatusChange = (e) => {\r\n      this.setState({status: e.currentTarget.value})\r\n   }\r\n\r\n   componentDidUpdate = (prevProps, prevState) => {\r\n      if (prevProps.status !== this.props.status) {\r\n         this.setState({\r\n            status: this.props.status\r\n         })\r\n      }\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            {!this.state.editMode &&\r\n            <div>\r\n               <span onClick={this.activatedMode}>\r\n                  {this.props.status || '-----'}\r\n               </span>\r\n            </div>}\r\n            {this.state.editMode &&\r\n            <div>\r\n               <input onChange={this.onStatusChange}\r\n                      autoFocus={true}\r\n                      onBlur={this.deactivatedMode}\r\n                      value={this.state.status}/>\r\n            </div>}\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport {Preloader} from '../../common/preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport avatar from './../../../asets/images/avatar.png'\r\n\r\nexport const ProfileInfo = (props) => {\r\n   if (!props.profile) {\r\n      return <Preloader/>\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <div className={s.descriptionBlock}>\r\n            <div className={s.avatarImg}>\r\n               <img alt='avatar' src={props.profile.photos.large ? props.profile.photos.large : avatar}/>\r\n            </div>\r\n            <div>\r\n               <ProfileStatus status={props.status} updateOwnProfileStatus={props.updateOwnProfileStatus}/>\r\n            </div>\r\n            <p>{props.profile.aboutMe}</p>\r\n            <p>{props.profile.contacts.instagram}</p>\r\n            <p>{props.profile.lookingForAJob}</p>\r\n            <p>{props.profile.userId}</p>\r\n            <p>{props.profile.lookingForAJobDescription}</p>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n","import {instance} from './api';\r\n\r\nexport const profileAPI = {\r\n   getProfile(userId) {\r\n      return instance.get(`profile/${userId}`)\r\n         .then(res => {\r\n            return res.data\r\n         });\r\n   },\r\n\r\n   getUserStatus(userId) {\r\n      return instance.get(`profile/status/${userId}`)\r\n         .then(res => res);\r\n   },\r\n\r\n   updateOwnProfileStatus(status) {\r\n      return instance.put(`profile/status/`,{status})\r\n         .then(res => {\r\n            return res.data\r\n         });\r\n   },\r\n}","import {profileAPI} from '../api/profile-api';\r\n\r\nlet initializeState = {\r\n   posts: [\r\n      {id: 1, message: 'Hi, how do you feel? I have not seen you since I was in Berlin!', likesCount: 12},\r\n      {id: 2, message: 'Wow! It is great! When are you going there?', likesCount: 12}\r\n   ],\r\n   profile: null,\r\n   status: '',\r\n};\r\n\r\nexport const profileReducer = (state = initializeState, action) => {\r\n   switch (action.type) {\r\n      case ADD_POST:\r\n         return {\r\n            ...state,\r\n            posts: [{id: 3, message: action.postMessageText, likesCount: 0}, ...state.posts],\r\n         };\r\n      case SET_USER_PROFILE: {\r\n         return {\r\n            ...state,\r\n            profile: action.profile\r\n         };\r\n      }\r\n      case GET_USER_PROFILE_STATUS: {\r\n         return {\r\n            ...state,\r\n            status: action.userStatus\r\n         };\r\n      }\r\n      case SET_OWN_PROFILE_STATUS: {\r\n         return {\r\n            ...state,\r\n            status: action.status\r\n         };\r\n      }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\n//Actions Type\r\nconst ADD_POST = 'PROFILE/ADD-POST';\r\nconst SET_USER_PROFILE = 'PROFILE/SET-USER-PROFILE';\r\nconst GET_USER_PROFILE_STATUS = 'PROFILE/SET-USER-PROFILE-STATUS';\r\nconst SET_OWN_PROFILE_STATUS = 'PROFILE/UPDATE-PROFILE-STATUS';\r\n\r\n//Actions\r\nexport const addPostActionCreator = (postMessageText) => ({type: ADD_POST, postMessageText});\r\nexport const setUserProfileData = (profile) =>\r\n   ({type: SET_USER_PROFILE, profile})\r\n//---status\r\nexport const getUserStatus = (userStatus) => ({type: GET_USER_PROFILE_STATUS, userStatus});\r\nexport const setOwnProfileStatus = (status) => ({type: SET_OWN_PROFILE_STATUS, status});\r\n\r\n//Thunks\r\nexport const getUserProfileData = (userId) => (dispatch) => {\r\n   profileAPI.getProfile(userId)\r\n      .then(data => {\r\n         dispatch(setUserProfileData(data));\r\n      });\r\n}\r\n\r\nexport const getStatusFromUser = (userId) => (dispatch) => {\r\n   profileAPI.getUserStatus(userId)\r\n      .then(res => {\r\n         dispatch(getUserStatus(res.data));\r\n      });\r\n}\r\n\r\nexport const updateOwnProfileStatus = (status) => (dispatch) => {\r\n   profileAPI.updateOwnProfileStatus(status)\r\n      .then(data => {\r\n         if (data.resultCode === 0) {\r\n            dispatch(setOwnProfileStatus(status));\r\n         }\r\n      });\r\n}\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nexport const Post = (props) => {\r\n   return <div className={s.item}>\r\n      <img alt={'post'} src=\"https://img.icons8.com/bubbles/100/000000/flag-person-male.png\"/>\r\n      <div>\r\n         {props.message}\r\n         <span> Like</span> {props.likesCount}\r\n      </div>\r\n   </div>\r\n\r\n}\r\n\r\n\r\n","export const required = value => {\r\n   if(value) return undefined;\r\n\r\n   return 'Field id required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) =>{\r\n   if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n   return undefined;\r\n}","import React from 'react';\r\nimport s from './FormControls.module.css'\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n   const hasError = meta.touched && meta.error\r\n   return (\r\n      <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n         <div>\r\n            {props.children}\r\n         </div>\r\n         {hasError && <span>{meta.error}</span>}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n   const {input, meta, ...restProps} = props\r\n   return <FormControl {...props}><textarea {...input}{...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n   const {input, meta, ...restProps} = props\r\n   return <FormControl {...props}><input {...input}{...restProps}/></FormControl>\r\n}\r\n\r\n\r\n/*const Element = Element => ({ input, meta, ...props }) => {\r\n   const hasError = meta.touched && meta.error;\r\n   return (\r\n      <div className={ s.formControl + \" \" + (hasError ? s.error : \"\") }>\r\n         <Element {...input} {...props} />\r\n         { hasError && <span> { meta.error } </span> }\r\n      </div>\r\n   );\r\n};\r\n\r\nА потом просто его импортим в компоненту формы, вызываем как\r\n\r\nconst Textarea = Element(\"textarea\");\r\n\r\nи передаем\r\n\r\n<Field component={Textarea} .../>\r\n\r\nP.S. Аргумент у HOC должен быть с большой буквы, чтобы React понимал, что перед ним не обычный html-тег, а компонент/переменная.\r\nP.P.S. Создавать const Textarea = Element(\"textarea\"); нужно вне компонента с формой. Иначе фокус с формы сбрасывается после первого символа (хз почему, видимо, ререндерится)\r\n\r\n*/\r\n\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport {Post} from '../Post/Post';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\nimport {Textarea} from '../../common/FormsControls/FormControls';\r\n\r\nexport const MyPosts = (props) => {\r\n   let postsElements =\r\n      props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n   let addNewPost = (value) => {\r\n      props.addPost(value.newPostText)\r\n   }\r\n\r\n   return (\r\n      <div className={s.postsBlock}>\r\n         <h3>My posts</h3>\r\n         <AddNewPostForm onSubmit={addNewPost}/>\r\n         <div className={s.posts}>\r\n            {postsElements}\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nexport const AddPost = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <div>\r\n            <Field placeholder='Add post'\r\n                   component={Textarea}\r\n                   name='newPostText'\r\n                   validate={[required,maxLength10]}\r\n            />\r\n         </div>\r\n         <div>\r\n            <button>Add post</button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\n\r\nconst AddNewPostForm = reduxForm({form: 'dialogAddMessageForm'})(AddPost)\r\n","import {addPostActionCreator} from '../../../redux/profile-reducer';\r\nimport {MyPosts} from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      posts: state.profilePage.posts,\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      addPost: (postMessageText) => {\r\n         dispatch(addPostActionCreator(postMessageText));\r\n      }\r\n   }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport {ProfileInfo} from './ProfInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nexport const Profile = (props) => {\r\n   return (\r\n      <div>\r\n         <ProfileInfo profile={props.profile}\r\n                      status={props.status}\r\n                      updateOwnProfileStatus={props.updateOwnProfileStatus}/>\r\n         <MyPostsContainer/>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {Profile} from './Profile';\r\nimport {getStatusFromUser, getUserProfileData, updateOwnProfileStatus} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass ProfileContainer extends React.Component {\r\n   componentDidMount = () => {\r\n      let userId = this.props.match.params.userId;\r\n      if (!userId) {\r\n         userId = this.props.authorizedUserId\r\n         if (!userId) {\r\n            this.props.history.push('/login')\r\n         }\r\n      }\r\n      this.props.getUserProfileData(userId);\r\n      this.props.getStatusFromUser(userId);\r\n   }\r\n\r\n   render() {\r\n      return <Profile {...this.props}\r\n                      profile={this.props.profile}\r\n                      status={this.props.status}\r\n                      updateOwnProfileStatus={this.props.updateOwnProfileStatus}/>\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   profile: state.profilePage.profile,\r\n   status: state.profilePage.status,\r\n   authorizedUserId: state.auth.id,\r\n   isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, {getUserProfileData, getStatusFromUser, updateOwnProfileStatus}),\r\n   withRouter,\r\n   // withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n","let initializeState = {\r\n   dialogs: [\r\n      {id: 1, name: 'Egor'},\r\n      {id: 2, name: 'Andrew'},\r\n      {id: 3, name: 'David'}\r\n   ],\r\n   messages: [\r\n      {id: 1, message: 'Hi'},\r\n      {id: 2, message: 'How are you?'},\r\n      {id: 3, message: 'I can met with you'}\r\n   ],\r\n};\r\n\r\nexport const dialogsReducer = (state = initializeState, action) => {\r\n   switch (action.type) {\r\n      case SEND_MESSAGE:\r\n         let newMessage = action.messageText;\r\n         return {\r\n            ...state,\r\n            messages: [...state.messages, {id: 6, message:newMessage}]\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\n//Actions Type\r\nconst SEND_MESSAGE = 'DIALOGS/ADD-MESSAGE';\r\n\r\n//Actions\r\nexport const sendMessageCreator = (messageText) => ({type: SEND_MESSAGE, messageText});\r\n\r\n\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nexport const Message = (props) => {\r\n   return (\r\n      <div className={s.message}>{props.message}</div>\r\n   )\r\n}\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const DialogItem = (props) => {\r\n   let path = '/dialogs/' + props.id;\r\n   return (\r\n      <div className={s.dialog + ' ' + s.active}>\r\n         <NavLink to={path}>{props.name}</NavLink>\r\n      </div>\r\n   )\r\n}","import React from 'react';\r\nimport {Field,reduxForm} from 'redux-form';\r\nimport {Textarea} from '../../common/FormsControls/FormControls';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\n\r\nconst maxLength50 = maxLengthCreator(100)\r\n\r\nconst AddMessageForm = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <div>\r\n            <Field component={Textarea}\r\n                   name={'newMessageText'}\r\n                   validate={[required,maxLength50]}\r\n                   placeholder={'Enter your message'}\r\n            />\r\n         </div>\r\n         <div>\r\n            <button>Send message</button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\n\r\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n   isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Redirect to='/login'/>\r\n         return <Component {...this.props}/>\r\n      }\r\n   }\r\n\r\n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n   return ConnectedAuthRedirectComponent;\r\n}","import {sendMessageCreator,} from '../../redux/dialogs-reducer';\r\nimport {Dialogs} from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {withAuthRedirect} from '../hoc/withAuthRedirect';\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      dialogsPage: state.dialogsPage\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      addMessage: (messageText) => {\r\n         dispatch(sendMessageCreator(messageText))\r\n      },\r\n   }\r\n}\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, mapDispatchToProps),\r\n   withAuthRedirect\r\n)(Dialogs);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {Message} from './Message/Message';\r\nimport {DialogItem} from './Dialog/Dialog';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\nexport const Dialogs = (props) => {\r\n\r\n   let state = props.dialogsPage;\r\n\r\n   let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n   let messagesElements = state.messages.map(m => <Message key={m.id} message={m.message}/>);\r\n\r\n   let addNewMessage = (value) => {\r\n      props.addMessage(value.newMessageText);\r\n   }\r\n\r\n   return (\r\n      <div className={s.dialogs}>\r\n         <div className={s.dialogsItems}>\r\n            {dialogsElements}\r\n         </div>\r\n         <div className={s.messages}>\r\n            <div>{messagesElements}</div>\r\n            <div className={s.addMessage}>\r\n               <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n","import {instance} from './api';\r\n\r\nexport const usersAPI = {\r\n\r\n\tgetUsers(currentPage = 1, pageSize = 10) {\r\n\t\treturn instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.data;\r\n\t\t\t});\r\n\t},\r\n\tfollow(userId) {\r\n\t\treturn instance.post(`follow/${userId}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.data;\r\n\t\t\t});\r\n\t},\r\n\tunfollow(userId) {\r\n\t\treturn instance.delete(`follow/${userId}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.data;\r\n\t\t\t});\r\n\t},\r\n}","import {usersAPI} from '../api/user-api';\r\n\r\nlet initializeState = {\r\n   users: [],\r\n   pageSize: 5,\r\n   totalUsersCount: 0,\r\n   currentPage: 1,\r\n   isFetching: true,\r\n   followingInProgress: [1, 2]\r\n};\r\n\r\nexport const usersReducer = (state = initializeState, action) => {\r\n   switch (action.type) {\r\n      case FOLLOW:\r\n         return {\r\n            ...state,\r\n            users: state.users.map(u => {\r\n               if (u.id === action.userId) {\r\n                  return {...u, followed: true}\r\n               }\r\n               return u;\r\n            })\r\n         };\r\n      case UNFOLLOW:\r\n         return {\r\n            ...state,\r\n            users: state.users.map(u => {\r\n               if (u.id === action.userId) {\r\n                  return {...u, followed: false}\r\n               }\r\n               return u;\r\n            })\r\n         };\r\n      case SET_USERS: {\r\n         return {...state, users: action.users}\r\n      }\r\n      case SET_CURRENT_PAGE: {\r\n         return {...state, currentPage: action.currentPage}\r\n      }\r\n      case SET_TOTAL_USERS_COUNT: {\r\n         return {...state, totalUsersCount: action.count}\r\n      }\r\n      case TOGGLE_IS_FETCHING: {\r\n         return {...state, isFetching: action.isFetching}\r\n      }\r\n      case TOGGLE_IS_FOLLOWING_IN_PROGRESS: {\r\n         return {\r\n            ...state,\r\n            followingInProgress: action.isFetching\r\n               ? [...state.followingInProgress, action.userId]\r\n               : state.followingInProgress.filter(id => id !== action.userId)\r\n         }\r\n      }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\n//Actions type\r\nconst FOLLOW = 'USERS/FOLLOW';\r\nconst UNFOLLOW = 'USERS/UNFOLLOW';\r\nconst SET_USERS = 'USERS/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'USERS/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'USERS/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'USERS/IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'USERS/TOGGLE_IS_FOLLOWING_IN_PROGRESS';\r\n\r\n//Actions\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n   type: TOGGLE_IS_FOLLOWING_IN_PROGRESS,\r\n   isFetching,\r\n   userId\r\n});\r\n\r\n//Thunks\r\nexport const requestUsers = (requestingPage, pageSize) => (dispatch) => {\r\n   dispatch(toggleIsFetching(true))\r\n   dispatch(setCurrentPage(requestingPage))\r\n   usersAPI.getUsers(requestingPage, pageSize).then(data => {\r\n      dispatch(toggleIsFetching(false))\r\n      dispatch(setUsers(data.items))\r\n      dispatch(setUsersTotalCount(data.totalCount))\r\n   });\r\n}\r\n\r\nexport const follow = (userId) => (dispatch) => {\r\n   dispatch(toggleFollowingProgress(true, userId));\r\n   usersAPI.follow(userId)\r\n      .then(response => {\r\n         if (response.resultCode === 0) {\r\n            dispatch(followSuccess(userId));\r\n         }\r\n         dispatch(toggleFollowingProgress(false, userId));\r\n      });\r\n}\r\n\r\nexport const unfollow = (userId) => (dispatch) => {\r\n   dispatch(toggleFollowingProgress(true, userId));\r\n   usersAPI.unfollow(userId)\r\n      .then(response => {\r\n         if (response.resultCode === 0) {\r\n            dispatch(unfollowSuccess(userId));\r\n         }\r\n         dispatch(toggleFollowingProgress(false, userId));\r\n      });\r\n}\r\n","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport userPhoto from '../../asets/images/user.png'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const Users = (props) => {\r\n   let pages = []\r\n   for (let i = 505; i <= 525; i++) {\r\n      pages.push(i)\r\n   }\r\n\r\n   return (\r\n      <div className={s.users_wrapper}>\r\n         <div>\r\n            {pages.map(p => {\r\n               return <span key={p.id} className={props.currentPage === p && s.selectPage}\r\n                            onClick={(e) => {\r\n                               props.onPageChanged(p);\r\n                            }}>{p}</span>\r\n            })}\r\n         </div>\r\n         {\r\n            props.users.map(u => <div key={u.id}>\r\n               <div className={s.user}>\r\n                  <div>\r\n                     <NavLink to={'/profile/' + u.id}>\r\n                        <img alt={'user'} className={s.avatar}\r\n                             src={u.photos.small != null ? u.photos.small : userPhoto}/>\r\n                     </NavLink>\r\n                  </div>\r\n                  <div>\r\n                     {u.followed\r\n                        ? <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                  className={s.unfollow_button}\r\n                                  onClick={() => {\r\n                                     props.unfollow(u.id)\r\n                                  }}>Unfollow</button>\r\n                        :\r\n                        <button disabled={props.followingInProgress.some(id => id === u.id)} className={s.follow_button}\r\n                                onClick={() => {\r\n                                   props.follow(u.id)\r\n                                }}>Follow</button>}\r\n                  </div>\r\n               </div>\r\n               <div>\r\n                  <div>{u.name}</div>\r\n                  <div>{u.status}</div>\r\n               </div>\r\n               <div>\r\n                  <div>{'u.location.city'}</div>\r\n                  <div>{'u.location.country'}</div>\r\n               </div>\r\n            </div>)\r\n         }\r\n      </div>\r\n   )\r\n}\r\n","export const getUsers = (state) => {\r\n   return state.usersPage.users\r\n}\r\nexport const getPageSize = (state) => {\r\n   return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n   return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n   return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n   return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n   return state.usersPage.followingInProgress\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {follow, requestUsers, setCurrentPage, toggleFollowingProgress, unfollow,} from '../../redux/users-reducer';\r\nimport {Users} from './Users';\r\nimport {Preloader} from '../common/preloader/Preloader';\r\nimport {compose} from 'redux';\r\nimport {\r\n   getCurrentPage,\r\n   getFollowingInProgress,\r\n   getIsFetching,\r\n   getPageSize,\r\n   getTotalUsersCount,\r\n   getUsers,\r\n} from '../../redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n   componentDidMount() {\r\n      this.props.requestUsers(this.props.currentPage, this.props.pageSize)\r\n   }\r\n\r\n   onPageChanged = (pageNumber) => {\r\n      this.props.requestUsers(pageNumber, this.props.pageSize)\r\n      this.props.setCurrentPage(pageNumber);\r\n   }\r\n\r\n   render() {\r\n      return <>\r\n         {this.props.isFetching ? <Preloader/> : null}\r\n         <Users pageSize={this.props.pageSize}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                followingInProgress={this.props.followingInProgress}\r\n         />\r\n      </>\r\n   }\r\n}\r\n\r\n/*const mapStateToProps = (state) => {\r\n   return {\r\n      users: state.usersPage.users,\r\n      pageSize: state.usersPage.pageSize,\r\n      totalUsersCount: state.usersPage.totalUsersCount,\r\n      currentPage: state.usersPage.currentPage,\r\n      isFetching: state.usersPage.isFetching,\r\n      followingInProgress: state.usersPage.followingInProgress\r\n   }\r\n}*/\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      users: getUsers(state),\r\n      pageSize: getPageSize(state),\r\n      totalUsersCount: getTotalUsersCount(state),\r\n      currentPage: getCurrentPage(state),\r\n      isFetching: getIsFetching(state),\r\n      followingInProgress: getFollowingInProgress(state)\r\n   }\r\n}\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, {\r\n      follow, unfollow, setCurrentPage,\r\n      toggleFollowingProgress, requestUsers,\r\n   }),\r\n)(UsersContainer)","import React from 'react';\r\nimport s from './Login.module.css';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {Input} from '../common/FormsControls/FormControls';\r\nimport {required} from '../../utils/validators/validators';\r\nimport {connect} from 'react-redux';\r\nimport {login} from '../../redux/auth-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport const LoginForm = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <div>\r\n            <Field placeholder={'Login'}\r\n                   name={'login'}\r\n                   component={Input}\r\n                   validate={[required]}\r\n            />\r\n         </div>\r\n         <div>\r\n            <Field placeholder={'Password'}\r\n                   name={'password'}\r\n                   type={'password'}\r\n                   component={Input}\r\n                   validate={[required]}\r\n            />\r\n         </div>\r\n         <div>\r\n            <Field type={'checkbox'}\r\n                   name={'rememberMe'}\r\n                   component={Input}\r\n                   validate={[required]}\r\n            />Remember me\r\n         </div>\r\n         <div>\r\n            <button>Login</button>\r\n         </div>\r\n         {props.error &&  <div className={s.formSummaryError}>{props.error}</div>}\r\n      </form>\r\n   )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n   const onSubmit = (formData) => {\r\n      props.login(formData.login, formData.password, formData.rememberMe)\r\n   }\r\n   if (props.isAuth) {\r\n      return <Redirect to={'/profile'}/>\r\n   }\r\n   return (\r\n      <div className={s.login}>\r\n         <h1>Login</h1>\r\n         <LoginReduxForm onSubmit={onSubmit}/>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   isAuth: state.auth.isAuth\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)\r\n","import {getAuthUserData} from './auth-reducer';\r\n\r\nlet initializeState = {\r\n   initialized: false\r\n};\r\n\r\nexport const appReducer = (state = initializeState, action) => {\r\n   switch (action.type) {\r\n      case INITIALIZED_SUCCESS: {\r\n         return {...state, initialized: true}\r\n      }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\n//Actions type\r\nconst INITIALIZED_SUCCESS = 'APP/INITIALIZED-SUCCESS';\r\n\r\n//Actions\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\n//Thunks\r\nexport const initializeApp = () => (dispatch) => {\r\n\r\n   let promise = dispatch(getAuthUserData())\r\n\r\n   Promise.all([promise])\r\n      .then(() => {\r\n         dispatch(initializedSuccess())\r\n      })\r\n}","import React from 'react';\nimport './App.css';\nimport {Navbar} from './components/Navbar/Navbar';\nimport {News} from './components/News/News';\nimport {Music} from './components/Music/Music';\nimport {Settings} from './components/Settings/Settings';\nimport {Route, withRouter} from 'react-router-dom';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport Login from './components/Login/Login';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport {initializeApp} from './redux/app-reducer';\nimport {Preloader} from './components/common/preloader/Preloader';\n\nclass App extends React.Component {\n\n   componentDidMount() {\n      this.props.initializeApp()\n   }\n\n   render() {\n      if (!this.props.initialized) {\n         return <Preloader/>\n      }\n\n      return (\n         <div className='all_wrapper'>\n            <div className='app-wrapper'>\n               <HeaderContainer/>\n               <Navbar/>\n               <div className='app-wrapper-content'>\n                  <Route path='/login' render={() => <Login/>}/>\n                  <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                  <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                  <Route path='/news' render={() => <News/>}/>\n                  <Route path='/music' render={() => <Music/>}/>\n                  <Route path='/settings' render={() => <Settings/>}/>\n                  <Route path='/users' render={() => <UsersContainer/>}/>\n               </div>\n            </div>\n         </div>\n      );\n   }\n}\n\nconst mapStateToProps = (state) => ({\n   initialized: state.app.initialized\n})\n\nexport default compose(\n   withRouter,\n   connect(mapStateToProps, {initializeApp}))(App);\n\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {profileReducer} from './profile-reducer';\r\nimport {dialogsReducer} from './dialogs-reducer';\r\nimport {usersReducer} from './users-reducer';\r\nimport {authReducer} from './auth-reducer';\r\nimport {appReducer} from './app-reducer';\r\nimport thinkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n   profilePage: profileReducer,\r\n   dialogsPage: dialogsReducer,\r\n   usersPage: usersReducer,\r\n   auth: authReducer,\r\n   form: formReducer,\r\n   app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thinkMiddleware));\r\n\r\nwindow.store = store;\r\nexport default store;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n   <BrowserRouter>\n      <Provider store={store}>\n         <App/>\n      </Provider>\n   </BrowserRouter>, document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users_wrapper\":\"Users_users_wrapper__1ZOyV\",\"selectPage\":\"Users_selectPage__1cRU0\",\"avatar\":\"Users_avatar__1H79U\",\"follow_button\":\"Users_follow_button__33hVr\",\"unfollow_button\":\"Users_unfollow_button__B7zj3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2jO0p\",\"logo_name\":\"Header_logo_name__3P1L2\",\"login\":\"Header_login__F3Un5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1vx3c\",\"avatarImg\":\"ProfileInfo_avatarImg__3GLfN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3ogJB\",\"posts\":\"MyPosts_posts__32EhU\",\"add_post\":\"MyPosts_add_post__3RIGb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3XkRq\",\"error\":\"FormControls_error__3bBT2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Login_formSummaryError__30W5h\"};"],"sourceRoot":""}