{"version":3,"sources":["components/Navbar/Navbar.module.css","asets/images/preloader.gif","components/common/preloader/Preloader.module.css","asets/images/avatar.png","components/Profile/Post/Post.module.css","asets/images/user.png","components/Dialogs/Dialogs.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Header/Header.jsx","api/api.js","api/auth-api.js","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/common/preloader/Preloader.jsx","components/Profile/ProfInfo/ProfileStatus.jsx","components/Profile/ProfInfo/ProfileInfo.jsx","api/profile-api.js","redux/profile-reducer.js","components/Profile/Post/Post.jsx","utils/validators/validators.js","components/common/FormsControls/FormControls.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/hoc/withAuthRedirect.jsx","components/Profile/ProfileContainer.jsx","redux/dialogs-reducer.js","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/DialogsContainer.jsx","components/Dialogs/Dialogs.jsx","api/user-api.js","redux/users-reducer.js","components/Users/Users.jsx","components/Users/UsersContainer.jsx","components/Login/Login.jsx","App.js","redux/redux-store.js","index.js","components/Users/Users.module.css","components/Header/Header.module.css","components/Profile/ProfInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/common/FormsControls/FormControls.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","active","to","activeClassName","activeLink","News","props","content","Music","Settings","Header","header","alt","src","logo_name","login","isAuth","onClick","logout","instance","axios","withCredentials","baseURL","headers","authAPI","get","email","password","rememberMe","post","delete","initializeState","id","isFetching","setAuthUserData","type","data","getAuthUserData","dispatch","then","response","resultCode","HeaderContainer","this","React","Component","connect","state","auth","Preloader","preloader","ProfileStatus","editMode","status","activatedMode","setState","deactivatedMode","updateOwnProfileStatus","onStatusChange","e","currentTarget","value","componentDidUpdate","prevProps","prevState","onChange","autoFocus","onBlur","ProfileInfo","profile","descriptionBlock","avatarImg","photos","large","avatar","aboutMe","contacts","instagram","lookingForAJob","userId","lookingForAJobDescription","profileAPI","res","put","posts","message","likesCount","Post","required","maxLengthCreator","maxLength","length","FormControl","input","meta","child","hasError","touched","error","formControl","children","Textarea","restProps","Input","maxLength10","AddNewPostForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","name","validate","MyPostsContainer","profilePage","addPost","postMessageText","addPostActionCreator","postsElements","map","p","key","postsBlock","newPostText","Profile","mapStateToPropsForRedirect","withAuthRedirect","RedirectComponent","ProfileContainer","componentDidMount","params","getUserProfileData","getStatusFomUser","compose","userStatus","setOwnProfileStatus","withRouter","dialogs","messages","Message","DialogItem","path","dialog","maxLength50","dialogsPage","addMessage","messageText","sendMessageCreator","dialogsElements","d","messagesElements","m","dialogsItems","newMessageText","usersAPI","currentPage","pageSize","users","totalUsersCount","followingInProgress","toggleIsFetching","toggleFollowingProgress","Users","pages","i","push","users_wrapper","selectPage","onPageChanged","u","user","small","userPhoto","followed","disabled","some","unfollow_button","unfollow","follow_button","follow","UsersContainer","pageNumber","getUsers","setCurrentPage","usersPage","followSuccess","unfollowSuccess","items","count","totalCount","LoginReduxForm","formData","App","render","DialogsContainer","reducers","combineReducers","action","newMessage","filter","formReducer","store","createStore","applyMiddleware","thinkMiddlaware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,WAAa,6B,sFCDrFD,EAAOC,QAAU,IAA0B,uC,oBCC3CD,EAAOC,QAAU,CAAC,UAAY,+B,oBCD9BD,EAAOC,QAAU,IAA0B,oC,oBCC3CD,EAAOC,QAAU,CAAC,KAAO,qB,oBCDzBD,EAAOC,QAAU,IAA0B,kC,2HCC3CD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,aAAe,8BAA8B,SAAW,0BAA0B,WAAa,4BAA4B,SAAW,4B,wCCWxMC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,6ECdOC,EAAS,WACnB,OACG,yBAAKC,UAAWC,IAAEC,KACf,yBAAKF,UAAS,UAAKC,IAAEE,KAAP,YAAeF,IAAEG,SAC5B,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBL,IAAEM,YAA1C,YAEH,yBAAKP,UAAWC,IAAEE,MACf,kBAAC,IAAD,CAASE,GAAG,WAAWC,gBAAiBL,IAAEM,YAA1C,aAEH,yBAAKP,UAAWC,IAAEE,MACf,kBAAC,IAAD,CAASE,GAAG,QAAQC,gBAAiBL,IAAEM,YAAvC,SAEH,yBAAKP,UAAWC,IAAEE,MACf,kBAAC,IAAD,CAASE,GAAG,SAASC,gBAAiBL,IAAEM,YAAxC,UAEH,yBAAKP,UAAWC,IAAEE,MACf,kBAAC,IAAD,CAASE,GAAG,YAAYC,gBAAiBL,IAAEM,YAA3C,aAEH,yBAAKP,UAAWC,IAAEE,MACf,kBAAC,IAAD,CAASE,GAAG,SAASC,gBAAiBL,IAAEM,YAAxC,Y,kBCpBCC,EAAO,SAACC,GAClB,OACG,yBAAKT,UAAWC,IAAES,SAAlB,sB,kBCFOC,EAAQ,SAACF,GACnB,OACG,yBAAKT,UAAWC,IAAES,SAAlB,U,kBCFOE,EAAW,SAACH,GACtB,OACG,yBAAKT,UAAWC,IAAES,SAAlB,a,yDCDOG,EAAS,SAACJ,GACpB,OACG,4BAAQT,UAAWC,IAAEa,QAClB,yBAAKC,IAAK,SAAUC,IAAI,qEACxB,yBAAKhB,UAAWC,IAAEgB,WAAlB,kBACA,yBAAKjB,UAAWC,IAAEiB,OACdT,EAAMU,OACF,iCAAOV,EAAMS,MAAb,MAAsB,4BAAQE,QAASX,EAAMY,QAAvB,WACtB,kBAAC,IAAD,CAAShB,GAAI,UAAb,Y,cCVJiB,E,OAAWC,OAAa,CACpCC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACR,UAAW,0CCJAC,EAAU,WAEjB,OAAOL,EAASM,IAAT,YAFAD,EAAU,SAKdE,EAAMC,GAA8B,IAArBC,EAAoB,wDACtC,OAAOT,EAASU,KAAT,aAA2B,CAACH,QAAMC,WAASC,gBAN3CJ,EAAU,WAUjB,OAAOL,EAASW,OAAT,eCPTC,EAAkB,CACnBC,GAAI,KACJN,MAAO,KACPX,MAAO,KACPkB,YAAY,EACZjB,QAAQ,GAkBEkB,EAAkB,SAACF,EAAIN,EAAOX,EAAOC,GAAnB,MAC5B,CAACmB,KA1BkB,gBA0BGC,KAAM,CAACJ,KAAIN,QAAOX,QAAOC,YAKrCqB,EAAkB,WAC5B,OAAO,SAACC,GACLd,IACIe,MAAK,SAAAC,GACH,GAAiC,IAA7BA,EAASJ,KAAKK,WAAkB,CAAC,IAAD,EACAD,EAASJ,KAAKA,KAA1CJ,EAD4B,EAC5BA,GAAIjB,EADwB,EACxBA,MAAOW,EADiB,EACjBA,MADiB,EACVV,OACvBsB,EAASJ,EAAgBF,EAAIjB,EAAOW,GAAO,UCnCpDgB,E,kLAEAC,KAAKrC,MAAM+B,oB,+BAIX,OAAO,kBAAC,EAAWM,KAAKrC,W,GANAsC,IAAMC,WAgBrBC,eANS,SAACC,GAAD,MAAY,CACjC/B,OAAQ+B,EAAMC,KAAKhC,OACnBD,MAAOgC,EAAMC,KAAKjC,SAImB,CAACsB,kBAAgBnB,ODoCnC,WACnB,OAAO,SAACoB,GACLd,IACIe,MAAK,SAAAC,GAC8B,IAA7BA,EAASJ,KAAKK,YACfH,EAASJ,EAAgB,KAAM,KAAM,MAAM,UCzC3CY,CAAmDJ,G,4DCZnDO,EAJC,WACf,OAAO,6BAAK,yBAAKrC,IAAK,YAAaf,UAAWC,IAAEoD,UAAWrC,IAAKqC,QC2ClDC,E,4MA7CZJ,MAAQ,CACLK,UAAU,EACVC,OAAQ,EAAK/C,MAAM+C,Q,EAEtBC,cAAgB,WACb,EAAKC,SAAS,CAACH,UAAU,K,EAE5BI,gBAAkB,WACf,EAAKD,SAAS,CAACH,UAAU,IACzB,EAAK9C,MAAMmD,uBAAuB,EAAKV,MAAMM,S,EAEhDK,eAAiB,SAACC,GACf,EAAKJ,SAAS,CAACF,OAAQM,EAAEC,cAAcC,S,EAG1CC,mBAAqB,SAACC,EAAWC,GAC1BD,EAAUV,SAAW,EAAK/C,MAAM+C,QACjC,EAAKE,SAAS,CACXF,OAAQ,EAAK/C,MAAM+C,U,uDAMzB,OACG,8BACKV,KAAKI,MAAMK,UACb,6BACG,0BAAMnC,QAAS0B,KAAKW,eAChBX,KAAKrC,MAAM+C,QAAU,UAG3BV,KAAKI,MAAMK,UACZ,6BACG,2BAAOa,SAAUtB,KAAKe,eACfQ,WAAW,EACXC,OAAQxB,KAAKa,gBACbK,MAAOlB,KAAKI,MAAMM,e,GAvCZT,IAAMC,W,kBCIrBuB,EAAc,SAAC9D,GACzB,OAAKA,EAAM+D,QAKR,6BACG,yBAAKxE,UAAWC,IAAEwE,kBACf,yBAAKzE,UAAWC,IAAEyE,WACf,yBAAK3D,IAAI,SAASC,IAAKP,EAAM+D,QAAQG,OAAOC,MAAQnE,EAAM+D,QAAQG,OAAOC,MAAQC,OAEpF,6BACG,kBAAC,EAAD,CAAerB,OAAQ/C,EAAM+C,OAAQI,uBAAwBnD,EAAMmD,0BAEtE,2BAAInD,EAAM+D,QAAQM,SAClB,2BAAIrE,EAAM+D,QAAQO,SAASC,WAC3B,2BAAIvE,EAAM+D,QAAQS,gBAClB,2BAAIxE,EAAM+D,QAAQU,QAClB,2BAAIzE,EAAM+D,QAAQW,6BAhBjB,kBAAC,EAAD,O,QCNAC,EAAa,SACZF,GACR,OAAO5D,EAASM,IAAT,kBAAwBsD,IAC3BxC,MAAK,SAAA2C,GACH,OAAOA,EAAI9C,SAJV6C,EAAa,SAQTF,GACX,OAAO5D,EAASM,IAAT,yBAA+BsD,IAClCxC,MAAK,SAAA2C,GAAG,OAAIA,MAVTD,GAAa,SAaA5B,GACpB,OAAOlC,EAASgE,IAAT,kBAA+B,CAAC9B,WACnCd,MAAK,SAAA2C,GACH,OAAOA,EAAI9C,SCXnBL,GAAkB,CACnBqD,MAAO,CACJ,CAACpD,GAAI,EAAGqD,QAAS,kEAAmEC,WAAY,IAChG,CAACtD,GAAI,EAAGqD,QAAS,8CAA+CC,WAAY,KAE/EjB,QAAS,KACThB,OAAQ,I,yCCVEkC,GAAO,SAACjF,GAClB,OAAO,yBAAKT,UAAWC,KAAEE,MACtB,yBAAKY,IAAK,OAAQC,IAAI,mEACtB,6BACIP,EAAM+E,QACP,uCAFH,IAEuB/E,EAAMgF,c,oBCRtBE,GAAW,SAAA3B,GACrB,IAAGA,EAEH,MAAO,qBAGG4B,GAAmB,SAACC,GAAD,OAAe,SAAC7B,GAC7C,GAAGA,GAASA,EAAM8B,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,c,6BCJnCE,GAAc,SAAC,GAAmC,EAAlCC,MAAmC,IAA5BC,EAA2B,EAA3BA,KAAgBxF,GAAW,EAArByF,MAAqB,0CAC/CC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACG,yBAAKrG,UAAWC,KAAEqG,YAAc,KAAOH,EAAWlG,KAAEoG,MAAQ,KACzD,6BACI5F,EAAM8F,UAETJ,GAAY,8BAAOF,EAAKI,SAKrBG,GAAW,SAAC/F,GAAW,IAC1BuF,EAA6BvF,EAA7BuF,MAAgBS,GAAahG,EAAtBwF,KADkB,aACIxF,EADJ,mBAEhC,OAAO,kBAAC,GAAgBA,EAAO,8CAAcuF,EAAUS,MAG7CC,GAAQ,SAACjG,GAAW,IACvBuF,EAA6BvF,EAA7BuF,MAAgBS,GAAahG,EAAtBwF,KADe,aACOxF,EADP,mBAE7B,OAAO,kBAAC,GAAgBA,EAAO,2CAAWuF,EAAUS,MCGjDE,GAAcf,GAAiB,IAmB/BgB,GAAiBC,aAAU,CAACC,KAAM,wBAAjBD,EAjBA,SAACpG,GACrB,OACG,0BAAMsG,SAAUtG,EAAMuG,cACnB,6BACG,kBAACC,GAAA,EAAD,CAAOC,YAAY,WACZC,UAAWX,GACXY,KAAK,cACLC,SAAU,CAAC1B,GAASgB,OAG9B,6BACG,iDClBGW,GADUrE,aAdD,SAACC,GACtB,MAAO,CACJqC,MAAOrC,EAAMqE,YAAYhC,UAIJ,SAAC9C,GACzB,MAAO,CACJ+E,QAAS,SAACC,GACPhF,ELgC2B,SAACgF,GAAD,MAAsB,CAACnF,KA5C1C,WA4C0DmF,mBKhCzDC,CAAqBD,QAKdxE,EDZF,SAACxC,GACrB,IAAIkH,EACDlH,EAAM8E,MAAMqC,KAAI,SAAAC,GAAC,OAAI,kBAAC,GAAD,CAAMC,IAAKD,EAAE1F,GAAIqD,QAASqC,EAAErC,QAASC,WAAYoC,EAAEpC,gBAM3E,OACG,yBAAKzF,UAAWC,KAAE8H,YACf,wCACA,kBAACnB,GAAD,CAAgBG,SAPL,SAAC/C,GACfvD,EAAM+G,QAAQxD,EAAMgE,gBAOjB,yBAAKhI,UAAWC,KAAEsF,OACdoC,OEhBAM,GAAU,SAACxH,GACrB,OACG,6BACG,kBAAC,EAAD,CAAa+D,QAAS/D,EAAM+D,QACfhB,OAAQ/C,EAAM+C,OACdI,uBAAwBnD,EAAMmD,yBAC3C,kBAAC,GAAD,QCNHsE,GAA6B,SAAChF,GAAD,MAAY,CAC5C/B,OAAQ+B,EAAMC,KAAKhC,SAGTgH,GAAmB,SAACnF,GAAe,IACvCoF,EADsC,uKAGtC,OAAKtF,KAAKrC,MAAMU,OACT,kBAAC6B,EAAcF,KAAKrC,OADI,kBAAC,IAAD,CAAUJ,GAAG,eAHN,GACZ0C,IAAMC,WAStC,OAFsCC,YAAQiF,GAARjF,CAAoCmF,ICRvEC,G,4MACHC,kBAAoB,WACjB,IAAIpD,EAAS,EAAKzE,MAAMX,MAAMyI,OAAOrD,OAChCA,IACFA,EAAS,MAEZ,EAAKzE,MAAM+H,mBAAmBtD,GAC9B,EAAKzE,MAAMgI,iBAAiBvD,I,uDAI5B,OAAO,kBAAC,GAAD,iBAAapC,KAAKrC,MAAlB,CACS+D,QAAS1B,KAAKrC,MAAM+D,QACpBhB,OAAQV,KAAKrC,MAAM+C,OACnBI,uBAAwBd,KAAKrC,MAAMmD,8B,GAd1Bb,IAAMC,WAuBtB0F,eACZzF,aANqB,SAACC,GAAD,MAAY,CACjCsB,QAAStB,EAAMqE,YAAY/C,QAC3BhB,OAAQN,EAAMqE,YAAY/D,UAID,CAACgF,mBRyBK,SAACtD,GAChC,OAAO,SAACzC,GACL2C,EAAsBF,GAClBxC,MAAK,SAAAH,GACHE,EAZR,CAACH,KA9CoB,mBA8CIkC,QAYWjC,SQ7BSkG,iBRkCjB,SAACvD,GAAD,OAAY,SAACzC,GAC1C2C,EAAyBF,GACrBxC,MAAK,SAAA2C,GACH5C,EAjBqC,CAACH,KAhDf,0BAgD8CqG,WAiB9CtD,EAAI9C,YQrC+BqB,uBRyC7B,SAACJ,GAAD,OAAY,SAACf,GAChD2C,GAAkC5B,GAC9Bd,MAAK,SAAAH,GACqB,IAApBA,EAAKK,YACNH,EAxBuB,SAACe,GAAD,MAAa,CAAClB,KAhDlB,wBAgDgDkB,UAwB1DoF,CAAoBpF,WQ5CtCqF,IACAV,GAHYO,CAIbL,ICjCEnG,GAAkB,CACnB4G,QAAS,CACN,CAAC3G,GAAI,EAAGiF,KAAM,UACd,CAACjF,GAAI,EAAGiF,KAAM,UACd,CAACjF,GAAI,EAAGiF,KAAM,UAEjB2B,SAAU,CACP,CAAC5G,GAAI,EAAGqD,QAAS,MACjB,CAACrD,GAAI,EAAGqD,QAAS,gBACjB,CAACrD,GAAI,EAAGqD,QAAS,wB,oBCRVwD,GAAU,SAACvI,GACrB,OACG,yBAAKT,UAAWC,KAAEuF,SAAU/E,EAAM+E,UCD3ByD,GAAa,SAACxI,GACxB,IAAIyI,EAAO,YAAczI,EAAM0B,GAC/B,OACG,yBAAKnC,UAAWC,KAAEkJ,OAAS,IAAMlJ,KAAEG,QAChC,kBAAC,IAAD,CAASC,GAAI6I,GAAOzI,EAAM2G,QCH7BgC,GAAcxD,GAAiB,KAmBtBiB,gBAAU,CAACC,KAAM,wBAAjBD,EAjBQ,SAACpG,GACrB,OACG,0BAAMsG,SAAUtG,EAAMuG,cACnB,6BACG,kBAACC,GAAA,EAAD,CAAOE,UAAWX,GACXY,KAAM,iBACNC,SAAU,CAAC1B,GAASyD,IACpBlC,YAAa,wBAGvB,6BACG,qDCGGwB,eACZzF,aAfqB,SAACC,GACtB,MAAO,CACJmG,YAAanG,EAAMmG,gBAIE,SAAC5G,GACzB,MAAO,CACJ6G,WAAY,SAACC,GACV9G,EJYyB,SAAC8G,GAAD,MAAkB,CAACjH,KA5BhC,cA4BoDiH,eIZvDC,CAAmBD,SAOlCpB,GAFYO,ECfQ,SAACjI,GAErB,IAAIyC,EAAQzC,EAAM4I,YAEdI,EAAkBvG,EAAM4F,QAAQlB,KAAI,SAAA8B,GAAC,OAAI,kBAAC,GAAD,CAAYtC,KAAMsC,EAAEtC,KAAMU,IAAK4B,EAAEvH,GAAIA,GAAIuH,EAAEvH,QACpFwH,EAAmBzG,EAAM6F,SAASnB,KAAI,SAAAgC,GAAC,OAAI,kBAAC,GAAD,CAAS9B,IAAK8B,EAAEzH,GAAIqD,QAASoE,EAAEpE,aAM9E,OACG,yBAAKxF,UAAWC,KAAE6I,SACf,yBAAK9I,UAAWC,KAAE4J,cACdJ,GAEJ,yBAAKzJ,UAAWC,KAAE8I,UACf,6BAAMY,GACN,yBAAK3J,UAAWC,KAAEqJ,YACf,kBAAC,GAAD,CAAgBvC,SAZR,SAAC/C,GAClBvD,EAAM6I,WAAWtF,EAAM8F,yBCZhBC,GAAW,WAEmB,IAAjCC,EAAgC,uDAAlB,EAAGC,EAAe,uDAAJ,GACpC,OAAO3I,EAASM,IAAT,qBAA2BoI,EAA3B,kBAAgDC,IACrDvH,MAAK,SAAAC,GACL,OAAOA,EAASJ,SALPwH,GAAW,SAQhB7E,GACN,OAAO5D,EAASU,KAAT,iBAAwBkD,IAC7BxC,MAAK,SAAAC,GACL,OAAOA,EAASJ,SAXPwH,GAAW,SAcd7E,GACR,OAAO5D,EAASW,OAAT,iBAA0BiD,IAC/BxC,MAAK,SAAAC,GACL,OAAOA,EAASJ,SCThBL,GAAkB,CACnBgI,MAAO,GACPD,SAAU,EACVE,gBAAiB,EACjBH,YAAa,EACb5H,YAAY,EACZgI,oBAAqB,CAAC,EAAG,IAuDfC,GAAmB,SAACjI,GAAD,MAAiB,CAACE,KAhEvB,cAgEiDF,eAC/DkI,GAA0B,SAAClI,EAAY8C,GAAb,MAAyB,CAC7D5C,KAjEqC,kCAkErCF,aACA8C,W,yCCtEUqF,GAAQ,SAAC9J,GAEnB,IADA,IAAI+J,EAAQ,GACHC,EAAI,IAAKA,GAAK,IAAKA,IACzBD,EAAME,KAAKD,GAGd,OACG,yBAAKzK,UAAWC,KAAE0K,eACf,6BACIH,EAAM5C,KAAI,SAAAC,GACR,OAAO,0BAAMC,IAAKD,EAAE1F,GAAInC,UAAWS,EAAMuJ,cAAgBnC,GAAK5H,KAAE2K,WACnDxJ,QAAS,SAAC0C,GACPrD,EAAMoK,cAAchD,KACnBA,OAIpBpH,EAAMyJ,MAAMtC,KAAI,SAAAkD,GAAC,OAAI,yBAAKhD,IAAKgD,EAAE3I,IAC9B,yBAAKnC,UAAWC,KAAE8K,MACf,6BACG,kBAAC,IAAD,CAAS1K,GAAI,YAAcyK,EAAE3I,IAC1B,yBAAKpB,IAAK,OAAQf,UAAWC,KAAE4E,OAC1B7D,IAAuB,MAAlB8J,EAAEnG,OAAOqG,MAAgBF,EAAEnG,OAAOqG,MAAQC,SAG1D,6BACIH,EAAEI,SACE,4BAAQC,SAAU1K,EAAM2J,oBAAoBgB,MAAK,SAAAjJ,GAAE,OAAIA,IAAO2I,EAAE3I,MACxDnC,UAAWC,KAAEoL,gBACbjK,QAAS,WACNX,EAAM6K,SAASR,EAAE3I,MAH5B,YAMF,4BAAQgJ,SAAU1K,EAAM2J,oBAAoBgB,MAAK,SAAAjJ,GAAE,OAAIA,IAAO2I,EAAE3I,MAAKnC,UAAWC,KAAEsL,cAC1EnK,QAAS,WACNX,EAAM+K,OAAOV,EAAE3I,MAF1B,YAMT,6BACG,6BAAM2I,EAAE1D,MACR,6BAAM0D,EAAEtH,SAEX,6BACG,6BAAM,mBACN,6BAAM,6BC1ClBiI,G,4MAKHZ,cAAgB,SAACa,GACd,EAAKjL,MAAMkL,SAASD,EAAY,EAAKjL,MAAMwJ,UAC3C,EAAKxJ,MAAMmL,eAAeF,I,kEAL1B5I,KAAKrC,MAAMkL,SAAS7I,KAAKrC,MAAMuJ,YAAalH,KAAKrC,MAAMwJ,Y,+BASvD,OAAO,oCACHnH,KAAKrC,MAAM2B,WAAa,kBAAC,EAAD,MAAe,KACxC,kBAAC,GAAD,CAAO6H,SAAUnH,KAAKrC,MAAMwJ,SACrBE,gBAAiBrH,KAAKrC,MAAM0J,gBAC5BH,YAAalH,KAAKrC,MAAMuJ,YACxBa,cAAe/H,KAAK+H,cACpBX,MAAOpH,KAAKrC,MAAMyJ,MAClBoB,SAAUxI,KAAKrC,MAAM6K,SACrBE,OAAQ1I,KAAKrC,MAAM+K,OACnBpB,oBAAqBtH,KAAKrC,MAAM2J,2B,GApBnBrH,IAAMC,WAqCpB0F,eACZzF,aAZqB,SAACC,GACtB,MAAO,CACJgH,MAAOhH,EAAM2I,UAAU3B,MACvBD,SAAU/G,EAAM2I,UAAU5B,SAC1BE,gBAAiBjH,EAAM2I,UAAU1B,gBACjCH,YAAa9G,EAAM2I,UAAU7B,YAC7B5H,WAAYc,EAAM2I,UAAUzJ,WAC5BgI,oBAAqBlH,EAAM2I,UAAUzB,uBAKf,CACtBoB,OF2CgB,SAACtG,GAEpB,OAAO,SAACzC,GACLA,EAAS6H,IAAwB,EAAMpF,IACvC6E,GAAgB7E,GACZxC,MAAK,SAAAC,GACyB,IAAxBA,EAASC,YACVH,EA/Bc,SAACyC,GAAD,MAAa,CAAC5C,KAhE5B,SAgE0C4C,UA+BjC4G,CAAc5G,IAE1BzC,EAAS6H,IAAwB,EAAOpF,SEpDtCoG,SFyDU,SAACpG,GAEtB,OAAO,SAACzC,GACLA,EAAS6H,IAAwB,EAAMpF,IACvC6E,GAAkB7E,GACdxC,MAAK,SAAAC,GACyB,IAAxBA,EAASC,YACVH,EA5CgB,SAACyC,GAAD,MAAa,CAAC5C,KAhE5B,WAgE4C4C,UA4CrC6G,CAAgB7G,IAE5BzC,EAAS6H,IAAwB,EAAOpF,SElE5B0G,eFsBM,SAAC5B,GAAD,MAAkB,CAAC1H,KAhExB,mBAgEgD0H,gBErBnEM,2BAAyBqB,SF8BP,SAAC3B,EAAaC,GAEnC,OAAO,SAACxH,GACLA,EAAS4H,IAAiB,IAC1BN,GAAkBC,EAAaC,GAAUvH,MAAK,SAAAH,GAC3CE,EAAS4H,IAAiB,IAC1B5H,EAhB2B,CAACH,KAhEnB,YAgEoC4H,MAgB3B3H,EAAKyJ,QACvBvJ,EAf+C,CAACH,KAhE3B,wBAgEwD2J,MAejD1J,EAAK2J,oBEnCvC/D,GALYO,CAMb+C,I,qBCVIU,GAAiBtF,aAAU,CAACC,KAAM,SAAjBD,EAhCE,SAACpG,GACvB,OACG,0BAAMsG,SAAUtG,EAAMuG,cACnB,6BACG,kBAACC,GAAA,EAAD,CAAOC,YAAa,QACbE,KAAM,QACND,UAAWT,GACXW,SAAU,CAAC1B,OAGrB,6BACG,kBAACsB,GAAA,EAAD,CAAOC,YAAa,WACbE,KAAM,WACN9E,KAAM,WACN6E,UAAWT,GACXW,SAAU,CAAC1B,OAGrB,6BACG,kBAACsB,GAAA,EAAD,CAAO3E,KAAM,WACN8E,KAAM,aACND,UAAWT,GACXW,SAAU,CAAC1B,MAJrB,eAOA,6BACG,8CA2BG1C,gBAJS,SAACC,GAAD,MAAY,CACjC/B,OAAQ+B,EAAMC,KAAKhC,UAGkB,CAACD,MzBhBpB,SAACW,EAAOC,EAAUC,GACpC,OAAO,SAACU,GACLd,EAAcE,EAAOC,EAAUC,GAC3BW,MAAK,SAAAC,GAC8B,IAA7BA,EAASJ,KAAKK,YACfH,EAASD,WyBWTS,EAnBD,SAACxC,GAIZ,OAAIA,EAAMU,OACA,kBAAC,IAAD,CAAUd,GAAI,aAGrB,yBAAKL,UAAWC,KAAEiB,OACf,qCACA,kBAACiL,GAAD,CAAgBpF,SATL,SAACqF,GACf3L,EAAMS,MAAMkL,EAASlL,MAAOkL,EAAStK,SAAUsK,EAASrK,mBChCjDsK,GAAM,SAAC5L,GACjB,OACG,yBAAKT,UAAU,eACZ,yBAAKA,UAAU,eACZ,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,uBACZ,kBAAC,IAAD,CAAOkJ,KAAK,SAASoD,OAAQ,kBAAM,kBAAC,GAAD,SACnC,kBAAC,IAAD,CAAOpD,KAAK,oBAAoBoD,OAAQ,kBAAM,kBAAC,GAAD,SAC9C,kBAAC,IAAD,CAAOpD,KAAK,WAAWoD,OAAQ,kBAAM,kBAACC,GAAD,SACrC,kBAAC,IAAD,CAAOrD,KAAK,QAAQoD,OAAQ,kBAAM,kBAAC,EAAD,SAClC,kBAAC,IAAD,CAAOpD,KAAK,SAASoD,OAAQ,kBAAM,kBAAC,EAAD,SACnC,kBAAC,IAAD,CAAOpD,KAAK,YAAYoD,OAAQ,kBAAM,kBAAC,EAAD,SACtC,kBAAC,IAAD,CAAOpD,KAAK,SAASoD,OAAQ,kBAAM,kBAAC,GAAD,a,oBClB9CE,GAAWC,YAAgB,CAC5BlF,YrBO2B,WAAsC,IAArCrE,EAAoC,uDAA5BhB,GAAiBwK,EAAW,uCAChE,OAAQA,EAAOpK,MACZ,IAhBW,WAiBR,OAAO,eACDY,EADN,CAEGqC,MAAM,CAAE,CAACpD,GAAI,EAAGqD,QAASkH,EAAOjF,gBAAiBhC,WAAY,IAAxD,mBAA+DvC,EAAMqC,UAEhF,IApBmB,mBAqBhB,OAAO,eACDrC,EADN,CAEGsB,QAASkI,EAAOlI,UAGtB,IAzB0B,0BA0BvB,OAAO,eACDtB,EADN,CAEGM,OAAQkJ,EAAO/D,aAGrB,IA9ByB,wBA+BtB,OAAO,eACDzF,EADN,CAEGM,OAAQkJ,EAAOlJ,SAGrB,QACG,OAAON,IqBhCbmG,YZK2B,WAAsC,IAArCnG,EAAoC,uDAA5BhB,GAAiBwK,EAAW,uCAChE,OAAQA,EAAOpK,MACZ,IAjBe,cAkBZ,IAAIqK,EAAaD,EAAOnD,YACxB,OAAO,eACDrG,EADN,CAEG6F,SAAS,GAAD,mBAAM7F,EAAM6F,UAAZ,CAAsB,CAAC5G,GAAI,EAAGqD,QAAQmH,OAEpD,QACG,OAAOzJ,IYbb2I,ULQyB,WAAsC,IAArC3I,EAAoC,uDAA5BhB,GAAiBwK,EAAW,uCAC9D,OAAQA,EAAOpK,MACZ,IAnBS,SAoBN,OAAO,eACDY,EADN,CAEGgH,MAAOhH,EAAMgH,MAAMtC,KAAI,SAAAkD,GACpB,OAAIA,EAAE3I,KAAOuK,EAAOxH,OACV,eAAI4F,EAAX,CAAcI,UAAU,IAEpBJ,OAGhB,IA5BW,WA6BR,OAAO,eACD5H,EADN,CAEGgH,MAAOhH,EAAMgH,MAAMtC,KAAI,SAAAkD,GACpB,OAAIA,EAAE3I,KAAOuK,EAAOxH,OACV,eAAI4F,EAAX,CAAcI,UAAU,IAEpBJ,OAGhB,IArCY,YAsCT,OAAO,eAAI5H,EAAX,CAAkBgH,MAAOwC,EAAOxC,QAEnC,IAvCmB,mBAwChB,OAAO,eAAIhH,EAAX,CAAkB8G,YAAa0C,EAAO1C,cAEzC,IAzCwB,wBA0CrB,OAAO,eAAI9G,EAAX,CAAkBiH,gBAAiBuC,EAAOT,QAE7C,IA3CqB,cA4ClB,OAAO,eAAI/I,EAAX,CAAkBd,WAAYsK,EAAOtK,aAExC,IA7CkC,kCA8C/B,OAAO,eACDc,EADN,CAEGkH,oBAAqBsC,EAAOtK,WAAP,sBACZc,EAAMkH,qBADM,CACesC,EAAOxH,SACtChC,EAAMkH,oBAAoBwC,QAAO,SAAAzK,GAAE,OAAIA,IAAOuK,EAAOxH,YAGhE,QACG,OAAOhC,IKlDbC,K3BCwB,WAAsC,IAArCD,EAAoC,uDAA5BhB,EAAiBwK,EAAW,uCAC7D,OAAQA,EAAOpK,MACZ,IAZgB,gBAab,OAAO,eACDY,EADN,GAEMwJ,EAAOnK,MAEhB,IAlBqB,cAmBlB,OAAO,eAAIW,EAAX,CAAkBd,WAAYsK,EAAOtK,aAExC,QACG,OAAOc,I2BXb4D,KAAM+F,OAGLC,GAAQC,YAAYP,GAAUQ,YAAgBC,OAElDtN,OAAOmN,MAAQA,GACAA,UCVfI,IAASZ,OACN,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAUQ,MAAOA,IACd,kBAAC,GAAD,QAEYK,SAASC,eAAe,SpCqHvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7K,MAAK,SAAA8K,GACJA,EAAaC,gBAEdC,OAAM,SAAArH,GACLsH,QAAQtH,MAAMA,EAAMb,a,mBqCxI5BhG,EAAOC,QAAU,CAAC,cAAgB,6BAA6B,WAAa,0BAA0B,OAAS,sBAAsB,cAAgB,6BAA6B,gBAAkB,iC,mBCApMD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,UAAY,0BAA0B,MAAQ,wB,mBCAhGD,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,UAAY,iC,mBCAvFD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,uBAAuB,SAAW,4B,mBCArGD,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,+B","file":"static/js/main.6d05a381.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3JSLM\",\"item\":\"Navbar_item__tfWnZ\",\"activeLink\":\"Navbar_activeLink__DEEo2\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.d5c02aa6.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3NrQu\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.bb9bcac6.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1B3C-\"};","module.exports = __webpack_public_path__ + \"static/media/user.abb5b607.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3OFj2\",\"dialog\":\"Dialogs_dialog__3fVZr\",\"dialogsItems\":\"Dialogs_dialogsItems__3fcb5\",\"messages\":\"Dialogs_messages__39mll\",\"addMessage\":\"Dialogs_addMessage__1fBss\",\"add_post\":\"Dialogs_add_post__2QLIl\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'Settings content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\n   return (\r\n      <nav className={s.nav}>\r\n         <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n         </div>\r\n         <div className={s.item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n         </div>\r\n         <div className={s.item}>\r\n            <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n         </div>\r\n         <div className={s.item}>\r\n            <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n         </div>\r\n         <div className={s.item}>\r\n            <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n         </div>\r\n         <div className={s.item}>\r\n            <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n         </div>\r\n      </nav>\r\n   )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nexport const News = (props) => {\r\n   return (\r\n      <div className={s.content}>\r\n         This will be news\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nexport const Music = (props) => {\r\n   return (\r\n      <div className={s.content}>\r\n         Music\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nexport const Settings = (props) => {\r\n   return (\r\n      <div className={s.content}>\r\n         Settings\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const Header = (props) => {\r\n   return (\r\n      <header className={s.header}>\r\n         <img alt={'header'} src=\"https://img.icons8.com/carbon-copy/100/000000/minecraft-logo.png\"/>\r\n         <div className={s.logo_name}>Social netWork</div>\r\n         <div className={s.login}>\r\n            {props.isAuth\r\n               ? <div> {props.login} - <button onClick={props.logout}>logout</button></div>\r\n               : <NavLink to={'/login'}>Login</NavLink>}\r\n         </div>\r\n      </header>\r\n   )\r\n}\r\n\r\n\r\n","import * as axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n\theaders: {\r\n\t\t'API-KEY': 'ec9092bf-d7c1-484e-b4e6-892ed49a92ea'\r\n\t}\r\n});\r\n\r\n\r\n\r\n\r\n","import {instance} from './api';\r\n\r\nexport const authAPI = {\r\n   authMe() {\r\n      return instance.get(`auth/me`)\r\n   },\r\n\r\n   login(email,password,rememberMe = false) {\r\n      return instance.post(`auth/login`,{email,password,rememberMe})\r\n   },\r\n\r\n   logout() {\r\n      return instance.delete(`auth/login`)\r\n   },\r\n}","import {authAPI} from '../api/auth-api';\r\n\r\nconst TOGGLE_IS_FETCHING = 'IS_FETCHING';\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n\r\nlet initializeState = {\r\n   id: null,\r\n   email: null,\r\n   login: null,\r\n   isFetching: true,\r\n   isAuth: false\r\n};\r\n\r\nexport const authReducer = (state = initializeState, action) => {\r\n   switch (action.type) {\r\n      case SET_USER_DATA:\r\n         return {\r\n            ...state,\r\n            ...action.data,\r\n         };\r\n      case TOGGLE_IS_FETCHING: {\r\n         return {...state, isFetching: action.isFetching}\r\n      }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => (\r\n   {type: SET_USER_DATA, data: {id, email, login, isAuth}});\r\n\r\nexport const toggleIsFetching = (isFetching) => (\r\n   {type: TOGGLE_IS_FETCHING, isFetching});\r\n\r\nexport const getAuthUserData = () => {\r\n   return (dispatch) => {\r\n      authAPI.authMe()\r\n         .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n               let {id, login, email, isAuth} = response.data.data;\r\n               dispatch(setAuthUserData(id, login, email, true));\r\n            }\r\n         });\r\n   }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n   return (dispatch) => {\r\n      authAPI.login(email, password, rememberMe)\r\n         .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n               dispatch(getAuthUserData(email, password, rememberMe));\r\n            }\r\n         });\r\n   }\r\n}\r\n\r\nexport const logout = () => {\r\n   return (dispatch) => {\r\n      authAPI.logout()\r\n         .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n               dispatch(setAuthUserData(null, null, null, false));\r\n            }\r\n         });\r\n   }\r\n}","import React from 'react';\r\nimport {Header} from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {getAuthUserData, logout} from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n   componentDidMount() {\r\n      this.props.getAuthUserData()\r\n   }\r\n\r\n   render() {\r\n      return <Header {...this.props} />\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   isAuth: state.auth.isAuth,\r\n   login: state.auth.login,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData,logout})(HeaderContainer);\r\n\r\n","import React from \"react\";\r\nimport preloader from \"../../../asets/images/preloader.gif\";\r\nimport s from './Preloader.module.css';\r\n\r\n\r\nlet Preloader = () => {\r\n\treturn <div><img alt={'preloader'} className={s.preloader} src={preloader} /></div>\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n   state = {\r\n      editMode: false,\r\n      status: this.props.status\r\n   }\r\n   activatedMode = () => {\r\n      this.setState({editMode: true})\r\n   }\r\n   deactivatedMode = () => {\r\n      this.setState({editMode: false})\r\n      this.props.updateOwnProfileStatus(this.state.status)\r\n   }\r\n   onStatusChange = (e) => {\r\n      this.setState({status: e.currentTarget.value})\r\n   }\r\n\r\n   componentDidUpdate = (prevProps, prevState) => {\r\n      if (prevProps.status !== this.props.status) {\r\n         this.setState({\r\n            status: this.props.status\r\n         })\r\n      }\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            {!this.state.editMode &&\r\n            <div>\r\n               <span onClick={this.activatedMode}>\r\n                  {this.props.status || '-----'}\r\n               </span>\r\n            </div>}\r\n            {this.state.editMode &&\r\n            <div>\r\n               <input onChange={this.onStatusChange}\r\n                      autoFocus={true}\r\n                      onBlur={this.deactivatedMode}\r\n                      value={this.state.status}/>\r\n            </div>}\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport avatar from './../../../asets/images/avatar.png'\r\n\r\nexport const ProfileInfo = (props) => {\r\n   if (!props.profile) {\r\n      return <Preloader/>\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <div className={s.descriptionBlock}>\r\n            <div className={s.avatarImg}>\r\n               <img alt='avatar' src={props.profile.photos.large ? props.profile.photos.large : avatar}/>\r\n            </div>\r\n            <div>\r\n               <ProfileStatus status={props.status} updateOwnProfileStatus={props.updateOwnProfileStatus}/>\r\n            </div>\r\n            <p>{props.profile.aboutMe}</p>\r\n            <p>{props.profile.contacts.instagram}</p>\r\n            <p>{props.profile.lookingForAJob}</p>\r\n            <p>{props.profile.userId}</p>\r\n            <p>{props.profile.lookingForAJobDescription}</p>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n","import {instance} from './api';\r\n\r\nexport const profileAPI = {\r\n   getProfile(userId) {\r\n      return instance.get(`profile/${userId}`)\r\n         .then(res => {\r\n            return res.data\r\n         });\r\n   },\r\n\r\n   getUserStatus(userId) {\r\n      return instance.get(`profile/status/${userId}`)\r\n         .then(res => res);\r\n   },\r\n\r\n   updateOwnProfileStatus(status) {\r\n      return instance.put(`profile/status/`,{status})\r\n         .then(res => {\r\n            return res.data\r\n         });\r\n   },\r\n}","import {profileAPI} from '../api/profile-api';\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst GET_USER_PROFILE_STATUS = 'SET-USER-PROFILE-STATUS';\r\nconst SET_OWN_PROFILE_STATUS = 'UPDATE-PROFILE-STATUS';\r\n\r\nlet initializeState = {\r\n   posts: [\r\n      {id: 1, message: 'Hi, how do you feel? I have not seen you since I was in Berlin!', likesCount: 12},\r\n      {id: 2, message: 'Wow! It is great! When are you going there?', likesCount: 12}\r\n   ],\r\n   profile: null,\r\n   status: '',\r\n};\r\n\r\nexport const profileReducer = (state = initializeState, action) => {\r\n   switch (action.type) {\r\n      case ADD_POST:\r\n         return {\r\n            ...state,\r\n            posts: [{id: 3, message: action.postMessageText, likesCount: 0}, ...state.posts],\r\n         };\r\n      case SET_USER_PROFILE: {\r\n         return {\r\n            ...state,\r\n            profile: action.profile\r\n         };\r\n      }\r\n      case GET_USER_PROFILE_STATUS: {\r\n         return {\r\n            ...state,\r\n            status: action.userStatus\r\n         };\r\n      }\r\n      case SET_OWN_PROFILE_STATUS: {\r\n         return {\r\n            ...state,\r\n            status: action.status\r\n         };\r\n      }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport const addPostActionCreator = (postMessageText) => ({type: ADD_POST, postMessageText});\r\n\r\nexport const setUserProfileData = (profile) =>\r\n   ({type: SET_USER_PROFILE, profile})\r\n\r\n//STATUS\r\nexport const getUserStatus = (userStatus) => ({type: GET_USER_PROFILE_STATUS, userStatus});\r\nexport const setOwnProfileStatus = (status) => ({type: SET_OWN_PROFILE_STATUS, status});\r\n\r\n\r\n//Thunks\r\nexport const getUserProfileData = (userId) => {\r\n   return (dispatch) => {\r\n      profileAPI.getProfile(userId)\r\n         .then(data => {\r\n            dispatch(setUserProfileData(data));\r\n         });\r\n   }\r\n}\r\n\r\nexport const getStatusFomUser = (userId) => (dispatch) => {\r\n   profileAPI.getUserStatus(userId)\r\n      .then(res => {\r\n         dispatch(getUserStatus(res.data));\r\n      });\r\n}\r\n\r\nexport const updateOwnProfileStatus = (status) => (dispatch) => {\r\n   profileAPI.updateOwnProfileStatus(status)\r\n      .then(data => {\r\n         if (data.resultCode === 0) {\r\n            dispatch(setOwnProfileStatus(status));\r\n         }\r\n      });\r\n}\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nexport const Post = (props) => {\r\n   return <div className={s.item}>\r\n      <img alt={'post'} src=\"https://img.icons8.com/bubbles/100/000000/flag-person-male.png\"/>\r\n      <div>\r\n         {props.message}\r\n         <span> Like</span> {props.likesCount}\r\n      </div>\r\n   </div>\r\n\r\n}\r\n\r\n\r\n","export const required = value => {\r\n   if(value) return undefined;\r\n\r\n   return 'Field id required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) =>{\r\n   if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n   return undefined;\r\n}","import React from 'react';\r\nimport s from './FormControls.module.css'\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n   const hasError = meta.touched && meta.error\r\n   return (\r\n      <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n         <div>\r\n            {props.children}\r\n         </div>\r\n         {hasError && <span>{meta.error}</span>}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n   const {input, meta, ...restProps} = props\r\n   return <FormControl {...props}><textarea {...input}{...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n   const {input, meta, ...restProps} = props\r\n   return <FormControl {...props}><input {...input}{...restProps}/></FormControl>\r\n}\r\n\r\n\r\n/*const Element = Element => ({ input, meta, ...props }) => {\r\n   const hasError = meta.touched && meta.error;\r\n   return (\r\n      <div className={ s.formControl + \" \" + (hasError ? s.error : \"\") }>\r\n         <Element {...input} {...props} />\r\n         { hasError && <span> { meta.error } </span> }\r\n      </div>\r\n   );\r\n};\r\n\r\nА потом просто его импортим в компоненту формы, вызываем как\r\n\r\nconst Textarea = Element(\"textarea\");\r\n\r\nи передаем\r\n\r\n<Field component={Textarea} .../>\r\n\r\nP.S. Аргумент у HOC должен быть с большой буквы, чтобы React понимал, что перед ним не обычный html-тег, а компонент/переменная.\r\nP.P.S. Создавать const Textarea = Element(\"textarea\"); нужно вне компонента с формой. Иначе фокус с формы сбрасывается после первого символа (хз почему, видимо, ререндерится)\r\n\r\n*/\r\n\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport {Post} from '../Post/Post';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\nimport {Textarea} from '../../common/FormsControls/FormControls';\r\n\r\nexport const MyPosts = (props) => {\r\n   let postsElements =\r\n      props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n   let addNewPost = (value) => {\r\n      props.addPost(value.newPostText)\r\n   }\r\n\r\n   return (\r\n      <div className={s.postsBlock}>\r\n         <h3>My posts</h3>\r\n         <AddNewPostForm onSubmit={addNewPost}/>\r\n         <div className={s.posts}>\r\n            {postsElements}\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nexport const AddPost = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <div>\r\n            <Field placeholder='Add post'\r\n                   component={Textarea}\r\n                   name='newPostText'\r\n                   validate={[required,maxLength10]}\r\n            />\r\n         </div>\r\n         <div>\r\n            <button>Add post</button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\n\r\nconst AddNewPostForm = reduxForm({form: 'dialogAddMessageForm'})(AddPost)\r\n","import React from 'react';\r\nimport {addPostActionCreator} from '../../../redux/profile-reducer';\r\nimport {MyPosts} from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      posts: state.profilePage.posts,\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      addPost: (postMessageText) => {\r\n         dispatch(addPostActionCreator(postMessageText));\r\n      }\r\n   }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport {ProfileInfo} from './ProfInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nexport const Profile = (props) => {\r\n   return (\r\n      <div>\r\n         <ProfileInfo profile={props.profile}\r\n                      status={props.status}\r\n                      updateOwnProfileStatus={props.updateOwnProfileStatus}/>\r\n         <MyPostsContainer/>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n   isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Redirect to='/login'/>\r\n         return <Component {...this.props}/>\r\n      }\r\n   }\r\n\r\n   let ConnnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n   return ConnnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {Profile} from './Profile';\r\nimport {getStatusFomUser, getUserProfileData, updateOwnProfileStatus} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from '../hoc/withAuthRedirect';\r\n\r\nclass ProfileContainer extends React.Component {\r\n   componentDidMount = () => {\r\n      let userId = this.props.match.params.userId;\r\n      if (!userId) {\r\n         userId = 7567\r\n      }\r\n      this.props.getUserProfileData(userId);\r\n      this.props.getStatusFomUser(userId);\r\n   }\r\n\r\n   render() {\r\n      return <Profile {...this.props}\r\n                      profile={this.props.profile}\r\n                      status={this.props.status}\r\n                      updateOwnProfileStatus={this.props.updateOwnProfileStatus}/>\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   profile: state.profilePage.profile,\r\n   status: state.profilePage.status,\r\n})\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, {getUserProfileData, getStatusFomUser, updateOwnProfileStatus}),\r\n   withRouter,\r\n   withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n","const SEND_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initializeState = {\r\n   dialogs: [\r\n      {id: 1, name: 'Dimych'},\r\n      {id: 2, name: 'Andrew'},\r\n      {id: 3, name: 'Sveta'}\r\n   ],\r\n   messages: [\r\n      {id: 1, message: 'Hi'},\r\n      {id: 2, message: 'How are you?'},\r\n      {id: 3, message: 'I can met with you'}\r\n   ],\r\n};\r\n\r\nexport const dialogsReducer = (state = initializeState, action) => {\r\n   switch (action.type) {\r\n      case SEND_MESSAGE:\r\n         let newMessage = action.messageText;\r\n         return {\r\n            ...state,\r\n            messages: [...state.messages, {id: 6, message:newMessage}]\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport const sendMessageCreator = (messageText) => ({type: SEND_MESSAGE, messageText});\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nexport const Message = (props) => {\r\n   return (\r\n      <div className={s.message}>{props.message}</div>\r\n   )\r\n}\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const DialogItem = (props) => {\r\n   let path = '/dialogs/' + props.id;\r\n   return (\r\n      <div className={s.dialog + ' ' + s.active}>\r\n         <NavLink to={path}>{props.name}</NavLink>\r\n      </div>\r\n   )\r\n}","import React from 'react';\r\nimport {Field,reduxForm} from 'redux-form';\r\nimport {Textarea} from '../../common/FormsControls/FormControls';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\n\r\nconst maxLength50 = maxLengthCreator(100)\r\n\r\nconst AddMessageForm = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <div>\r\n            <Field component={Textarea}\r\n                   name={'newMessageText'}\r\n                   validate={[required,maxLength50]}\r\n                   placeholder={'Enter your message'}\r\n            />\r\n         </div>\r\n         <div>\r\n            <button>Send message</button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\n\r\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)","import React from 'react';\r\nimport {sendMessageCreator,} from '../../redux/dialogs-reducer';\r\nimport {Dialogs} from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {withAuthRedirect} from '../hoc/withAuthRedirect';\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      dialogsPage: state.dialogsPage\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      addMessage: (messageText) => {\r\n         dispatch(sendMessageCreator(messageText))\r\n      },\r\n   }\r\n}\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, mapDispatchToProps),\r\n   withAuthRedirect\r\n)(Dialogs);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {Message} from './Message/Message';\r\nimport {DialogItem} from './Dialog/Dialog';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\nexport const Dialogs = (props) => {\r\n\r\n   let state = props.dialogsPage;\r\n\r\n   let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n   let messagesElements = state.messages.map(m => <Message key={m.id} message={m.message}/>);\r\n\r\n   let addNewMessage = (value) => {\r\n      props.addMessage(value.newMessageText);\r\n   }\r\n\r\n   return (\r\n      <div className={s.dialogs}>\r\n         <div className={s.dialogsItems}>\r\n            {dialogsElements}\r\n         </div>\r\n         <div className={s.messages}>\r\n            <div>{messagesElements}</div>\r\n            <div className={s.addMessage}>\r\n               <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n","import {instance, profileAPI} from './api';\r\n\r\nexport const usersAPI = {\r\n\r\n\tgetUsers(currentPage = 1, pageSize = 10) {\r\n\t\treturn instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.data;\r\n\t\t\t});\r\n\t},\r\n\tfollow(userId) {\r\n\t\treturn instance.post(`follow/${userId}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.data;\r\n\t\t\t});\r\n\t},\r\n\tunfollow(userId) {\r\n\t\treturn instance.delete(`follow/${userId}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.data;\r\n\t\t\t});\r\n\t},\r\n}","import {usersAPI} from '../api/user-api';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'TOGGLE_IS_FOLLOWING_IN_PROGRESS';\r\n\r\nlet initializeState = {\r\n   users: [],\r\n   pageSize: 5,\r\n   totalUsersCount: 0,\r\n   currentPage: 1,\r\n   isFetching: true,\r\n   followingInProgress: [1, 2]\r\n};\r\n\r\nexport const usersReducer = (state = initializeState, action) => {\r\n   switch (action.type) {\r\n      case FOLLOW:\r\n         return {\r\n            ...state,\r\n            users: state.users.map(u => {\r\n               if (u.id === action.userId) {\r\n                  return {...u, followed: true}\r\n               }\r\n               return u;\r\n            })\r\n         };\r\n      case UNFOLLOW:\r\n         return {\r\n            ...state,\r\n            users: state.users.map(u => {\r\n               if (u.id === action.userId) {\r\n                  return {...u, followed: false}\r\n               }\r\n               return u;\r\n            })\r\n         };\r\n      case SET_USERS: {\r\n         return {...state, users: action.users}\r\n      }\r\n      case SET_CURRENT_PAGE: {\r\n         return {...state, currentPage: action.currentPage}\r\n      }\r\n      case SET_TOTAL_USERS_COUNT: {\r\n         return {...state, totalUsersCount: action.count}\r\n      }\r\n      case TOGGLE_IS_FETCHING: {\r\n         return {...state, isFetching: action.isFetching}\r\n      }\r\n      case TOGGLE_IS_FOLLOWING_IN_PROGRESS: {\r\n         return {\r\n            ...state,\r\n            followingInProgress: action.isFetching\r\n               ? [...state.followingInProgress, action.userId]\r\n               : state.followingInProgress.filter(id => id !== action.userId)\r\n         }\r\n      }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n   type: TOGGLE_IS_FOLLOWING_IN_PROGRESS,\r\n   isFetching,\r\n   userId\r\n});\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n\r\n   return (dispatch) => {\r\n      dispatch(toggleIsFetching(true))\r\n      usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n         dispatch(toggleIsFetching(false))\r\n         dispatch(setUsers(data.items))\r\n         dispatch(setUsersTotalCount(data.totalCount))\r\n      });\r\n   }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n\r\n   return (dispatch) => {\r\n      dispatch(toggleFollowingProgress(true, userId));\r\n      usersAPI.follow(userId)\r\n         .then(response => {\r\n            if (response.resultCode === 0) {\r\n               dispatch(followSuccess(userId));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n         });\r\n   }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n\r\n   return (dispatch) => {\r\n      dispatch(toggleFollowingProgress(true, userId));\r\n      usersAPI.unfollow(userId)\r\n         .then(response => {\r\n            if (response.resultCode === 0) {\r\n               dispatch(unfollowSuccess(userId));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n         });\r\n   }\r\n}\r\n","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport userPhoto from '../../asets/images/user.png'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const Users = (props) => {\r\n   let pages = []\r\n   for (let i = 505; i <= 525; i++) {\r\n      pages.push(i)\r\n   }\r\n\r\n   return (\r\n      <div className={s.users_wrapper}>\r\n         <div>\r\n            {pages.map(p => {\r\n               return <span key={p.id} className={props.currentPage === p && s.selectPage}\r\n                            onClick={(e) => {\r\n                               props.onPageChanged(p);\r\n                            }}>{p}</span>\r\n            })}\r\n         </div>\r\n         {\r\n            props.users.map(u => <div key={u.id}>\r\n               <div className={s.user}>\r\n                  <div>\r\n                     <NavLink to={'/profile/' + u.id}>\r\n                        <img alt={'user'} className={s.avatar}\r\n                             src={u.photos.small != null ? u.photos.small : userPhoto}/>\r\n                     </NavLink>\r\n                  </div>\r\n                  <div>\r\n                     {u.followed\r\n                        ? <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                  className={s.unfollow_button}\r\n                                  onClick={() => {\r\n                                     props.unfollow(u.id)\r\n                                  }}>Unfollow</button>\r\n                        :\r\n                        <button disabled={props.followingInProgress.some(id => id === u.id)} className={s.follow_button}\r\n                                onClick={() => {\r\n                                   props.follow(u.id)\r\n                                }}>Follow</button>}\r\n                  </div>\r\n               </div>\r\n               <div>\r\n                  <div>{u.name}</div>\r\n                  <div>{u.status}</div>\r\n               </div>\r\n               <div>\r\n                  <div>{'u.location.city'}</div>\r\n                  <div>{'u.location.country'}</div>\r\n               </div>\r\n            </div>)\r\n         }\r\n      </div>\r\n   )\r\n}\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {follow, getUsers, setCurrentPage, toggleFollowingProgress, unfollow,} from '../../redux/users-reducer';\r\nimport {Users} from './Users';\r\nimport Preloader from '../common/preloader/Preloader';\r\nimport {compose} from 'redux';\r\nimport {withAuthRedirect} from '../hoc/withAuthRedirect'\r\n\r\nclass UsersContainer extends React.Component {\r\n   componentDidMount() {\r\n      this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n   }\r\n\r\n   onPageChanged = (pageNumber) => {\r\n      this.props.getUsers(pageNumber, this.props.pageSize)\r\n      this.props.setCurrentPage(pageNumber);\r\n   }\r\n\r\n   render() {\r\n      return <>\r\n         {this.props.isFetching ? <Preloader/> : null}\r\n         <Users pageSize={this.props.pageSize}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                followingInProgress={this.props.followingInProgress}\r\n         />\r\n      </>\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      users: state.usersPage.users,\r\n      pageSize: state.usersPage.pageSize,\r\n      totalUsersCount: state.usersPage.totalUsersCount,\r\n      currentPage: state.usersPage.currentPage,\r\n      isFetching: state.usersPage.isFetching,\r\n      followingInProgress: state.usersPage.followingInProgress\r\n   }\r\n}\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, {\r\n      follow, unfollow, setCurrentPage,\r\n      toggleFollowingProgress, getUsers,\r\n   }),\r\n   withAuthRedirect\r\n)(UsersContainer)","import React from 'react';\r\nimport s from './Login.module.css';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {Input} from '../common/FormsControls/FormControls';\r\nimport {required} from '../../utils/validators/validators';\r\nimport {connect} from 'react-redux';\r\nimport {login} from '../../redux/auth-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport const LoginForm = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <div>\r\n            <Field placeholder={'Login'}\r\n                   name={'login'}\r\n                   component={Input}\r\n                   validate={[required]}\r\n            />\r\n         </div>\r\n         <div>\r\n            <Field placeholder={'Password'}\r\n                   name={'password'}\r\n                   type={'password'}\r\n                   component={Input}\r\n                   validate={[required]}\r\n            />\r\n         </div>\r\n         <div>\r\n            <Field type={'checkbox'}\r\n                   name={'rememberMe'}\r\n                   component={Input}\r\n                   validate={[required]}\r\n            />Remember me\r\n         </div>\r\n         <div>\r\n            <button>Login</button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n   const onSubmit = (formData) => {\r\n      props.login(formData.login, formData.password, formData.rememberMe)\r\n   }\r\n   if (props.isAuth) {\r\n      return <Redirect to={'/profile'}/>\r\n   }\r\n   return (\r\n      <div className={s.login}>\r\n         <h1>Login</h1>\r\n         <LoginReduxForm onSubmit={onSubmit}/>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)\r\n","import React from 'react';\nimport './App.css';\nimport {Navbar} from './components/Navbar/Navbar';\nimport {News} from './components/News/News';\nimport {Music} from './components/Music/Music';\nimport {Settings} from './components/Settings/Settings';\nimport {Route} from 'react-router-dom';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport Login from './components/Login/Login';\n\nexport const App = (props) => {\n   return (\n      <div className='all_wrapper'>\n         <div className='app-wrapper'>\n            <HeaderContainer/>\n            <Navbar/>\n            <div className='app-wrapper-content'>\n               <Route path='/login' render={() => <Login/>}/>\n               <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n               <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n               <Route path='/news' render={() => <News/>}/>\n               <Route path='/music' render={() => <Music/>}/>\n               <Route path='/settings' render={() => <Settings/>}/>\n               <Route path='/users' render={() => <UsersContainer/>}/>\n            </div>\n         </div>\n      </div>\n   );\n}\n\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {profileReducer} from './profile-reducer';\r\nimport {dialogsReducer} from './dialogs-reducer';\r\nimport {usersReducer} from './users-reducer';\r\nimport {authReducer} from './auth-reducer';\r\nimport thinkMiddlaware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n   profilePage: profileReducer,\r\n   dialogsPage: dialogsReducer,\r\n   usersPage: usersReducer,\r\n   auth: authReducer,\r\n   form: formReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thinkMiddlaware));\r\n\r\nwindow.store = store;\r\nexport default store;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport store from './redux/redux-store';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n   <BrowserRouter>\n      <Provider store={store}>\n         <App/>\n      </Provider>\n   </BrowserRouter>, document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users_wrapper\":\"Users_users_wrapper__1ZOyV\",\"selectPage\":\"Users_selectPage__1cRU0\",\"avatar\":\"Users_avatar__1H79U\",\"follow_button\":\"Users_follow_button__33hVr\",\"unfollow_button\":\"Users_unfollow_button__B7zj3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2jO0p\",\"logo_name\":\"Header_logo_name__3P1L2\",\"login\":\"Header_login__F3Un5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1vx3c\",\"avatarImg\":\"ProfileInfo_avatarImg__3GLfN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3ogJB\",\"posts\":\"MyPosts_posts__32EhU\",\"add_post\":\"MyPosts_add_post__3RIGb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3XkRq\",\"error\":\"FormControls_error__3bBT2\"};"],"sourceRoot":""}