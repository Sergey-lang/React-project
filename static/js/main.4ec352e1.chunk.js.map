{"version":3,"sources":["u3-features/Navbar/Navbar.module.css","u1-assets/images/preloader.gif","u2-components/common/preloader/Preloader.module.css","u1-assets/images/avatar.png","u3-features/Profile/Post/Post.module.css","u3-features/Users/Users.module.css","u2-components/common/Paginator/Paginator.module.css","u1-assets/images/user.png","u3-features/Dialogs/Dialogs.module.css","serviceWorker.js","u3-features/Navbar/Navbar.jsx","u3-features/News/News.jsx","u3-features/Music/Music.jsx","u3-features/Settings/Settings.jsx","u3-features/Header/Header.jsx","u5-api/api.js","u5-api/auth-api.js","u4-redux/auth-reducer.js","u3-features/Header/HeaderContainer.jsx","u2-components/common/preloader/Preloader.jsx","u3-features/Profile/ProfInfo/ProfileStatusWithHooks.jsx","u3-features/Profile/ProfInfo/ProfileInfo.jsx","u5-api/profile-api.js","u4-redux/profile-reducer.js","u3-features/Profile/Post/Post.jsx","utils/validators/validators.js","u2-components/common/FormsControls/FormControls.jsx","u3-features/Profile/MyPosts/MyPosts.jsx","u3-features/Profile/MyPosts/MyPostsContainer.js","u3-features/Profile/Profile.jsx","u3-features/Profile/ProfileContainer.jsx","u4-redux/dialogs-reducer.js","u3-features/Dialogs/Message/Message.jsx","u3-features/Dialogs/Dialog/Dialog.jsx","u3-features/Dialogs/AddMessageForm/AddMessageForm.jsx","u2-components/hoc/withAuthRedirect.jsx","u3-features/Dialogs/DialogsContainer.js","u3-features/Dialogs/Dialogs.jsx","u5-api/user-api.js","utils/objects-helpers.js","u4-redux/users-reducer.js","u2-components/common/Paginator/Paginator.jsx","u3-features/Users/User/User.jsx","u3-features/Users/Users.jsx","u4-redux/users-selectors.js","u3-features/Users/UsersContainer.jsx","u3-features/Login/Login.jsx","u4-redux/app-reducer.js","App.js","u4-redux/store.js","index.js","u3-features/Header/Header.module.css","u3-features/Users/User/User.module.css","u3-features/Profile/ProfInfo/ProfileInfo.module.css","u3-features/Profile/MyPosts/MyPosts.module.css","u2-components/common/FormsControls/FormControls.module.css","u3-features/Login/Login.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","active","to","activeClassName","activeLink","News","props","content","Music","Settings","Header","header","alt","src","logo_name","login","isAuth","onClick","logout","instance","axios","withCredentials","baseURL","headers","authAPI","get","email","password","rememberMe","post","delete","initializeState","id","isFetching","TOGGLE_IS_FETCHING","SET_USER_DATA","setAuthUserData","type","data","getAuthUserData","dispatch","a","response","resultCode","HeaderContainer","this","React","Component","connect","state","auth","Preloader","preloader","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateOwnProfileStatus","onChange","e","currentTarget","value","ProfileInfo","profile","descriptionBlock","avatarImg","photos","large","avatar","aboutMe","contacts","instagram","lookingForAJob","userId","lookingForAJobDescription","profileAPI","then","res","put","posts","message","likesCount","ADD_POST","SET_USER_PROFILE","GET_USER_PROFILE_STATUS","SET_OWN_PROFILE_STATUS","DELETE_POST","setOwnProfileStatus","Post","required","maxLengthCreator","maxLength","length","FormControl","input","meta","touched","error","children","hasError","formControl","Textarea","restProps","Input","CreateField","placeholder","name","component","validators","text","Field","validate","MyPosts","memo","postsElements","map","p","key","postsBlock","AddNewPostForm","onSubmit","addPost","newPostText","maxLength10","reduxForm","form","handleSubmit","MyPostsContainer","profilePage","postMessageText","addPostActionCreator","Profile","ProfileContainer","componentDidMount","params","authorizedUserId","history","push","getUserProfileData","getStatusFromUser","compose","userStatus","withRouter","dialogs","messages","SEND_MESSAGE","Message","DialogItem","path","dialog","maxLength50","mapStateToPropsForRedirect","dialogsPage","addMessage","messageText","sendMessageCreator","RedirectComponent","dialogsElements","d","messagesElements","m","dialogsItems","newMessageText","usersAPI","getUsers","currentPage","pageSize","follow","unfollow","updateObjectInArray","items","itemId","objPropName","newObjProps","u","users","totalUsersCount","followingInProgress","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FOLLOWING_IN_PROGRESS","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","Paginator","onPageChanged","pages","i","selectPage","User","user","small","userPhoto","followed","disabled","some","unfollow_button","follow_button","Users","users_wrapper","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","bind","requestingPage","totalCount","count","LoginReduxForm","formSummaryError","stopSubmit","_error","formData","initialized","INITIALIZED_SUCCESS","App","initializeApp","render","DialogsContainer","app","promise","Promise","all","reducers","combineReducers","action","filter","postId","newMessage","formReducer","store","createStore","applyMiddleware","thinkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.4ec352e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3e9lb\",\"item\":\"Navbar_item__2hClh\",\"activeLink\":\"Navbar_activeLink__2Y-m_\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.d5c02aa6.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2xK9x\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.e67e358c.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1KkTd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users_wrapper\":\"Users_users_wrapper__ApN5K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectPage\":\"Paginator_selectPage__AiXJg\"};","module.exports = __webpack_public_path__ + \"static/media/user.abb5b607.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__LB3Hj\",\"dialog\":\"Dialogs_dialog__3ZwYP\",\"dialogsItems\":\"Dialogs_dialogsItems__19IAe\",\"messages\":\"Dialogs_messages__JxiAm\",\"addMessage\":\"Dialogs_addMessage__1guBq\",\"add_post\":\"Dialogs_add_post__3RwTP\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'Settings content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nexport const News = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            This will be news\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nexport const Music = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nexport const Settings = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img alt={'header'} src=\"https://img.icons8.com/carbon-copy/100/000000/minecraft-logo.png\"/>\r\n            <div className={s.logo_name}>Social netWork</div>\r\n            <div className={s.login}>\r\n                {props.isAuth\r\n                    ? <div> {props.login} - <button onClick={props.logout}>logout</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\n","import * as axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n\theaders: {\r\n\t\t'API-KEY': 'ec9092bf-d7c1-484e-b4e6-892ed49a92ea'\r\n\t}\r\n});\r\n\r\n\r\n\r\n\r\n","import {instance} from './api';\r\n\r\nexport const authAPI = {\r\n   authMe() {\r\n      return instance.get(`auth/me`)\r\n   },\r\n\r\n   login(email,password,rememberMe = false) {\r\n      return instance.post(`auth/login`,{email,password,rememberMe})\r\n   },\r\n\r\n   logout() {\r\n      return instance.delete(`auth/login`)\r\n   },\r\n}","import {authAPI} from '../u5-api/auth-api';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nlet initializeState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: true,\r\n    isAuth: false\r\n};\r\n\r\nexport const authReducer = (state = initializeState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            };\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//Actions Type\r\nconst TOGGLE_IS_FETCHING = 'AUTH/IS_FETCHING';\r\nconst SET_USER_DATA = 'AUTH/SET_USER_DATA'\r\n\r\n//Actions\r\nexport const setAuthUserData = (id, email, login, isAuth) => (\r\n    {type: SET_USER_DATA, data: {id, email, login, isAuth}});\r\n\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\n\r\n//Thunks\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.authMe()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, login, email, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData(email, password, rememberMe));\r\n    } else {\r\n        let messages = response.data.messages.length > 0 ? response.data.messages[0] : 'some error';\r\n        dispatch(stopSubmit('login', {_error: messages}))\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}","import React from 'react';\r\nimport {Header} from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../../u4-redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n\r\n","import React from \"react\";\r\nimport preloader from \"../../../u1-assets/images/preloader.gif\";\r\nimport s from './Preloader.module.css';\r\n\r\nexport const Preloader = () => {\r\n    return <div><img alt={'preloader'} className={s.preloader} src={preloader}/></div>\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\n\r\nexport const ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateOwnProfileStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n               <span onDoubleClick={activateEditMode}>\r\n                  {props.status || '-----'}\r\n               </span>\r\n            </div>}\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       onChange={onStatusChange}\r\n                       value={status}\r\n                />\r\n            </div>}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport {Preloader} from '../../../u2-components/common/preloader/Preloader';\r\nimport avatar from '../../../u1-assets/images/avatar.png'\r\nimport {ProfileStatusWithHooks} from './ProfileStatusWithHooks';\r\n\r\nexport const ProfileInfo = ({profile, status, updateOwnProfileStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <div className={s.avatarImg}>\r\n                    <img alt='avatar' src={profile.photos.large ? profile.photos.large : avatar}/>\r\n                </div>\r\n                <div>\r\n                    <ProfileStatusWithHooks status={status}\r\n                                            updateOwnProfileStatus={updateOwnProfileStatus}/>\r\n                </div>\r\n                <p>{profile.aboutMe}</p>\r\n                <p>{profile.contacts.instagram}</p>\r\n                <p>{profile.lookingForAJob}</p>\r\n                <p>{profile.userId}</p>\r\n                <p>{profile.lookingForAJobDescription}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import {instance} from './api';\r\n\r\nexport const profileAPI = {\r\n   getProfile(userId) {\r\n      return instance.get(`profile/${userId}`)\r\n         .then(res => {\r\n            return res.data\r\n         });\r\n   },\r\n\r\n   getUserStatus(userId) {\r\n      return instance.get(`profile/status/${userId}`)\r\n         .then(res => res);\r\n   },\r\n\r\n   updateOwnProfileStatus(status) {\r\n      return instance.put(`profile/status/`,{status})\r\n         .then(res => {\r\n            return res.data\r\n         });\r\n   },\r\n}","import {profileAPI} from '../u5-api/profile-api';\r\n\r\nlet initializeState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how do you feel? I have not seen you since I was in Berlin!', likesCount: 12},\r\n        {id: 2, message: 'Wow! It is great! When are you going there?', likesCount: 12}\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n};\r\n\r\nexport const profileReducer = (state = initializeState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [{id: 5, message: action.postMessageText, likesCount: 0}, ...state.posts],\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            };\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case GET_USER_PROFILE_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.userStatus\r\n            };\r\n        }\r\n        case SET_OWN_PROFILE_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//Actions Type\r\nconst ADD_POST = 'PROFILE/ADD-POST';\r\nconst SET_USER_PROFILE = 'PROFILE/SET-USER-PROFILE';\r\nconst GET_USER_PROFILE_STATUS = 'PROFILE/SET-USER-PROFILE-STATUS';\r\nconst SET_OWN_PROFILE_STATUS = 'PROFILE/UPDATE-PROFILE-STATUS';\r\nconst DELETE_POST = 'PROFILE/DELETE-POST';\r\n\r\n//Actions\r\nexport const addPostActionCreator = (postMessageText) => ({type: ADD_POST, postMessageText});\r\nexport const setUserProfileData = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const deletePostAC = (postId) => ({type: DELETE_POST, postId});\r\n//---status\r\nexport const getUserStatus = (userStatus) => ({type: GET_USER_PROFILE_STATUS, userStatus});\r\nexport const setOwnProfileStatus = (status) => ({type: SET_OWN_PROFILE_STATUS, status});\r\n\r\n//Thunks\r\nexport const getUserProfileData = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfileData(data));\r\n}\r\n\r\nexport const getStatusFromUser = (userId) => async (dispatch) => {\r\n    let res = await profileAPI.getUserStatus(userId)\r\n    dispatch(getUserStatus(res.data));\r\n}\r\n\r\nexport const updateOwnProfileStatus = (status) => async (dispatch) => {\r\n    let data = await profileAPI.updateOwnProfileStatus(status)\r\n    if (data.resultCode === 0) {\r\n        dispatch(setOwnProfileStatus(status));\r\n    }\r\n}\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nexport const Post = (props) => {\r\n    return <div className={s.item}>\r\n        <img alt={'post'} src=\"https://img.icons8.com/bubbles/100/000000/flag-person-male.png\"/>\r\n        <div>\r\n            {props.message}\r\n            <span> Like</span> {props.likesCount}\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\n\r\n","export const required = value => {\r\n   if(value) return undefined;\r\n\r\n   return 'Field id required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) =>{\r\n   if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n   return undefined;\r\n}","import React from 'react';\r\nimport s from './FormControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input}{...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}><input {...input}{...restProps}/></FormControl>\r\n}\r\n\r\nexport const CreateField = (placeholder, name, component, validators, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} component={component} validate={validators} {...props}/>\r\n        {text}\r\n    </div>\r\n)\r\n\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport {Post} from '../Post/Post';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\nimport {Textarea} from '../../../u2-components/common/FormsControls/FormControls';\r\n\r\nexport const MyPosts = React.memo((props) => {\r\n    let postsElements =\r\n        props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let addNewPost = (value) => {\r\n        props.addPost(value.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostForm onSubmit={addNewPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nexport const AddPost = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder='Add post'\r\n                       component={Textarea}\r\n                       name='newPostText'\r\n                       validate={[required, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostForm = reduxForm({form: 'dialogAddMessageForm'})(AddPost)\r\n","import {addPostActionCreator} from '../../../u4-redux/profile-reducer';\r\nimport {MyPosts} from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (postMessageText) => {\r\n            dispatch(addPostActionCreator(postMessageText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport {ProfileInfo} from './ProfInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nexport const Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateOwnProfileStatus={props.updateOwnProfileStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {Profile} from './Profile';\r\nimport {getStatusFromUser, getUserProfileData, updateOwnProfileStatus} from '../../u4-redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount = () => {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfileData(userId);\r\n        this.props.getStatusFromUser(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateOwnProfileStatus={this.props.updateOwnProfileStatus}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfileData, getStatusFromUser, updateOwnProfileStatus}),\r\n    withRouter,\r\n)(ProfileContainer)\r\n\r\n\r\n","let initializeState = {\r\n   dialogs: [\r\n      {id: 1, name: 'Egor'},\r\n      {id: 2, name: 'Andrew'},\r\n      {id: 3, name: 'David'}\r\n   ],\r\n   messages: [\r\n      {id: 1, message: 'Hi'},\r\n      {id: 2, message: 'How are you?'},\r\n      {id: 3, message: 'I can met with you'}\r\n   ],\r\n};\r\n\r\nexport const dialogsReducer = (state = initializeState, action) => {\r\n   switch (action.type) {\r\n      case SEND_MESSAGE:\r\n         let newMessage = action.messageText;\r\n         return {\r\n            ...state,\r\n            messages: [...state.messages, {id: 6, message:newMessage}]\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\n//Actions Type\r\nconst SEND_MESSAGE = 'DIALOGS/ADD-MESSAGE';\r\n\r\n//Actions\r\nexport const sendMessageCreator = (messageText) => ({type: SEND_MESSAGE, messageText});\r\n\r\n\r\n","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\nexport const Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {Textarea} from '../../../u2-components/common/FormsControls/FormControls';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\n\r\nconst maxLength50 = maxLengthCreator(100)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name={'newMessageText'}\r\n                       validate={[required, maxLength50]}\r\n                       placeholder={'Enter your message'}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import {sendMessageCreator,} from '../../u4-redux/dialogs-reducer';\r\nimport {Dialogs} from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {withAuthRedirect} from '../../u2-components/hoc/withAuthRedirect';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (messageText) => {\r\n            dispatch(sendMessageCreator(messageText))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {Message} from './Message/Message';\r\nimport {DialogItem} from './Dialog/Dialog';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\nexport const Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message key={m.id} message={m.message}/>);\r\n\r\n    let addNewMessage = (value) => {\r\n        props.addMessage(value.newMessageText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div className={s.addMessage}>\r\n                    <AddMessageForm onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {instance} from './api';\r\n\r\nexport const usersAPI = {\r\n\r\n\tgetUsers(currentPage = 1, pageSize = 10) {\r\n\t\treturn instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.data;\r\n\t\t\t});\r\n\t},\r\n\tfollow(userId) {\r\n\t\treturn instance.post(`follow/${userId}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.data;\r\n\t\t\t});\r\n\t},\r\n\tunfollow(userId) {\r\n\t\treturn instance.delete(`follow/${userId}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.data;\r\n\t\t\t});\r\n\t},\r\n}","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from '../u5-api/user-api';\r\nimport {updateObjectInArray} from \"../utils/objects-helpers\";\r\n\r\nlet initializeState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [1, 2]\r\n};\r\n\r\nexport const usersReducer = (state = initializeState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users,\r\n                    action.userId, 'id', {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users,\r\n                    action.userId, 'id', {followed: false})\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//Actions type\r\nconst FOLLOW = 'USERS/FOLLOW';\r\nconst UNFOLLOW = 'USERS/UNFOLLOW';\r\nconst SET_USERS = 'USERS/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'USERS/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'USERS/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'USERS/IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'USERS/TOGGLE_IS_FOLLOWING_IN_PROGRESS';\r\n\r\n//Actions\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_IN_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\n//Thunks\r\nexport const requestUsers = (requestingPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(requestingPage))\r\n    let data = await usersAPI.getUsers(requestingPage, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setUsersTotalCount(data.totalCount))\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId,\r\n        usersAPI.follow.bind(usersAPI),\r\n        followSuccess)\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId,\r\n        usersAPI.unfollow.bind(usersAPI),\r\n        unfollowSuccess)\r\n}\r\n","import React from 'react';\r\nimport s from './Paginator.module.css';\r\n\r\nexport const Paginator = ({currentPage, onPageChanged, totalUsersCount, pageSize, ...props}) => {\r\n\r\n    let pages = []\r\n    for (let i = 505; i <= 525; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span key={p.id}\r\n                             className={currentPage === p && s.selectPage}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport s from './User.module.css';\r\nimport userPhoto from '../../../u1-assets/images/user.png'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const User = ({user, followingInProgress, unfollow, follow, ...props}) => {\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img alt={'user'} className={s.avatar}\r\n                             src={user.photos.small != null ? user.photos.small : userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  className={s.unfollow_button}\r\n                                  onClick={() => {\r\n                                      unfollow(user.id)\r\n                                  }}>Unfollow</button>\r\n                        :\r\n                        <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                className={s.follow_button}\r\n                                onClick={() => {\r\n                                    follow(user.id)\r\n                                }}>Follow</button>}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport {Paginator} from \"../../u2-components/common/Paginator/Paginator\";\r\nimport {User} from \"./User/User\";\r\n\r\nexport const Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props}) => {\r\n\r\n    return (\r\n        <div className={s.users_wrapper}>\r\n            <Paginator currentPage={currentPage}\r\n                       onPageChanged={onPageChanged}\r\n                       totalUsersCount={totalUsersCount}\r\n                       pageSize={pageSize}\r\n            />\r\n\r\n            {users.map(u => <User user={u}\r\n                                  followingInProgress={props.followingInProgress}\r\n                                  key={u.id}\r\n                                  unfollow={props.unfollow}\r\n                                  follow={props.follow}/>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","export const getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\n//RESELECT library example\r\n//can get 3 dependency\r\n/*const SuperUserSelector = createSelector(getUsers,(users)=>{\r\n   return users.filter(u => true)\r\n})*/\r\n//can get 3 dependency\r\n/*const SuperUserSelector2 = createSelector(getUsers,getCurrentPage,(users,currentPage)=>{\r\n   return users.filter(u => true)\r\n})*/","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {follow, requestUsers, setCurrentPage, toggleFollowingProgress, unfollow,} from '../../u4-redux/users-reducer';\r\nimport {Users} from './Users';\r\nimport {Preloader} from '../../u2-components/common/preloader/Preloader';\r\nimport {compose} from 'redux';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n} from '../../u4-redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage,pageSize} = this.props\r\n        this.props.requestUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(pageNumber, pageSize)\r\n        this.props.setCurrentPage(pageNumber)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users pageSize={this.props.pageSize}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow, unfollow, setCurrentPage,\r\n        toggleFollowingProgress, requestUsers,\r\n    }),\r\n)(UsersContainer)","import React from 'react';\r\nimport s from './Login.module.css';\r\nimport {reduxForm} from 'redux-form';\r\nimport {CreateField, Input} from '../../u2-components/common/FormsControls/FormControls';\r\nimport {required} from '../../utils/validators/validators';\r\nimport {connect} from 'react-redux';\r\nimport {login} from '../../u4-redux/auth-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport const LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <p>Use test data</p>\r\n            <p>Email: free@samuraijs.com</p>\r\n            <p>Password: free</p>\r\n            {CreateField('Login', 'login', Input, [required])}\r\n            {CreateField('Password', 'password', Input, [required], {type: 'password'})}\r\n            {CreateField(null, 'rememberMe', Input, [], {type: 'checkbox'}, 'remember me')}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n            {error && <div className={s.formSummaryError}>{error}</div>}\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.login, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div className={s.login}>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)\r\n","import {getAuthUserData} from './auth-reducer';\r\n\r\nlet initializeState = {\r\n    initialized: false\r\n};\r\n\r\nexport const appReducer = (state = initializeState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {...state, initialized: true}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//Actions type\r\nconst INITIALIZED_SUCCESS = 'APP/INITIALIZED-SUCCESS';\r\n\r\n//Actions\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\n//Thunks\r\nexport const initializeApp = () => (dispatch) => {\r\n\r\n    let promise = dispatch(getAuthUserData())\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {Navbar} from './u3-features/Navbar/Navbar';\r\nimport {News} from './u3-features/News/News';\r\nimport {Music} from './u3-features/Music/Music';\r\nimport {Settings} from './u3-features/Settings/Settings';\r\nimport {Route, withRouter} from 'react-router-dom';\r\nimport HeaderContainer from './u3-features/Header/HeaderContainer';\r\nimport ProfileContainer from './u3-features/Profile/ProfileContainer';\r\nimport DialogsContainer from './u3-features/Dialogs/DialogsContainer';\r\nimport UsersContainer from './u3-features/Users/UsersContainer';\r\nimport Login from './u3-features/Login/Login';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {initializeApp} from './u4-redux/app-reducer';\r\nimport {Preloader} from './u2-components/common/preloader/Preloader';\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='all_wrapper'>\r\n                <div className='app-wrapper'>\r\n                    <HeaderContainer/>\r\n                    <Navbar/>\r\n                    <div className='app-wrapper-content'>\r\n                        <Route path='/login' render={() => <Login/>}/>\r\n                        <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n                        <Route path='/dialogs' render={() => <DialogsContainer/>}/>\r\n                        <Route path='/news' render={() => <News/>}/>\r\n                        <Route path='/music' render={() => <Music/>}/>\r\n                        <Route path='/settings' render={() => <Settings/>}/>\r\n                        <Route path='/users' render={() => <UsersContainer/>}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {profileReducer} from './profile-reducer';\r\nimport {dialogsReducer} from './dialogs-reducer';\r\nimport {usersReducer} from './users-reducer';\r\nimport {authReducer} from './auth-reducer';\r\nimport {appReducer} from './app-reducer';\r\nimport thinkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thinkMiddleware));\r\n\r\nwindow.store = store;\r\nexport default store;","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './u4-redux/store';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>, document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__32p7j\",\"logo_name\":\"Header_logo_name__3zk27\",\"login\":\"Header_login__16CVX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"User_avatar__3Tk98\",\"follow_button\":\"User_follow_button__TZgVz\",\"unfollow_button\":\"User_unfollow_button__2egOE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__Dzl7e\",\"avatarImg\":\"ProfileInfo_avatarImg__L3g3w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3D8pD\",\"posts\":\"MyPosts_posts__WUP1F\",\"add_post\":\"MyPosts_add_post__1nG-m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__D0p8B\",\"error\":\"FormControls_error__2QGSA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Login_formSummaryError__2UExk\"};"],"sourceRoot":""}