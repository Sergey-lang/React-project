{"version":3,"sources":["components/Navbar/Navbar.module.css","asets/images/preloader.gif","components/common/preloader/Preloader.module.css","asets/images/avatar.png","components/Profile/Post/Post.module.css","asets/images/user.png","components/Dialogs/Dialogs.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Login/Login.jsx","components/Header/Header.jsx","api/api.js","api/auth-api.js","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/common/preloader/Preloader.jsx","components/Profile/ProfInfo/ProfileStatus.jsx","components/Profile/ProfInfo/ProfileInfo.jsx","api/profile-api.js","redux/profile-reducer.js","components/Profile/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/hoc/withAuthRedirect.jsx","components/Profile/ProfileContainer.jsx","redux/dialogs-reducer.js","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","api/user-api.js","redux/users-reducer.js","components/Users/Users.jsx","components/Users/UsersContainer.jsx","App.js","redux/redux-store.js","index.js","components/Users/Users.module.css","components/Header/Header.module.css","components/Profile/ProfInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","active","to","activeClassName","activeLink","News","props","content","Music","Settings","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","type","Login","login","formData","console","log","Header","header","alt","src","logo_name","isAuth","instance","axios","withCredentials","baseURL","headers","authAPI","get","initializeState","id","email","isFetching","authReducer","state","action","data","HeaderContainer","this","getAuthUserData","React","Component","connect","auth","dispatch","then","response","resultCode","setAuthUserData","Preloader","preloader","ProfileStatus","editMode","status","activatedMode","setState","deactivatedMode","updateOwnProfileStatus","onStatusChange","e","currentTarget","value","componentDidUpdate","prevProps","prevState","onClick","onChange","autoFocus","onBlur","ProfileInfo","profile","descriptionBlock","avatarImg","photos","large","avatar","aboutMe","contacts","instagram","lookingForAJob","userId","lookingForAJobDescription","profileAPI","res","put","posts","message","likesCount","profileReducer","postMessageText","userStatus","Post","AddNewPostForm","MyPostsContainer","profilePage","addPost","addPostActionCreator","postsElements","map","p","key","postsBlock","newPostText","Profile","mapStateToPropsForRedirect","withAuthRedirect","RedirectComponent","ProfileContainer","componentDidMount","params","getUserProfileData","getStatusFomUser","compose","setOwnProfileStatus","withRouter","dialogs","messages","dialogsReducer","newMessage","messageText","Message","DialogItem","path","dialog","AddMessageReduxForm","Dialogs","dialogsPage","dialogsElements","d","Dialog","messagesElements","m","dialogsItems","addMessage","newMessageText","sendMessageCreator","usersAPI","currentPage","pageSize","post","delete","users","totalUsersCount","followingInProgress","toggleIsFetching","toggleFollowingProgress","usersReducer","u","followed","count","filter","Users","pages","i","push","users_wrapper","selectPage","onPageChanged","user","small","userPhoto","disabled","some","unfollow_button","unfollow","follow_button","follow","UsersContainer","pageNumber","getUsers","setCurrentPage","usersPage","followSuccess","unfollowSuccess","items","totalCount","App","render","DialogsContainer","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thinkMiddlaware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,WAAa,6B,sFCDrFD,EAAOC,QAAU,IAA0B,uC,oBCC3CD,EAAOC,QAAU,CAAC,UAAY,+B,oBCD9BD,EAAOC,QAAU,IAA0B,oC,oBCC3CD,EAAOC,QAAU,CAAC,KAAO,qB,oBCDzBD,EAAOC,QAAU,IAA0B,kC,qGCC3CD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,aAAe,8BAA8B,SAAW,0BAA0B,WAAa,4BAA4B,SAAW,4B,wCCWxMC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,6ECdOC,EAAS,WACnB,OACG,yBAAKC,UAAWC,IAAEC,KACf,yBAAKF,UAAS,UAAKC,IAAEE,KAAP,YAAeF,IAAEG,SAC5B,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBL,IAAEM,YAA1C,YAEH,yBAAKP,UAAWC,IAAEE,MACf,kBAAC,IAAD,CAASE,GAAG,WAAWC,gBAAiBL,IAAEM,YAA1C,aAEH,yBAAKP,UAAWC,IAAEE,MACf,kBAAC,IAAD,CAASE,GAAG,QAAQC,gBAAiBL,IAAEM,YAAvC,SAEH,yBAAKP,UAAWC,IAAEE,MACf,kBAAC,IAAD,CAASE,GAAG,SAASC,gBAAiBL,IAAEM,YAAxC,UAEH,yBAAKP,UAAWC,IAAEE,MACf,kBAAC,IAAD,CAASE,GAAG,YAAYC,gBAAiBL,IAAEM,YAA3C,aAEH,yBAAKP,UAAWC,IAAEE,MACf,kBAAC,IAAD,CAASE,GAAG,SAASC,gBAAiBL,IAAEM,YAAxC,Y,kBCpBCC,EAAO,SAACC,GAClB,OACG,yBAAKT,UAAWC,IAAES,SAAlB,sB,kBCFOC,EAAQ,SAACF,GACnB,OACG,yBAAKT,UAAWC,IAAES,SAAlB,U,kBCFOE,EAAW,SAACH,GACtB,OACG,yBAAKT,UAAWC,IAAES,SAAlB,a,4CCkBAG,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EAnBE,SAACL,GACvB,OACG,0BAAMO,SAAUP,EAAMQ,cACnB,6BACG,kBAACC,EAAA,EAAD,CAAOC,YAAa,QAASC,KAAM,QAASC,UAAW,WAE1D,6BACG,kBAACH,EAAA,EAAD,CAAOC,YAAa,WAAYC,KAAM,WAAYC,UAAW,WAEhE,6BACG,kBAACH,EAAA,EAAD,CAAOI,KAAM,WAAYF,KAAM,aAAcC,UAAW,UAD3D,eAGA,6BACG,8CAQCE,EAAQ,SAACd,GAInB,OACG,yBAAKT,UAAWC,IAAEuB,OACf,qCACA,kBAACX,EAAD,CAAgBG,SANL,SAACS,GACfC,QAAQC,IAAIF,Q,iDCVHG,EAbA,SAACnB,GACZ,OACI,4BAAQT,UAAWC,IAAE4B,QACjB,yBAAKC,IAAK,SAAUC,IAAI,qEACxB,yBAAK/B,UAAWC,IAAE+B,WAAlB,kBACA,yBAAKhC,UAAWC,IAAEuB,OACbf,EAAMwB,OAASxB,EAAMe,MAAM,kBAAC,IAAD,CAASnB,GAAI,UAAb,Y,cCR/B6B,E,OAAWC,OAAa,CACpCC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACR,UAAW,0CCJAC,EAAU,WAEjB,OAAOL,EAASM,IAAT,YCCTC,EAAkB,CACnBC,GAAI,KACJC,MAAO,KACPnB,MAAO,KACPoB,YAAY,EACZX,QAAQ,GA0BIY,EAvBK,WAAsC,IAArCC,EAAoC,uDAA5BL,EAAiBM,EAAW,uCACtD,OAAQA,EAAOzB,MACZ,IAZgB,gBAcb,OAAO,eACDwB,EADN,GAEMC,EAAOC,KAFb,CAGGf,QAAQ,IAEd,IApBqB,cAqBlB,OAAO,eAAIa,EAAX,CAAkBF,WAAYG,EAAOH,aAExC,QACG,OAAOE,ICrBVG,E,kLAEAC,KAAKzC,MAAM0C,oB,+BAIX,OAAO,kBAAC,EAAWD,KAAKzC,W,GANA2C,IAAMC,WAiBrBC,eANS,SAACR,GAAD,MAAY,CACjCb,OAAQa,EAAMS,KAAKtB,OACnBT,MAAOsB,EAAMS,KAAK/B,SAImB,CAAC2B,gBDgBV,WAC5B,OAAO,SAACK,GACLjB,IACIkB,MAAK,SAAAC,GACH,GAAiC,IAA7BA,EAASV,KAAKW,WAAkB,CAAC,IAAD,EACRD,EAASV,KAAKA,KAAlCN,EAD4B,EAC5BA,GAAIlB,EADwB,EACxBA,MAAOmB,EADiB,EACjBA,MAChBa,EAbgB,SAACd,EAAIC,EAAOnB,GAAZ,MAC5B,CAACF,KA7BkB,gBA6BG0B,KAAM,CAACN,KAAIC,QAAOnB,UAYnBoC,CAAgBlB,EAAIlB,EAAOmB,WCtBpCW,CAA4CL,G,4DCb5CY,EAJC,WACf,OAAO,6BAAK,yBAAK/B,IAAK,YAAa9B,UAAWC,IAAE6D,UAAW/B,IAAK+B,QC2ClDC,E,4MA7CZjB,MAAQ,CACLkB,UAAU,EACVC,OAAQ,EAAKxD,MAAMwD,Q,EAEtBC,cAAgB,WACb,EAAKC,SAAS,CAACH,UAAU,K,EAE5BI,gBAAkB,WACf,EAAKD,SAAS,CAACH,UAAU,IACzB,EAAKvD,MAAM4D,uBAAuB,EAAKvB,MAAMmB,S,EAEhDK,eAAiB,SAACC,GACf,EAAKJ,SAAS,CAACF,OAAQM,EAAEC,cAAcC,S,EAG1CC,mBAAqB,SAACC,EAAWC,GAC1BD,EAAUV,SAAW,EAAKxD,MAAMwD,QACjC,EAAKE,SAAS,CACXF,OAAQ,EAAKxD,MAAMwD,U,uDAMzB,OACG,8BACKf,KAAKJ,MAAMkB,UACb,6BACG,0BAAMa,QAAS3B,KAAKgB,eAChBhB,KAAKzC,MAAMwD,QAAU,UAG3Bf,KAAKJ,MAAMkB,UACZ,6BACG,2BAAOc,SAAU5B,KAAKoB,eACfS,WAAW,EACXC,OAAQ9B,KAAKkB,gBACbK,MAAOvB,KAAKJ,MAAMmB,e,GAvCZb,IAAMC,W,kBC4BnB4B,EAxBK,SAACxE,GAClB,OAAKA,EAAMyE,QAKR,6BACG,yBAAKlF,UAAWC,IAAEkF,kBACf,yBAAKnF,UAAWC,IAAEmF,WACf,yBAAKtD,IAAI,SAASC,IAAKtB,EAAMyE,QAAQG,OAAOC,MAAQ7E,EAAMyE,QAAQG,OAAOC,MAAQC,OAEpF,6BACG,kBAAC,EAAD,CAAetB,OAAQxD,EAAMwD,OAAQI,uBAAwB5D,EAAM4D,0BAEtE,2BAAI5D,EAAMyE,QAAQM,SAClB,2BAAI/E,EAAMyE,QAAQO,SAASC,WAC3B,2BAAIjF,EAAMyE,QAAQS,gBAClB,2BAAIlF,EAAMyE,QAAQU,QAClB,2BAAInF,EAAMyE,QAAQW,6BAhBjB,kBAAC,EAAD,O,SCNAC,GAAa,SACZF,GACR,OAAO1D,EAASM,IAAT,kBAAwBoD,IAC3BnC,MAAK,SAAAsC,GACH,OAAOA,EAAI/C,SAJV8C,GAAa,SAQTF,GACX,OAAO1D,EAASM,IAAT,yBAA+BoD,IAClCnC,MAAK,SAAAsC,GAAG,OAAIA,MAVTD,GAAa,SAaA7B,GACpB,OAAO/B,EAAS8D,IAAT,kBAA+B,CAAC/B,WACnCR,MAAK,SAAAsC,GACH,OAAOA,EAAI/C,SCXnBP,GAAkB,CACnBwD,MAAO,CACJ,CAACvD,GAAI,EAAGwD,QAAS,kEAAmEC,WAAY,IAChG,CAACzD,GAAI,EAAGwD,QAAS,8CAA+CC,WAAY,KAE/EjB,QAAS,KACTjB,OAAQ,IAqEImC,GAlEQ,WAAsC,IAArCtD,EAAoC,uDAA5BL,GAAiBM,EAAW,uCACzD,OAAQA,EAAOzB,MACZ,IAhBW,WAiBR,OAAO,eACDwB,EADN,CAEGmD,MAAM,CAAE,CAACvD,GAAI,EAAGwD,QAASnD,EAAOsD,gBAAiBF,WAAY,IAAxD,oBAA+DrD,EAAMmD,UAEhF,IApBmB,mBAqBhB,OAAO,eACDnD,EADN,CAEGoC,QAASnC,EAAOmC,UAGtB,IAzB0B,0BA0BvB,OAAO,eACDpC,EADN,CAEGmB,OAAQlB,EAAOuD,aAGrB,IA9ByB,wBA+BtB,OAAO,eACDxD,EADN,CAEGmB,OAAQlB,EAAOkB,SAGrB,QACG,OAAOnB,I,yCCvCHyD,GAAO,SAAC9F,GAClB,OAAO,yBAAKT,UAAWC,KAAEE,MACtB,yBAAK2B,IAAK,OAAQC,IAAI,mEACtB,6BACItB,EAAMyF,QACP,uCAFH,IAEuBzF,EAAM0F,cCgC7BK,GAAiB1F,YAAU,CAACC,KAAM,wBAAjBD,EAhBA,SAACL,GACrB,OACG,0BAAMO,SAAUP,EAAMQ,cACnB,6BACG,kBAACC,EAAA,EAAD,CAAOC,YAAY,WACZE,UAAU,WACVD,KAAK,iBAGf,6BACG,iDCdGqF,GADUnD,aAdD,SAACR,GACtB,MAAO,CACJmD,MAAOnD,EAAM4D,YAAYT,UAIJ,SAACzC,GACzB,MAAO,CACJmD,QAAS,SAACN,GACP7C,EHgC2B,SAAC6C,GAAD,MAAsB,CAAC/E,KA5C1C,WA4C0D+E,mBGhCzDO,CAAqBP,QAKd/C,EDdF,SAAC7C,GACrB,IAAIoG,EACDpG,EAAMwF,MAAMa,KAAI,SAAAC,GAAC,OAAI,kBAAC,GAAD,CAAMC,IAAKD,EAAErE,GAAIwD,QAASa,EAAEb,QAASC,WAAYY,EAAEZ,gBAM3E,OACG,yBAAKnG,UAAWC,KAAEgH,YACf,wCACA,kBAACT,GAAD,CAAgBxF,SAPL,SAACyD,GACfhE,EAAMkG,QAAQlC,EAAMyC,gBAOjB,yBAAKlH,UAAWC,KAAEgG,OACdY,OEHEM,GAXC,SAAC1G,GACd,OACG,6BACG,kBAAC,EAAD,CAAayE,QAASzE,EAAMyE,QACfjB,OAAQxD,EAAMwD,OACdI,uBAAwB5D,EAAM4D,yBAC3C,kBAAC,GAAD,QCNH+C,GAA6B,SAACtE,GAAD,MAAY,CAC5Cb,OAAQa,EAAMS,KAAKtB,SAGToF,GAAmB,SAAChE,GAAe,IACvCiE,EADsC,uKAGtC,OAAKpE,KAAKzC,MAAMwB,OACT,kBAACoB,EAAcH,KAAKzC,OADI,kBAAC,IAAD,CAAUJ,GAAG,eAHN,GACZ+C,IAAMC,WAStC,OAFsCC,YAAQ8D,GAAR9D,CAAoCgE,ICRvEC,G,4MACHC,kBAAoB,WACjB,IAAI5B,EAAS,EAAKnF,MAAMX,MAAM2H,OAAO7B,OAChCA,IACFA,EAAS,MAEZ,EAAKnF,MAAMiH,mBAAmB9B,GAC9B,EAAKnF,MAAMkH,iBAAiB/B,I,uDAI5B,OAAO,kBAAC,GAAD,iBAAa1C,KAAKzC,MAAlB,CACSyE,QAAShC,KAAKzC,MAAMyE,QACpBjB,OAAQf,KAAKzC,MAAMwD,OACnBI,uBAAwBnB,KAAKzC,MAAM4D,8B,GAd1BjB,IAAMC,WAwBtBuE,eACZtE,aAPqB,SAACR,GAAD,MAAY,CACjCoC,QAASpC,EAAM4D,YAAYxB,QAC3BjB,OAAQnB,EAAM4D,YAAYzC,UAKD,CAACyD,mBNwBK,SAAC9B,GAChC,OAAO,SAACpC,GACLsC,GAAsBF,GAClBnC,MAAK,SAAAT,GACHQ,EAZR,CAAClC,KA9CoB,mBA8CI4D,QAYWlC,SM5BS2E,iBNiCjB,SAAC/B,GAAD,OAAY,SAACpC,GAC1CsC,GAAyBF,GACrBnC,MAAK,SAAAsC,GACHvC,EAjBqC,CAAClC,KAhDf,0BAgD8CgF,WAiB9CP,EAAI/C,YMpC+BqB,uBNwC7B,SAACJ,GAAD,OAAY,SAACT,GAChDsC,GAAkC7B,GAC9BR,MAAK,SAAAT,GACqB,IAApBA,EAAKW,YACNH,EAxBuB,SAACS,GAAD,MAAa,CAAC3C,KAhDlB,wBAgDgD2C,UAwB1D4D,CAAoB5D,WM3CtC6D,IACAT,GAHYO,CAIbL,IClCE9E,GAAkB,CACnBsF,QAAS,CACN,CAACrF,GAAI,EAAGtB,KAAM,UACd,CAACsB,GAAI,EAAGtB,KAAM,UACd,CAACsB,GAAI,EAAGtB,KAAM,UAEjB4G,SAAU,CACP,CAACtF,GAAI,EAAGwD,QAAS,MACjB,CAACxD,GAAI,EAAGwD,QAAS,gBACjB,CAACxD,GAAI,EAAGwD,QAAS,wBAmBR+B,GAfQ,WAAsC,IAArCnF,EAAoC,uDAA5BL,GAAiBM,EAAW,uCACzD,OAAQA,EAAOzB,MACZ,IAjBe,cAkBZ,IAAI4G,EAAanF,EAAOoF,YACxB,OAAO,eACDrF,EADN,CAEGkF,SAAS,GAAD,oBAAMlF,EAAMkF,UAAZ,CAAsB,CAACtF,GAAI,EAAGwD,QAAQgC,OAEpD,QACG,OAAOpF,I,oBCdDsF,GANC,SAAC3H,GACb,OACI,yBAAKT,UAAWC,KAAEiG,SAAUzF,EAAMyF,UCO3BmC,GATI,SAAC5H,GAChB,IAAI6H,EAAO,YAAc7H,EAAMiC,GAC/B,OACI,yBAAK1C,UAAWC,KAAEsI,OAAS,IAAMtI,KAAEG,QAC/B,kBAAC,IAAD,CAASC,GAAIiI,GAAO7H,EAAMW,QCwChCoH,GAAsB1H,YAAU,CAACC,KAAM,wBAAjBD,EAhBL,SAACL,GACrB,OACG,0BAAMO,SAAUP,EAAMQ,cACnB,6BACG,kBAACC,EAAA,EAAD,CAAOG,UAAW,WACXD,KAAM,iBACND,YAAa,wBAGvB,6BACG,qDAQGsH,GA5CC,SAAChI,GAEd,IAAIqC,EAAQrC,EAAMiI,YAEdC,EAAkB7F,EAAMiF,QAAQjB,KAAI,SAAA8B,GAAC,OAAI,kBAACC,GAAD,CAAYzH,KAAMwH,EAAExH,KAAM4F,IAAK4B,EAAElG,GAAIA,GAAIkG,EAAElG,QACpFoG,EAAmBhG,EAAMkF,SAASlB,KAAI,SAAAiC,GAAC,OAAI,kBAAC,GAAD,CAAS/B,IAAK+B,EAAErG,GAAIwD,QAAS6C,EAAE7C,aAM9E,OACG,yBAAKlG,UAAWC,KAAE8H,SACf,yBAAK/H,UAAWC,KAAE+I,cACdL,GAEJ,yBAAK3I,UAAWC,KAAE+H,UACf,6BAAMc,GACN,yBAAK9I,UAAWC,KAAEgJ,YACf,kBAACT,GAAD,CAAqBxH,SAZb,SAACyD,GAClBhE,EAAMwI,WAAWxE,EAAMyE,uBCOdtB,eACZtE,aAfqB,SAACR,GACtB,MAAO,CACJ4F,YAAa5F,EAAM4F,gBAIE,SAAClF,GACzB,MAAO,CACJyF,WAAY,SAACd,GACV3E,EJYyB,SAAC2E,GAAD,MAAkB,CAAC7G,KA5BhC,cA4BoD6G,eIZvDgB,CAAmBhB,SAOlCd,GAFYO,CAGba,ICtBWW,GAAW,WAEmB,IAAjCC,EAAgC,uDAAlB,EAAGC,EAAe,uDAAJ,GACpC,OAAOpH,EAASM,IAAT,qBAA2B6G,EAA3B,kBAAgDC,IACrD7F,MAAK,SAAAC,GACL,OAAOA,EAASV,SALPoG,GAAW,SAQhBxD,GACN,OAAO1D,EAASqH,KAAT,iBAAwB3D,IAC7BnC,MAAK,SAAAC,GACL,OAAOA,EAASV,SAXPoG,GAAW,SAcdxD,GACR,OAAO1D,EAASsH,OAAT,iBAA0B5D,IAC/BnC,MAAK,SAAAC,GACL,OAAOA,EAASV,SCThBP,GAAkB,CACnBgH,MAAO,GACPH,SAAU,EACVI,gBAAiB,EACjBL,YAAa,EACbzG,YAAY,EACZ+G,oBAAqB,CAAC,EAAG,IAuDfC,GAAmB,SAAChH,GAAD,MAAiB,CAACtB,KAhEvB,cAgEiDsB,eAC/DiH,GAA0B,SAACjH,EAAYgD,GAAb,MAAyB,CAC7DtE,KAjEqC,kCAkErCsB,aACAgD,WA8CYkE,GAtGM,WAAsC,IAArChH,EAAoC,uDAA5BL,GAAiBM,EAAW,uCACvD,OAAQA,EAAOzB,MACZ,IAnBS,SAoBN,OAAO,eACDwB,EADN,CAEG2G,MAAO3G,EAAM2G,MAAM3C,KAAI,SAAAiD,GACpB,OAAIA,EAAErH,KAAOK,EAAO6C,OACV,eAAImE,EAAX,CAAcC,UAAU,IAEpBD,OAGhB,IA5BW,WA6BR,OAAO,eACDjH,EADN,CAEG2G,MAAO3G,EAAM2G,MAAM3C,KAAI,SAAAiD,GACpB,OAAIA,EAAErH,KAAOK,EAAO6C,OACV,eAAImE,EAAX,CAAcC,UAAU,IAEpBD,OAGhB,IArCY,YAsCT,OAAO,eAAIjH,EAAX,CAAkB2G,MAAO1G,EAAO0G,QAEnC,IAvCmB,mBAwChB,OAAO,eAAI3G,EAAX,CAAkBuG,YAAatG,EAAOsG,cAEzC,IAzCwB,wBA0CrB,OAAO,eAAIvG,EAAX,CAAkB4G,gBAAiB3G,EAAOkH,QAE7C,IA3CqB,cA4ClB,OAAO,eAAInH,EAAX,CAAkBF,WAAYG,EAAOH,aAExC,IA7CkC,kCA8C/B,OAAO,eACDE,EADN,CAEG6G,oBAAqB5G,EAAOH,WAAP,uBACZE,EAAM6G,qBADM,CACe5G,EAAO6C,SACtC9C,EAAM6G,oBAAoBO,QAAO,SAAAxH,GAAE,OAAIA,IAAOK,EAAO6C,YAGhE,QACG,OAAO9C,I,yCCJDqH,GArDH,SAAC1J,GAEV,IADA,IAAI2J,EAAQ,GACHC,EAAI,IAAKA,GAAK,IAAKA,IACzBD,EAAME,KAAKD,GAGd,OACG,yBAAKrK,UAAWC,KAAEsK,eACf,6BACIH,EAAMtD,KAAI,SAAAC,GACR,OAAO,0BAAMC,IAAKD,EAAErE,GAAI1C,UAAWS,EAAM4I,cAAgBtC,GAAK9G,KAAEuK,WACnD3F,QAAS,SAACN,GACP9D,EAAMgK,cAAc1D,KACnBA,OAIpBtG,EAAMgJ,MAAM3C,KAAI,SAAAiD,GAAC,OAAI,yBAAK/C,IAAK+C,EAAErH,IAC9B,yBAAK1C,UAAWC,KAAEyK,MACf,6BACG,kBAAC,IAAD,CAASrK,GAAI,YAAc0J,EAAErH,IAC1B,yBAAKZ,IAAK,OAAQ9B,UAAWC,KAAEsF,OAC1BxD,IAAuB,MAAlBgI,EAAE1E,OAAOsF,MAAgBZ,EAAE1E,OAAOsF,MAAQC,SAG1D,6BACIb,EAAEC,SACE,4BAAQa,SAAUpK,EAAMkJ,oBAAoBmB,MAAK,SAAApI,GAAE,OAAIA,IAAOqH,EAAErH,MACxD1C,UAAWC,KAAE8K,gBACblG,QAAS,WACNpE,EAAMuK,SAASjB,EAAErH,MAH5B,YAMF,4BAAQmI,SAAUpK,EAAMkJ,oBAAoBmB,MAAK,SAAApI,GAAE,OAAIA,IAAOqH,EAAErH,MAAK1C,UAAWC,KAAEgL,cAC1EpG,QAAS,WACNpE,EAAMyK,OAAOnB,EAAErH,MAF1B,YAMT,6BACG,6BAAMqH,EAAE3I,MACR,6BAAM2I,EAAE9F,SAEX,6BACG,6BAAM,mBACN,6BAAM,6BCpClBkH,G,4MAKHV,cAAgB,SAACW,GACd,EAAK3K,MAAM4K,SAASD,EAAY,EAAK3K,MAAM6I,UAC3C,EAAK7I,MAAM6K,eAAeF,I,kEAL1BlI,KAAKzC,MAAM4K,SAASnI,KAAKzC,MAAM4I,YAAanG,KAAKzC,MAAM6I,Y,+BASvD,OAAO,oCACHpG,KAAKzC,MAAMmC,WAAa,kBAAC,EAAD,MAAe,KACxC,kBAAC,GAAD,CAAO0G,SAAUpG,KAAKzC,MAAM6I,SACrBI,gBAAiBxG,KAAKzC,MAAMiJ,gBAC5BL,YAAanG,KAAKzC,MAAM4I,YACxBoB,cAAevH,KAAKuH,cACpBhB,MAAOvG,KAAKzC,MAAMgJ,MAClBuB,SAAU9H,KAAKzC,MAAMuK,SACrBE,OAAQhI,KAAKzC,MAAMyK,OACnBvB,oBAAqBzG,KAAKzC,MAAMkJ,2B,GApBnBvG,IAAMC,WAqCpBuE,eACZtE,aAZqB,SAACR,GACtB,MAAO,CACJ2G,MAAO3G,EAAMyI,UAAU9B,MACvBH,SAAUxG,EAAMyI,UAAUjC,SAC1BI,gBAAiB5G,EAAMyI,UAAU7B,gBACjCL,YAAavG,EAAMyI,UAAUlC,YAC7BzG,WAAYE,EAAMyI,UAAU3I,WAC5B+G,oBAAqB7G,EAAMyI,UAAU5B,uBAKf,CACtBuB,OFuCgB,SAACtF,GAEpB,OAAO,SAACpC,GACLA,EAASqG,IAAwB,EAAMjE,IACvCwD,GAAgBxD,GACZnC,MAAK,SAAAC,GACyB,IAAxBA,EAASC,YACVH,EAjCc,SAACoC,GAAD,MAAa,CAACtE,KAhE5B,SAgE0CsE,UAiCjC4F,CAAc5F,IAE1BpC,EAASqG,IAAwB,EAAOjE,SEhDtCoF,SFqDU,SAACpF,GAEtB,OAAO,SAACpC,GACLA,EAASqG,IAAwB,EAAMjE,IACvCwD,GAAkBxD,GACdnC,MAAK,SAAAC,GACyB,IAAxBA,EAASC,YACVH,EA9CgB,SAACoC,GAAD,MAAa,CAACtE,KAhE5B,WAgE4CsE,UA8CrC6F,CAAgB7F,IAE5BpC,EAASqG,IAAwB,EAAOjE,SE9D5B0F,eFgBM,SAACjC,GAAD,MAAkB,CAAC/H,KAhExB,mBAgEgD+H,gBEfnEQ,2BAAyBwB,SF0BP,SAAChC,EAAaC,GAEnC,OAAO,SAAC9F,GACLA,EAASoG,IAAiB,IAC1BR,GAAkBC,EAAaC,GAAU7F,MAAK,SAAAT,GAC3CQ,EAASoG,IAAiB,IAC1BpG,EAlB2B,CAAClC,KAhEnB,YAgEoCmI,MAkB3BzG,EAAK0I,QACvBlI,EAjB+C,CAAClC,KAhE3B,wBAgEwD2I,MAiBjDjH,EAAK2I,oBE/BvCtE,GALYO,CAMbuD,IC5CWS,GAAM,SAACnL,GACjB,OACG,yBAAKT,UAAU,eACZ,yBAAKA,UAAU,eACZ,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,uBACZ,kBAAC,IAAD,CAAOsI,KAAK,SAASuD,OAAQ,kBAAM,kBAAC,EAAD,SACnC,kBAAC,IAAD,CAAOvD,KAAK,oBAAoBuD,OAAQ,kBAAM,kBAAC,GAAD,SAC9C,kBAAC,IAAD,CAAOvD,KAAK,WAAWuD,OAAQ,kBAAM,kBAACC,GAAD,SACrC,kBAAC,IAAD,CAAOxD,KAAK,QAAQuD,OAAQ,kBAAM,kBAAC,EAAD,SAClC,kBAAC,IAAD,CAAOvD,KAAK,SAASuD,OAAQ,kBAAM,kBAAC,EAAD,SACnC,kBAAC,IAAD,CAAOvD,KAAK,YAAYuD,OAAQ,kBAAM,kBAAC,EAAD,SACtC,kBAAC,IAAD,CAAOvD,KAAK,SAASuD,OAAQ,kBAAM,kBAAC,GAAD,a,oBClB9CE,GAAWC,YAAgB,CAC9BtF,YAAaN,GACbsC,YAAaT,GACbsD,UAAWzB,GACXvG,KAAMV,EACN9B,KAAMkL,OAGHC,GAAQC,YAAYJ,GAASK,YAAgBC,OACjD1M,OAAOuM,MAAQA,GACAA,UCTfI,IAAST,OACN,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAUK,MAAOA,IACd,kBAAC,GAAD,QAEYK,SAASC,eAAe,SjCqHvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlJ,MAAK,SAAAmJ,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrL,QAAQqL,MAAMA,EAAM7G,a,mBkCxI5B1G,EAAOC,QAAU,CAAC,cAAgB,6BAA6B,WAAa,0BAA0B,OAAS,sBAAsB,cAAgB,6BAA6B,gBAAkB,iC,mBCApMD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,UAAY,0BAA0B,MAAQ,wB,mBCAhGD,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,UAAY,iC,mBCAvFD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,uBAAuB,SAAW,6B","file":"static/js/main.5bdfc606.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3JSLM\",\"item\":\"Navbar_item__tfWnZ\",\"activeLink\":\"Navbar_activeLink__DEEo2\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.d5c02aa6.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3NrQu\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.bb9bcac6.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1B3C-\"};","module.exports = __webpack_public_path__ + \"static/media/user.abb5b607.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3OFj2\",\"dialog\":\"Dialogs_dialog__3fVZr\",\"dialogsItems\":\"Dialogs_dialogsItems__3fcb5\",\"messages\":\"Dialogs_messages__39mll\",\"addMessage\":\"Dialogs_addMessage__1fBss\",\"add_post\":\"Dialogs_add_post__2QLIl\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'Settings content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\n   return (\r\n      <nav className={s.nav}>\r\n         <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n         </div>\r\n         <div className={s.item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n         </div>\r\n         <div className={s.item}>\r\n            <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n         </div>\r\n         <div className={s.item}>\r\n            <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n         </div>\r\n         <div className={s.item}>\r\n            <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n         </div>\r\n         <div className={s.item}>\r\n            <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n         </div>\r\n      </nav>\r\n   )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nexport const News = (props) => {\r\n   return (\r\n      <div className={s.content}>\r\n         This will be news\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nexport const Music = (props) => {\r\n   return (\r\n      <div className={s.content}>\r\n         Music\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nexport const Settings = (props) => {\r\n   return (\r\n      <div className={s.content}>\r\n         Settings\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Login.module.css';\r\nimport {Field, reduxForm} from 'redux-form';\r\n\r\nexport const LoginForm = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <div>\r\n            <Field placeholder={'Login'} name={'login'} component={'input'}/>\r\n         </div>\r\n         <div>\r\n            <Field placeholder={'Password'} name={'password'} component={'input'}/>\r\n         </div>\r\n         <div>\r\n            <Field type={'checkbox'} name={'rememberMe'} component={'input'}/>Remember me\r\n         </div>\r\n         <div>\r\n            <button>Login</button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nexport const Login = (props) => {\r\n   const onSubmit = (formData) => {\r\n      console.log(formData)\r\n   }\r\n   return (\r\n      <div className={s.login}>\r\n         <h1>Login</h1>\r\n         <LoginReduxForm onSubmit={onSubmit}/>\r\n      </div>\r\n   )\r\n}\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img alt={'header'} src=\"https://img.icons8.com/carbon-copy/100/000000/minecraft-logo.png\" />\r\n            <div className={s.logo_name}>Social netWork</div>\r\n            <div className={s.login}>\r\n                {props.isAuth ? props.login:<NavLink to={'/login'}>Login</NavLink>}\r\n                \r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n\r\n","import * as axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n\theaders: {\r\n\t\t'API-KEY': 'ec9092bf-d7c1-484e-b4e6-892ed49a92ea'\r\n\t}\r\n});\r\n\r\n\r\n\r\n\r\n","import {instance} from './api';\r\n\r\nexport const authAPI = {\r\n   authMe() {\r\n      return instance.get(`auth/me`)\r\n   },\r\n\r\n   loginMe(email,password,rememberMe,captcha) {\r\n      return instance.post(`auth/login`,{email,password,rememberMe,captcha})\r\n   },\r\n\r\n   logoutMe(email,password,rememberMe,captcha) {\r\n      return instance.delete(`auth/login`,{email,password,rememberMe,captcha})\r\n   },\r\n}","import {authAPI} from '../api/auth-api';\r\n\r\nconst TOGGLE_IS_FETCHING = 'IS_FETCHING';\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n\r\nlet initializeState = {\r\n   id: null,\r\n   email: null,\r\n   login: null,\r\n   isFetching: true,\r\n   isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initializeState, action) => {\r\n   switch (action.type) {\r\n      case SET_USER_DATA:\r\n\r\n         return {\r\n            ...state,\r\n            ...action.data,\r\n            isAuth: true\r\n         };\r\n      case TOGGLE_IS_FETCHING: {\r\n         return {...state, isFetching: action.isFetching}\r\n      }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (id, email, login) => (\r\n   {type: SET_USER_DATA, data: {id, email, login}});\r\nexport const toggleIsFetching = (isFetching) => (\r\n   {type: TOGGLE_IS_FETCHING, isFetching});\r\n\r\nexport default authReducer;\r\n\r\nexport const getAuthUserData = () => {\r\n   return (dispatch) => {\r\n      authAPI.authMe()\r\n         .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n               let {id, login, email} = response.data.data;\r\n               dispatch(setAuthUserData(id, login, email));\r\n            }\r\n         });\r\n   }\r\n}","import React from 'react';\r\nimport Header from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {getAuthUserData} from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n   componentDidMount() {\r\n      this.props.getAuthUserData()\r\n   }\r\n\r\n   render() {\r\n      return <Header {...this.props} />\r\n   }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n   isAuth: state.auth.isAuth,\r\n   login: state.auth.login,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData})(HeaderContainer);\r\n\r\n","import React from \"react\";\r\nimport preloader from \"../../../asets/images/preloader.gif\";\r\nimport s from './Preloader.module.css';\r\n\r\n\r\nlet Preloader = () => {\r\n\treturn <div><img alt={'preloader'} className={s.preloader} src={preloader} /></div>\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n   state = {\r\n      editMode: false,\r\n      status: this.props.status\r\n   }\r\n   activatedMode = () => {\r\n      this.setState({editMode: true})\r\n   }\r\n   deactivatedMode = () => {\r\n      this.setState({editMode: false})\r\n      this.props.updateOwnProfileStatus(this.state.status)\r\n   }\r\n   onStatusChange = (e) => {\r\n      this.setState({status: e.currentTarget.value})\r\n   }\r\n\r\n   componentDidUpdate = (prevProps, prevState) => {\r\n      if (prevProps.status !== this.props.status) {\r\n         this.setState({\r\n            status: this.props.status\r\n         })\r\n      }\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            {!this.state.editMode &&\r\n            <div>\r\n               <span onClick={this.activatedMode}>\r\n                  {this.props.status || '-----'}\r\n               </span>\r\n            </div>}\r\n            {this.state.editMode &&\r\n            <div>\r\n               <input onChange={this.onStatusChange}\r\n                      autoFocus={true}\r\n                      onBlur={this.deactivatedMode}\r\n                      value={this.state.status}/>\r\n            </div>}\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport avatar from './../../../asets/images/avatar.png'\r\n\r\nconst ProfileInfo = (props) => {\r\n   if (!props.profile) {\r\n      return <Preloader/>\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <div className={s.descriptionBlock}>\r\n            <div className={s.avatarImg}>\r\n               <img alt='avatar' src={props.profile.photos.large ? props.profile.photos.large : avatar}/>\r\n            </div>\r\n            <div>\r\n               <ProfileStatus status={props.status} updateOwnProfileStatus={props.updateOwnProfileStatus}/>\r\n            </div>\r\n            <p>{props.profile.aboutMe}</p>\r\n            <p>{props.profile.contacts.instagram}</p>\r\n            <p>{props.profile.lookingForAJob}</p>\r\n            <p>{props.profile.userId}</p>\r\n            <p>{props.profile.lookingForAJobDescription}</p>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n","import {instance} from './api';\r\n\r\nexport const profileAPI = {\r\n   getProfile(userId) {\r\n      return instance.get(`profile/${userId}`)\r\n         .then(res => {\r\n            return res.data\r\n         });\r\n   },\r\n\r\n   getUserStatus(userId) {\r\n      return instance.get(`profile/status/${userId}`)\r\n         .then(res => res);\r\n   },\r\n\r\n   updateOwnProfileStatus(status) {\r\n      return instance.put(`profile/status/`,{status})\r\n         .then(res => {\r\n            return res.data\r\n         });\r\n   },\r\n}","import {profileAPI} from '../api/profile-api';\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst GET_USER_PROFILE_STATUS = 'SET-USER-PROFILE-STATUS';\r\nconst SET_OWN_PROFILE_STATUS = 'UPDATE-PROFILE-STATUS';\r\n\r\nlet initializeState = {\r\n   posts: [\r\n      {id: 1, message: 'Hi, how do you feel? I have not seen you since I was in Berlin!', likesCount: 12},\r\n      {id: 2, message: 'Wow! It is great! When are you going there?', likesCount: 12}\r\n   ],\r\n   profile: null,\r\n   status: '',\r\n};\r\n\r\nconst profileReducer = (state = initializeState, action) => {\r\n   switch (action.type) {\r\n      case ADD_POST:\r\n         return {\r\n            ...state,\r\n            posts: [{id: 3, message: action.postMessageText, likesCount: 0}, ...state.posts],\r\n         };\r\n      case SET_USER_PROFILE: {\r\n         return {\r\n            ...state,\r\n            profile: action.profile\r\n         };\r\n      }\r\n      case GET_USER_PROFILE_STATUS: {\r\n         return {\r\n            ...state,\r\n            status: action.userStatus\r\n         };\r\n      }\r\n      case SET_OWN_PROFILE_STATUS: {\r\n         return {\r\n            ...state,\r\n            status: action.status\r\n         };\r\n      }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport const addPostActionCreator = (postMessageText) => ({type: ADD_POST, postMessageText});\r\n\r\nexport const setUserProfileData = (profile) =>\r\n   ({type: SET_USER_PROFILE, profile})\r\n\r\n//STATUS\r\nexport const getUserStatus = (userStatus) => ({type: GET_USER_PROFILE_STATUS, userStatus});\r\nexport const setOwnProfileStatus = (status) => ({type: SET_OWN_PROFILE_STATUS, status});\r\n\r\n\r\n//Thunks\r\nexport const getUserProfileData = (userId) => {\r\n   return (dispatch) => {\r\n      profileAPI.getProfile(userId)\r\n         .then(data => {\r\n            dispatch(setUserProfileData(data));\r\n         });\r\n   }\r\n}\r\n\r\nexport const getStatusFomUser = (userId) => (dispatch) => {\r\n   profileAPI.getUserStatus(userId)\r\n      .then(res => {\r\n         dispatch(getUserStatus(res.data));\r\n      });\r\n}\r\n\r\nexport const updateOwnProfileStatus = (status) => (dispatch) => {\r\n   profileAPI.updateOwnProfileStatus(status)\r\n      .then(data => {\r\n         if (data.resultCode === 0) {\r\n            dispatch(setOwnProfileStatus(status));\r\n         }\r\n      });\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nexport const Post = (props) => {\r\n   return <div className={s.item}>\r\n      <img alt={'post'} src=\"https://img.icons8.com/bubbles/100/000000/flag-person-male.png\"/>\r\n      <div>\r\n         {props.message}\r\n         <span> Like</span> {props.likesCount}\r\n      </div>\r\n   </div>\r\n\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport {Post} from '../Post/Post';\r\nimport {Field, reduxForm} from 'redux-form';\r\n\r\nexport const MyPosts = (props) => {\r\n   let postsElements =\r\n      props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n   let addNewPost = (value) => {\r\n      props.addPost(value.newPostText)\r\n   }\r\n\r\n   return (\r\n      <div className={s.postsBlock}>\r\n         <h3>My posts</h3>\r\n         <AddNewPostForm onSubmit={addNewPost}/>\r\n         <div className={s.posts}>\r\n            {postsElements}\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport const AddPost = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <div>\r\n            <Field placeholder='Add post'\r\n                   component='textarea'\r\n                   name='newPostText'\r\n            />\r\n         </div>\r\n         <div>\r\n            <button>Add post</button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\n\r\nconst AddNewPostForm = reduxForm({form: 'dialogAddMessageForm'})(AddPost)\r\n","import React from 'react';\r\nimport {addPostActionCreator} from '../../../redux/profile-reducer';\r\nimport {MyPosts} from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      posts: state.profilePage.posts,\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      addPost: (postMessageText) => {\r\n         dispatch(addPostActionCreator(postMessageText));\r\n      }\r\n   }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport ProfileInfo from './ProfInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n   return (\r\n      <div>\r\n         <ProfileInfo profile={props.profile}\r\n                      status={props.status}\r\n                      updateOwnProfileStatus={props.updateOwnProfileStatus}/>\r\n         <MyPostsContainer/>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Profile;\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n   isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Redirect to='/login'/>\r\n         return <Component {...this.props}/>\r\n      }\r\n   }\r\n\r\n   let ConnnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n   return ConnnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport Profile from './Profile';\r\nimport {getStatusFomUser, getUserProfileData, updateOwnProfileStatus} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from '../hoc/withAuthRedirect';\r\n\r\nclass ProfileContainer extends React.Component {\r\n   componentDidMount = () => {\r\n      let userId = this.props.match.params.userId;\r\n      if (!userId) {\r\n         userId = 7567\r\n      }\r\n      this.props.getUserProfileData(userId);\r\n      this.props.getStatusFomUser(userId);\r\n   }\r\n\r\n   render() {\r\n      return <Profile {...this.props}\r\n                      profile={this.props.profile}\r\n                      status={this.props.status}\r\n                      updateOwnProfileStatus={this.props.updateOwnProfileStatus}/>\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   profile: state.profilePage.profile,\r\n   status: state.profilePage.status,\r\n})\r\n\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, {getUserProfileData, getStatusFomUser, updateOwnProfileStatus}),\r\n   withRouter,\r\n   withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n","const SEND_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initializeState = {\r\n   dialogs: [\r\n      {id: 1, name: 'Dimych'},\r\n      {id: 2, name: 'Andrew'},\r\n      {id: 3, name: 'Sveta'}\r\n   ],\r\n   messages: [\r\n      {id: 1, message: 'Hi'},\r\n      {id: 2, message: 'How are you?'},\r\n      {id: 3, message: 'I can met with you'}\r\n   ],\r\n};\r\n\r\nconst dialogsReducer = (state = initializeState, action) => {\r\n   switch (action.type) {\r\n      case SEND_MESSAGE:\r\n         let newMessage = action.messageText;\r\n         return {\r\n            ...state,\r\n            messages: [...state.messages, {id: 6, message:newMessage}]\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport const sendMessageCreator = (messageText) => ({type: SEND_MESSAGE, messageText});\r\n\r\nexport default dialogsReducer;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport DialogItem from './Dialog/Dialog';\r\nimport {Field, reduxForm} from 'redux-form';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n   let state = props.dialogsPage;\r\n\r\n   let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n   let messagesElements = state.messages.map(m => <Message key={m.id} message={m.message}/>);\r\n\r\n   let addNewMessage = (value) => {\r\n      props.addMessage(value.newMessageText);\r\n   }\r\n\r\n   return (\r\n      <div className={s.dialogs}>\r\n         <div className={s.dialogsItems}>\r\n            {dialogsElements}\r\n         </div>\r\n         <div className={s.messages}>\r\n            <div>{messagesElements}</div>\r\n            <div className={s.addMessage}>\r\n               <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <div>\r\n            <Field component={'textarea'}\r\n                   name={'newMessageText'}\r\n                   placeholder={'Enter your message'}\r\n            />\r\n         </div>\r\n         <div>\r\n            <button>Send message</button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessageCreator,} from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {withAuthRedirect} from '../hoc/withAuthRedirect';\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      dialogsPage: state.dialogsPage\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      addMessage: (messageText) => {\r\n         dispatch(sendMessageCreator(messageText))\r\n      },\r\n   }\r\n}\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, mapDispatchToProps),\r\n   withAuthRedirect\r\n)(Dialogs);","import {instance, profileAPI} from './api';\r\n\r\nexport const usersAPI = {\r\n\r\n\tgetUsers(currentPage = 1, pageSize = 10) {\r\n\t\treturn instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.data;\r\n\t\t\t});\r\n\t},\r\n\tfollow(userId) {\r\n\t\treturn instance.post(`follow/${userId}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.data;\r\n\t\t\t});\r\n\t},\r\n\tunfollow(userId) {\r\n\t\treturn instance.delete(`follow/${userId}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.data;\r\n\t\t\t});\r\n\t},\r\n}","import {usersAPI} from '../api/user-api';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'TOGGLE_IS_FOLLOWING_IN_PROGRESS';\r\n\r\nlet initializeState = {\r\n   users: [],\r\n   pageSize: 5,\r\n   totalUsersCount: 0,\r\n   currentPage: 1,\r\n   isFetching: true,\r\n   followingInProgress: [1, 2]\r\n};\r\n\r\nconst usersReducer = (state = initializeState, action) => {\r\n   switch (action.type) {\r\n      case FOLLOW:\r\n         return {\r\n            ...state,\r\n            users: state.users.map(u => {\r\n               if (u.id === action.userId) {\r\n                  return {...u, followed: true}\r\n               }\r\n               return u;\r\n            })\r\n         };\r\n      case UNFOLLOW:\r\n         return {\r\n            ...state,\r\n            users: state.users.map(u => {\r\n               if (u.id === action.userId) {\r\n                  return {...u, followed: false}\r\n               }\r\n               return u;\r\n            })\r\n         };\r\n      case SET_USERS: {\r\n         return {...state, users: action.users}\r\n      }\r\n      case SET_CURRENT_PAGE: {\r\n         return {...state, currentPage: action.currentPage}\r\n      }\r\n      case SET_TOTAL_USERS_COUNT: {\r\n         return {...state, totalUsersCount: action.count}\r\n      }\r\n      case TOGGLE_IS_FETCHING: {\r\n         return {...state, isFetching: action.isFetching}\r\n      }\r\n      case TOGGLE_IS_FOLLOWING_IN_PROGRESS: {\r\n         return {\r\n            ...state,\r\n            followingInProgress: action.isFetching\r\n               ? [...state.followingInProgress, action.userId]\r\n               : state.followingInProgress.filter(id => id !== action.userId)\r\n         }\r\n      }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n   type: TOGGLE_IS_FOLLOWING_IN_PROGRESS,\r\n   isFetching,\r\n   userId\r\n});\r\n\r\n\r\n//thunks users\r\nexport const getUsers = (currentPage, pageSize) => {\r\n\r\n   return (dispatch) => {\r\n      dispatch(toggleIsFetching(true))\r\n      usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n         dispatch(toggleIsFetching(false))\r\n         dispatch(setUsers(data.items))\r\n         dispatch(setUsersTotalCount(data.totalCount))\r\n      });\r\n   }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n\r\n   return (dispatch) => {\r\n      dispatch(toggleFollowingProgress(true, userId));\r\n      usersAPI.follow(userId)\r\n         .then(response => {\r\n            if (response.resultCode === 0) {\r\n               dispatch(followSuccess(userId));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n         });\r\n   }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n\r\n   return (dispatch) => {\r\n      dispatch(toggleFollowingProgress(true, userId));\r\n      usersAPI.unfollow(userId)\r\n         .then(response => {\r\n            if (response.resultCode === 0) {\r\n               dispatch(unfollowSuccess(userId));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n         });\r\n   }\r\n}\r\n\r\n\r\nexport default usersReducer;","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport userPhoto from '../../asets/images/user.png'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nlet Users = (props) => {\r\n   let pages = []\r\n   for (let i = 505; i <= 525; i++) {\r\n      pages.push(i)\r\n   }\r\n\r\n   return (\r\n      <div className={s.users_wrapper}>\r\n         <div>\r\n            {pages.map(p => {\r\n               return <span key={p.id} className={props.currentPage === p && s.selectPage}\r\n                            onClick={(e) => {\r\n                               props.onPageChanged(p);\r\n                            }}>{p}</span>\r\n            })}\r\n         </div>\r\n         {\r\n            props.users.map(u => <div key={u.id}>\r\n               <div className={s.user}>\r\n                  <div>\r\n                     <NavLink to={'/profile/' + u.id}>\r\n                        <img alt={'user'} className={s.avatar}\r\n                             src={u.photos.small != null ? u.photos.small : userPhoto}/>\r\n                     </NavLink>\r\n                  </div>\r\n                  <div>\r\n                     {u.followed\r\n                        ? <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                  className={s.unfollow_button}\r\n                                  onClick={() => {\r\n                                     props.unfollow(u.id)\r\n                                  }}>Unfollow</button>\r\n                        :\r\n                        <button disabled={props.followingInProgress.some(id => id === u.id)} className={s.follow_button}\r\n                                onClick={() => {\r\n                                   props.follow(u.id)\r\n                                }}>Follow</button>}\r\n                  </div>\r\n               </div>\r\n               <div>\r\n                  <div>{u.name}</div>\r\n                  <div>{u.status}</div>\r\n               </div>\r\n               <div>\r\n                  <div>{'u.location.city'}</div>\r\n                  <div>{'u.location.country'}</div>\r\n               </div>\r\n            </div>)\r\n         }\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n   follow,\r\n   setCurrentPage,\r\n   unfollow,\r\n   toggleFollowingProgress,\r\n   getUsers,\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/preloader/Preloader';\r\nimport {compose} from 'redux';\r\nimport {withAuthRedirect} from '../hoc/withAuthRedirect'\r\n\r\nclass UsersContainer extends React.Component {\r\n   componentDidMount() {\r\n      this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n   }\r\n\r\n   onPageChanged = (pageNumber) => {\r\n      this.props.getUsers(pageNumber, this.props.pageSize)\r\n      this.props.setCurrentPage(pageNumber);\r\n   }\r\n\r\n   render() {\r\n      return <>\r\n         {this.props.isFetching ? <Preloader/> : null}\r\n         <Users pageSize={this.props.pageSize}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                followingInProgress={this.props.followingInProgress}\r\n         />\r\n      </>\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      users: state.usersPage.users,\r\n      pageSize: state.usersPage.pageSize,\r\n      totalUsersCount: state.usersPage.totalUsersCount,\r\n      currentPage: state.usersPage.currentPage,\r\n      isFetching: state.usersPage.isFetching,\r\n      followingInProgress: state.usersPage.followingInProgress\r\n   }\r\n}\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, {\r\n      follow, unfollow, setCurrentPage,\r\n      toggleFollowingProgress, getUsers,\r\n   }),\r\n   withAuthRedirect\r\n)(UsersContainer)","import React from 'react';\nimport './App.css';\nimport {Navbar} from './components/Navbar/Navbar';\nimport {News} from './components/News/News';\nimport {Music} from './components/Music/Music';\nimport {Settings} from './components/Settings/Settings';\nimport {Route} from 'react-router-dom';\nimport {Login} from './components/Login/Login';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\n\nexport const App = (props) => {\n   return (\n      <div className='all_wrapper'>\n         <div className='app-wrapper'>\n            <HeaderContainer/>\n            <Navbar/>\n            <div className='app-wrapper-content'>\n               <Route path='/login' render={() => <Login/>}/>\n               <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n               <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n               <Route path='/news' render={() => <News/>}/>\n               <Route path='/music' render={() => <Music/>}/>\n               <Route path='/settings' render={() => <Settings/>}/>\n               <Route path='/users' render={() => <UsersContainer/>}/>\n            </div>\n         </div>\n      </div>\n   );\n}\n\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thinkMiddlaware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n\tprofilePage: profileReducer,\r\n\tdialogsPage: dialogsReducer,\r\n\tusersPage: usersReducer,\r\n\tauth: authReducer,\r\n\tform: formReducer,\r\n});\r\n\r\nlet store = createStore(reducers,applyMiddleware(thinkMiddlaware));\r\nwindow.store = store;\r\nexport default store;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport store from './redux/redux-store';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n   <BrowserRouter>\n      <Provider store={store}>\n         <App/>\n      </Provider>\n   </BrowserRouter>, document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users_wrapper\":\"Users_users_wrapper__1ZOyV\",\"selectPage\":\"Users_selectPage__1cRU0\",\"avatar\":\"Users_avatar__1H79U\",\"follow_button\":\"Users_follow_button__33hVr\",\"unfollow_button\":\"Users_unfollow_button__B7zj3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2jO0p\",\"logo_name\":\"Header_logo_name__3P1L2\",\"login\":\"Header_login__F3Un5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1vx3c\",\"avatarImg\":\"ProfileInfo_avatarImg__3GLfN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3ogJB\",\"posts\":\"MyPosts_posts__32EhU\",\"add_post\":\"MyPosts_add_post__3RIGb\"};"],"sourceRoot":""}