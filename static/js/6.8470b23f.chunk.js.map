{"version":3,"sources":["u2-components/common/FormsControls/FormControls.jsx","u2-components/common/FormsControls/FormControls.module.css","utils/validators/validators.js","u3-pages/Dialogs/Dialogs.module.css","u3-pages/Dialogs/Message/Message.jsx","u3-pages/Dialogs/Dialog/Dialog.jsx","u3-pages/Dialogs/AddMessageForm/AddMessageForm.jsx","u2-components/hoc/withAuthRedirect.jsx","u3-pages/Dialogs/DialogsContainer.js","u3-pages/Dialogs/Dialogs.jsx"],"names":["FormControl","input","meta","touched","error","children","hasError","className","s","formControl","Textarea","props","restProps","Input","CreateField","placeholder","name","component","validators","text","validate","module","exports","required","value","maxLengthCreator","maxLength","length","Message","message","DialogItem","path","id","dialog","active","to","maxLength50","reduxForm","form","onSubmit","handleSubmit","Field","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dialogsPage","dispatch","addMessage","messageText","sendMessageCreator","Component","RedirectComponent","this","React","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","newMessageText"],"mappings":"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","file":"static/js/6.8470b23f.chunk.js","sourcesContent":["import React from 'react'\r\nimport s from './FormControls.module.css'\r\nimport {Field} from 'redux-form'\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n   const hasError = touched && error\r\n   return (\r\n       <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n          <div>\r\n             {children}\r\n          </div>\r\n          {hasError && <span>{error}</span>}\r\n       </div>\r\n   )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n   const {input, meta, ...restProps} = props\r\n   return <FormControl {...props}><textarea {...input}{...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n   const {input, meta, ...restProps} = props\r\n   return <FormControl {...props}><input {...input}{...restProps}/></FormControl>\r\n}\r\n\r\nexport const CreateField = (placeholder, name, component, validators, props = {}, text = '') => (\r\n    <div>\r\n       <Field placeholder={placeholder} name={name} component={component} validate={validators} {...props}/>\r\n       {text}\r\n    </div>\r\n)\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__D0p8B\",\"error\":\"FormControls_error__2QGSA\"};","export const required = value => {\r\n   if(value) return undefined;\r\n\r\n   return 'Field id required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) =>{\r\n   if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n   return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xUzZ\",\"dialog\":\"Dialogs_dialog__1CVYZ\",\"dialogsItems\":\"Dialogs_dialogsItems__2yQB_\",\"messages\":\"Dialogs_messages__1cnMK\",\"addMessage\":\"Dialogs_addMessage__1UmGe\",\"add_post\":\"Dialogs_add_post__10925\"};","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\nexport const Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport s from '../Dialogs.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nexport const DialogItem = (props) => {\r\n   let path = '/dialogs/' + props.id\r\n   return (\r\n       <div className={s.dialog + ' ' + s.active}>\r\n          <NavLink to={path}>{props.name}</NavLink>\r\n       </div>\r\n   )\r\n}","import React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {Textarea} from '../../../u2-components/common/FormsControls/FormControls'\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators'\r\n\r\nconst maxLength50 = maxLengthCreator(100)\r\n\r\nconst AddMessageForm = (props) => {\r\n   return (\r\n       <form onSubmit={props.handleSubmit}>\r\n          <div>\r\n             <Field component={Textarea}\r\n                    name={'newMessageText'}\r\n                    validate={[required, maxLength50]}\r\n                    placeholder={'Enter your message'}\r\n             />\r\n          </div>\r\n          <div>\r\n             <button>Send message</button>\r\n          </div>\r\n       </form>\r\n   )\r\n}\r\n\r\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n   isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Redirect to='/login'/>\r\n         return <Component {...this.props}/>\r\n      }\r\n   }\r\n\r\n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n   return ConnectedAuthRedirectComponent\r\n}","import {sendMessageCreator,} from '../../u4-redux/dialogs-reducer'\r\nimport {Dialogs} from './Dialogs'\r\nimport {connect} from 'react-redux'\r\nimport {compose} from 'redux'\r\nimport {withAuthRedirect} from '../../u2-components/hoc/withAuthRedirect'\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      dialogsPage: state.dialogsPage\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      addMessage: (messageText) => {\r\n         dispatch(sendMessageCreator(messageText))\r\n      },\r\n   }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport {Message} from './Message/Message'\r\nimport {DialogItem} from './Dialog/Dialog'\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm'\r\n\r\nexport const Dialogs = (props) => {\r\n\r\n   let state = props.dialogsPage\r\n\r\n   let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>)\r\n   let messagesElements = state.messages.map(m => <Message key={m.id} message={m.message}/>)\r\n\r\n   let addNewMessage = (value) => {\r\n      props.addMessage(value.newMessageText)\r\n   }\r\n\r\n   return (\r\n       <div className={s.dialogs}>\r\n          <div className={s.dialogsItems}>\r\n             {dialogsElements}\r\n          </div>\r\n          <div className={s.messages}>\r\n             <div>{messagesElements}</div>\r\n             <div className={s.addMessage}>\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n             </div>\r\n          </div>\r\n       </div>\r\n   )\r\n}\r\n"],"sourceRoot":""}