{"version":3,"sources":["u2-components/common/FormsControls/FormControls.jsx","u2-components/common/FormsControls/FormControls.module.css","utils/validators/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","u3-pages/Login/Login.module.css","u3-pages/Profile/ProfInfo/ProfileInfo.module.css","u1-assets/images/avatar.png","u3-pages/Profile/MyPosts/MyPosts.module.css","u3-pages/Profile/Post/Post.module.css","u3-pages/Profile/ProfInfo/ProfileStatus/ProfileStatusWithHooks.jsx","u3-pages/Profile/ProfInfo/ProfileDataForm/ProfileDataForm.jsx","u3-pages/Profile/ProfInfo/ProfileInfo.jsx","u3-pages/Profile/Post/Post.jsx","u3-pages/Profile/MyPosts/MyPosts.jsx","u3-pages/Profile/MyPosts/MyPostsContainer.js","u3-pages/Profile/Profile.jsx","u3-pages/Profile/ProfileContainer.jsx"],"names":["FormControl","input","meta","touched","error","children","hasError","className","s","formControl","Textarea","props","restProps","Input","CreateField","placeholder","name","validators","component","text","validate","module","exports","required","value","maxLengthCreator","maxLength","length","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateOwnProfileStatus","onChange","e","currentTarget","ProfileDataReduxForm","reduxForm","form","handleSubmit","profile","onSubmit","formSummaryError","type","keys","contacts","map","key","index","userId","ProfileInfo","isOwner","savePhoto","saveProfile","Preloader","descriptionBlock","avatarImg","alt","src","photos","large","avatar","target","files","initialValues","formData","then","goToEditMode","ProfileData","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","instagram","contactTitle","contactValue","Contact","Post","item","message","likesCount","MyPosts","React","memo","postsElements","posts","p","id","postsBlock","AddNewPostForm","addPost","newPostText","maxLength10","Field","MyPostsContainer","connect","state","profilePage","dispatch","postMessageText","addPostActionCreator","Profile","ProfileContainer","this","match","params","authorizedUserId","history","getUserProfileData","getStatusFromUser","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.cf59aba2.chunk.js","sourcesContent":["import React from 'react'\r\nimport s from './FormControls.module.css'\r\nimport {Field} from 'redux-form'\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n   const hasError = touched && error\r\n   return (\r\n       <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n          <div>\r\n             {children}\r\n          </div>\r\n          {hasError && <span>{error}</span>}\r\n       </div>\r\n   )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n   const {input, meta, ...restProps} = props\r\n   return <FormControl {...props}><textarea {...input}{...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n   const {input, meta, ...restProps} = props\r\n   return <FormControl {...props}><input {...input}{...restProps}/></FormControl>\r\n}\r\n\r\nexport const CreateField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n       <Field placeholder={placeholder} name={name} component={component} validate={validators} {...props}/>\r\n       {text}\r\n    </div>\r\n)\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__D0p8B\",\"error\":\"FormControls_error__2QGSA\"};","export const required = value => {\r\n   if(value) return undefined;\r\n\r\n   return 'Field id required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) =>{\r\n   if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n   return undefined;\r\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Login_formSummaryError__22twe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__38D81\",\"avatarImg\":\"ProfileInfo_avatarImg__wlEaK\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.e67e358c.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__JQHs0\",\"posts\":\"MyPosts_posts__GhBBY\",\"add_post\":\"MyPosts_add_post__o0MEK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3cCX2\"};","import React, {useEffect, useState} from 'react';\r\n\r\nexport const ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateOwnProfileStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n               <span onDoubleClick={activateEditMode}>\r\n                  {props.status || '-----'}\r\n               </span>\r\n            </div>}\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       onChange={onStatusChange}\r\n                       value={status}\r\n                />\r\n            </div>}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {CreateField, Input, Textarea} from '../../../../u2-components/common/FormsControls/FormControls'\r\nimport {reduxForm} from 'redux-form'\r\nimport s from '../../../Login/Login.module.css'\r\n\r\nexport const ProfileDataForm = ({handleSubmit, profile,error}) => {\r\n   return (\r\n       //using custom Element from \"formControls\" input,textarea\r\n       <form onSubmit={handleSubmit}>\r\n          <div>\r\n             <button>Save</button>\r\n             {error && <div className={s.formSummaryError}>{error}</div>}\r\n          </div>\r\n          <div>\r\n             Full name:\r\n             {CreateField('Full name', 'fullName', [], Input)}\r\n          </div>\r\n          <div>\r\n             Looking For A Job:\r\n             {CreateField('', 'lookingForAJob', [], Input, {type: 'checkbox'})}\r\n          </div>\r\n          <div>\r\n             My professional skills:\r\n             {CreateField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\r\n          </div>\r\n          <div>\r\n             About Me:\r\n             {CreateField('About Me', 'aboutMe', [], Textarea)}\r\n          </div>\r\n          <div>\r\n             <b>Contacts</b>: {Object.keys(profile.contacts)\r\n              //important!!'contacts.' name and DOT in the end. Name = name for server put request\r\n              .map((key, index) => {\r\n                 return <div key={key}>\r\n                    {key}: {CreateField(key, 'contacts.' + key, [], Input)}\r\n                 </div>\r\n              })}\r\n             <p>{profile.userId}</p>\r\n          </div>\r\n       </form>\r\n   )\r\n}\r\n\r\nexport const ProfileDataReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)","import React, {useState} from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport {Preloader} from '../../../u2-components/common/preloader/Preloader'\r\nimport avatar from '../../../u1-assets/images/avatar.png'\r\nimport {ProfileStatusWithHooks} from './ProfileStatus/ProfileStatusWithHooks'\r\nimport {ProfileDataReduxForm} from './ProfileDataForm/ProfileDataForm'\r\n\r\nexport const ProfileInfo = ({profile, status, updateOwnProfileStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n   const [editMode, setEditMode] = useState(false)\r\n\r\n   if (!profile) {\r\n      return <Preloader/>\r\n   }\r\n   const mainPhotoSelect = (e) => {\r\n      if (e.target.files.length) {\r\n         savePhoto(e.target.files[0])\r\n      }\r\n   }\r\n\r\n   const onSubmit = (formData) => {\r\n      //if thunk resolver - change edit mode,otherwise show error message\r\n      saveProfile(formData).then(\r\n          () => setEditMode(false)\r\n      )\r\n      //console.log(formData) all data from form\r\n   }\r\n\r\n   return (\r\n       <div>\r\n          <div className={s.descriptionBlock}>\r\n             <div className={s.avatarImg}>\r\n                <img alt='avatar' src={profile.photos.large || avatar}/>\r\n             </div>\r\n             {\r\n                isOwner && <input type={'file'} onChange={mainPhotoSelect}/>\r\n             }\r\n             <div>\r\n                <div>\r\n                   Status:\r\n                   <ProfileStatusWithHooks status={status}\r\n                                           updateOwnProfileStatus={updateOwnProfileStatus}/>\r\n                </div>\r\n\r\n             </div>\r\n             {\r\n                editMode\r\n                    ? <ProfileDataReduxForm initialValues={profile}\r\n                                            onSubmit={onSubmit}\r\n                                            profile={profile}\r\n                    />\r\n                    : <ProfileData profile={profile}\r\n                                   isOwner={isOwner}\r\n                                   goToEditMode={setEditMode}\r\n                    />\r\n             }\r\n          </div>\r\n       </div>\r\n   )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n   return (\r\n       <div>\r\n          {\r\n             isOwner && <div>\r\n                <button onClick={() => goToEditMode(true)}>Edit Profile</button>\r\n             </div>\r\n          }\r\n\r\n          <div>Full name: {profile.fullName}</div>\r\n          <div>\r\n             Looking For A Job: {profile.lookingForAJob ? 'yes' : 'no'}\r\n          </div>\r\n          {\r\n             profile.lookingForAJob && <p>My professional skills: {profile.lookingForAJobDescription}</p>\r\n          }\r\n          <div>\r\n             About Me: {profile.aboutMe}\r\n          </div>\r\n          <div>\r\n             {profile.contacts.instagram}\r\n          </div>\r\n          <div>\r\n             <b>Contacts</b>: {Object.keys(profile.contacts)\r\n              .map((key, index) => {\r\n                 return <Contact key={index}\r\n                                 contactTitle={key}\r\n                                 contactValue={profile.contacts[key]}/>\r\n              })}\r\n             <p>{profile.userId}</p>\r\n          </div>\r\n       </div>\r\n   )\r\n}\r\n\r\nexport const Contact = ({contactTitle, contactValue}) => {\r\n   return (\r\n       <div>\r\n          {contactTitle}:{contactValue}\r\n       </div>\r\n   )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\nexport const Post = (props) => {\r\n   return <div className={s.item}>\r\n      <img alt={'post'} src=\"https://img.icons8.com/bubbles/100/000000/flag-person-male.png\"/>\r\n      <div>\r\n         {props.message}\r\n         <span> Like</span> {props.likesCount}\r\n      </div>\r\n   </div>\r\n\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport s from './MyPosts.module.css'\r\nimport {Post} from '../Post/Post'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators'\r\nimport {Textarea} from '../../../u2-components/common/FormsControls/FormControls'\r\n\r\nexport const MyPosts = React.memo((props) => {\r\n   let postsElements =\r\n       props.posts.map((p, i) => <Post key={`${p.id}_${i}`} message={p.message} likesCount={p.likesCount}/>)\r\n\r\n   let addNewPost = (value) => {\r\n      props.addPost(value.newPostText)\r\n   }\r\n\r\n   return (\r\n       <div className={s.postsBlock}>\r\n          <h3>My posts</h3>\r\n          <AddNewPostForm onSubmit={addNewPost}/>\r\n          <div className={s.posts}>\r\n             {postsElements}\r\n          </div>\r\n       </div>\r\n   )\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nexport const AddPost = (props) => {\r\n\r\n   return (\r\n       <form onSubmit={props.handleSubmit}>\r\n          <div>\r\n             <Field placeholder='Add post'\r\n                    component={Textarea}\r\n                    name='newPostText'\r\n                    validate={[required, maxLength10]}\r\n             />\r\n          </div>\r\n          <div>\r\n             <button>Add post</button>\r\n          </div>\r\n       </form>\r\n   )\r\n}\r\n\r\nconst AddNewPostForm = reduxForm({form: 'dialogAddMessageForm'})(AddPost)\r\n","import {addPostActionCreator} from '../../../u4-redux/profile-reducer'\r\nimport {MyPosts} from './MyPosts'\r\nimport {connect} from 'react-redux'\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      posts: state.profilePage.posts,\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      addPost: (postMessageText) => {\r\n         dispatch(addPostActionCreator(postMessageText))\r\n      }\r\n   }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContainer\r\n","import React from 'react'\r\nimport {ProfileInfo} from './ProfInfo/ProfileInfo'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\n\r\nexport const Profile = (props) => {\r\n   return (\r\n       <div>\r\n          <ProfileInfo profile={props.profile}\r\n                       status={props.status}\r\n                       updateOwnProfileStatus={props.updateOwnProfileStatus}\r\n                       savePhoto={props.savePhoto}\r\n                       isOwner={props.isOwner}\r\n                       saveProfile={props.saveProfile}\r\n          />\r\n          <MyPostsContainer/>\r\n       </div>\r\n   )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {compose} from 'redux'\r\nimport {Profile} from './Profile'\r\nimport {\r\n   getStatusFromUser,\r\n   getUserProfileData,\r\n   savePhoto,\r\n   saveProfile,\r\n   updateOwnProfileStatus\r\n} from '../../u4-redux/profile-reducer'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n   refreshProfile() {\r\n      let userId = this.props.match.params.userId\r\n      if (!userId) {\r\n         userId = this.props.authorizedUserId\r\n         if (!userId) {\r\n            this.props.history.push('/login')\r\n         }\r\n      }\r\n      this.props.getUserProfileData(userId)\r\n      this.props.getStatusFromUser(userId)\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.refreshProfile()\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState, snapshot) {\r\n      if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n         this.refreshProfile()\r\n      }\r\n   }\r\n\r\n   render() {\r\n      return <Profile {...this.props}\r\n                      isOwner={!this.props.match.params.userId}\r\n                      profile={this.props.profile}\r\n                      status={this.props.status}\r\n                      savePhoto={this.props.savePhoto}\r\n                      saveProfile={this.props.saveProfile}\r\n                      updateOwnProfileStatus={this.props.updateOwnProfileStatus}/>\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   profile: state.profilePage.profile,\r\n   status: state.profilePage.status,\r\n   authorizedUserId: state.auth.id,\r\n   isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfileData, getStatusFromUser, updateOwnProfileStatus,savePhoto,saveProfile}),\r\n    withRouter,\r\n)(ProfileContainer)\r\n\r\n\r\n"],"sourceRoot":""}