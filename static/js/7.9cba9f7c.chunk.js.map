{"version":3,"sources":["u2-components/common/FormsControls/FormControls.jsx","u2-components/common/FormsControls/FormControls.module.css","utils/validators/validators.js","u3-pages/Login/Login.module.css","u3-pages/Login/Login.jsx"],"names":["FormControl","input","meta","touched","error","children","hasError","className","s","formControl","Textarea","props","restProps","Input","CreateField","placeholder","name","validators","component","text","validate","module","exports","required","value","maxLengthCreator","maxLength","length","LoginForm","handleSubmit","captchaUrl","onSubmit","type","src","alt","formSummaryError","LoginReduxForm","reduxForm","form","connect","state","isAuth","auth","login","to","formData","password","rememberMe","captcha"],"mappings":"sRAIMA,EAAc,SAAC,GAA8C,EAA7CC,MAA8C,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SAC5CC,EAAWH,GAAWC,EAC5B,OACI,yBAAKG,UAAWC,IAAEC,YAAc,KAAOH,EAAWE,IAAEJ,MAAQ,KACzD,6BACIC,GAEHC,GAAY,8BAAOF,KAKjBM,EAAW,SAACC,GAAW,IAC1BV,EAA6BU,EAA7BV,MAAgBW,GAAaD,EAAtBT,KADkB,YACIS,EADJ,mBAEhC,OAAO,kBAACX,EAAgBW,EAAO,8CAAcV,EAAUW,MAG7CC,EAAQ,SAACF,GAAW,IACvBV,EAA6BU,EAA7BV,MAAgBW,GAAaD,EAAtBT,KADe,YACOS,EADP,mBAE7B,OAAO,kBAACX,EAAgBW,EAAO,2CAAWV,EAAUW,MAG1CE,EAAc,SAACC,EAAaC,EAAMC,EAAYC,GAAhC,IAA2CP,EAA3C,uDAAmD,GAAIQ,EAAvD,uDAA8D,GAA9D,OACvB,6BACG,kBAAC,IAAD,eAAOJ,YAAaA,EAAaC,KAAMA,EAAME,UAAWA,EAAWE,SAAUH,GAAgBN,IAC5FQ,K,oBC5BRE,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,8B,iCCD1E,oEAAO,IAAMC,EAAW,SAAAC,GACrB,IAAGA,EAEH,MAAO,qBAGGC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC7C,GAAGA,GAASA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCNzCL,EAAOC,QAAU,CAAC,iBAAmB,kC,iCCDrC,0IAUaM,EAAY,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,aAAczB,EAAuB,EAAvBA,MAAO0B,EAAgB,EAAhBA,WAE7C,OACI,0BAAMC,SAAUF,GACb,4CACA,wDACA,6CACCf,YAAY,QAAS,QAAS,CAACS,KAAWV,KAC1CC,YAAY,WAAY,WAAY,CAACS,KAAWV,IAAO,CAACmB,KAAM,aAC9DlB,YAAY,KAAM,aAAc,GAAID,IAAO,CAACmB,KAAM,YAAa,eAChE,6BACG,0CAGAF,GAAc,yBAAKG,IAAKH,EAAYI,IAAI,YAGxCJ,GAAchB,YAAY,qBAAsB,UAAW,CAACS,KAAWV,IAAO,IAEhFT,GAAS,yBAAKG,UAAWC,IAAE2B,kBAAmB/B,KAKnDgC,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,CAA2BT,GAsBnCW,uBALS,SAACC,GAAD,MAAY,CACjCC,OAAQD,EAAME,KAAKD,OACnBX,WAAYU,EAAME,KAAKZ,cAGc,CAACa,WAA1BJ,EApBD,SAAC5B,GAIZ,OAAIA,EAAM8B,OACA,kBAAC,IAAD,CAAUG,GAAI,aAGpB,yBAAKrC,UAAWC,IAAEmC,OACf,qCACA,kBAACP,EAAD,CAAgBL,SATN,SAACc,GACflC,EAAMgC,MAAME,EAASF,MAAOE,EAASC,SAAUD,EAASE,WAAYF,EAASG,UAQrClB,WAAYnB,EAAMmB","file":"static/js/7.9cba9f7c.chunk.js","sourcesContent":["import React from 'react'\r\nimport s from './FormControls.module.css'\r\nimport {Field} from 'redux-form'\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n   const hasError = touched && error\r\n   return (\r\n       <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n          <div>\r\n             {children}\r\n          </div>\r\n          {hasError && <span>{error}</span>}\r\n       </div>\r\n   )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n   const {input, meta, ...restProps} = props\r\n   return <FormControl {...props}><textarea {...input}{...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n   const {input, meta, ...restProps} = props\r\n   return <FormControl {...props}><input {...input}{...restProps}/></FormControl>\r\n}\r\n\r\nexport const CreateField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n       <Field placeholder={placeholder} name={name} component={component} validate={validators} {...props}/>\r\n       {text}\r\n    </div>\r\n)\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__D0p8B\",\"error\":\"FormControls_error__2QGSA\"};","export const required = value => {\r\n   if(value) return undefined;\r\n\r\n   return 'Field id required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) =>{\r\n   if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n   return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Login_formSummaryError__22twe\"};","import React from 'react'\r\nimport {reduxForm} from 'redux-form'\r\nimport {CreateField, Input} from '../../u2-components/common/FormsControls/FormControls'\r\nimport {required} from '../../utils/validators/validators'\r\nimport {connect} from 'react-redux'\r\nimport {login} from '../../u4-redux/auth-reducer'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nimport s from './Login.module.css'\r\n\r\nexport const LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n\r\n   return (\r\n       <form onSubmit={handleSubmit}>\r\n          <p>Use test data</p>\r\n          <p>Email: free@samuraijs.com</p>\r\n          <p>Password: free</p>\r\n          {CreateField('Login', 'login', [required], Input,)}\r\n          {CreateField('Password', 'password', [required], Input, {type: 'password'})}\r\n          {CreateField(null, 'rememberMe', [], Input, {type: 'checkbox'}, 'remember me')}\r\n          <div>\r\n             <button>Login</button>\r\n          </div>\r\n          {\r\n             captchaUrl && <img src={captchaUrl} alt='captcha'/>\r\n          }\r\n          {\r\n             captchaUrl && CreateField('Symbols from image', 'captcha', [required], Input, {})\r\n          }\r\n          {error && <div className={s.formSummaryError}>{error}</div>}\r\n       </form>\r\n   )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n   const onSubmit = (formData) => {\r\n      props.login(formData.login, formData.password, formData.rememberMe, formData.captcha)\r\n   }\r\n   if (props.isAuth) {\r\n      return <Redirect to={'/profile'}/>\r\n   }\r\n   return (\r\n       <div className={s.login}>\r\n          <h1>Login</h1>\r\n          <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n       </div>\r\n   )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   isAuth: state.auth.isAuth,\r\n   captchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)\r\n"],"sourceRoot":""}