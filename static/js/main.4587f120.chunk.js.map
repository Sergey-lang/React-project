{"version":3,"sources":["u5-api/profile-api.js","u4-redux/profile-reducer.js","u4-redux/dialogs-reducer.js","u5-api/user-api.js","utils/objects-helpers.js","u4-redux/users-reducer.js","u3-pages/News/News.module.css","u3-pages/Music/Music.module.css","u3-pages/Settings/Settings.module.css","u1-assets/images/preloader.gif","u2-components/common/preloader/Preloader.module.css","u5-api/api.js","serviceWorker.js","u4-redux/app-reducer.js","u4-redux/store.js","u3-pages/News/News.jsx","u3-pages/Music/Music.jsx","u3-pages/Settings/Settings.jsx","u3-pages/Page404.jsx","u2-components/hoc/withSuspense.jsx","u4-redux/auth-selectors.js","u3-pages/Header/Header.jsx","App.js","index.js","u5-api/auth-api.js","u5-api/security-api.js","u4-redux/auth-reducer.js","u2-components/common/preloader/Preloader.jsx"],"names":["profileAPI","userId","instance","get","then","res","data","status","put","photoFile","formData","FormData","append","headers","profile","initializeState","posts","id","message","likesCount","profileReducer","state","action","type","ADD_POST","postMessageText","DELETE_POST","filter","p","postId","SET_USER_PROFILE","GET_USER_PROFILE_STATUS","userStatus","SET_OWN_PROFILE_STATUS","SAVE_PHOTO_SUCCESS","photos","addPostActionCreator","setOwnProfileStatus","getUserProfileData","dispatch","a","getStatusFromUser","updateOwnProfileStatus","resultCode","savePhoto","file","saveProfile","getState","auth","messages","length","stopSubmit","_error","Promise","reject","dialogs","name","dialogsReducer","SEND_MESSAGE","newMessage","messageText","sendMessageCreator","usersAPI","getUsers","currentPage","pageSize","response","follow","post","unfollow","delete","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","usersReducer","FOLLOW","followed","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","count","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_IN_PROGRESS","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","requestingPage","totalCount","followUnfollowFlow","apiMethod","actionCreator","bind","module","exports","axios","withCredentials","baseURL","Boolean","window","location","hostname","match","initialized","INITIALIZED_SUCCESS","reducers","combineReducers","profilePage","dialogsPage","usersPage","authReducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thinkMiddleware","_store_","News","props","className","s","content","Music","Settings","Page404","withSuspense","Component","Suspense","fallback","Preloader","selectIsAuth","isAuth","selectCurrentUserLogin","login","AppHeader","useDispatch","useSelector","Header","Layout","span","theme","mode","defaultSelectedKeys","Item","key","to","title","style","backgroundColor","icon","UserOutlined","onClick","logout","SubMenu","Menu","Content","Footer","Sider","Login","React","lazy","ProfileContainer","DialogsContainer","UsersContainer","App","reason","promise","alert","this","initializeApp","addEventListener","catchAllUnhandledErrors","removeEventListener","padding","margin","width","defaultOpenKeys","height","LaptopOutlined","minHeight","exact","path","render","textAlign","AppContainer","withRouter","connect","getAuthUserData","all","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","authAPI","email","password","rememberMe","captcha","securityAPI","captchaUrl","SET_USER_DATA","GET_CAPTCHA_URL","payload","setAuthUserData","getCaptchaUrlSuccess","getCaptchaUrl","url","alt","preloader","src"],"mappings":"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","file":"static/js/main.4587f120.chunk.js","sourcesContent":["import {instance} from './api'\r\n\r\nexport const profileAPI = {\r\n   getProfile(userId) {\r\n      return instance.get(`profile/${userId}`)\r\n          .then(res => {\r\n             return res.data\r\n          })\r\n   },\r\n\r\n   getUserStatus(userId) {\r\n      return instance.get(`profile/status/${userId}`)\r\n          .then(res => res)\r\n   },\r\n\r\n   updateOwnProfileStatus(status) {\r\n      return instance.put(`profile/status/`, {status})\r\n          .then(res => {\r\n             return res.data\r\n          })\r\n   },\r\n   savePhoto(photoFile) {\r\n      const formData = new FormData()\r\n      formData.append('image', photoFile)\r\n      return instance.put(`profile/photo/`, formData, {\r\n         headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n         }\r\n      })\r\n          .then(res => {\r\n             return res.data\r\n          })\r\n   },\r\n   saveProfile(profile) {\r\n      return instance.put(`profile/`, profile)\r\n          .then(res => {\r\n             return res.data\r\n          })\r\n   },\r\n}","import {profileAPI} from '../u5-api/profile-api'\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nlet initializeState = {\r\n   posts: [\r\n      {id: 1, message: 'Hi, how do you feel? I have not seen you since I was in Berlin!', likesCount: 12},\r\n      {id: 2, message: 'Wow! It is great! When are you going there?', likesCount: 12}\r\n   ],\r\n   profile: null,\r\n   status: '',\r\n}\r\n\r\nexport const profileReducer = (state = initializeState, action) => {\r\n   switch (action.type) {\r\n      case ADD_POST:\r\n         return {\r\n            ...state,\r\n            posts: [{id: 5, message: action.postMessageText, likesCount: 0}, ...state.posts],\r\n         }\r\n      case DELETE_POST:\r\n         return {\r\n            ...state,\r\n            posts: state.posts.filter(p => p.id !== action.postId)\r\n         }\r\n      case SET_USER_PROFILE: {\r\n         return {\r\n            ...state,\r\n            profile: action.profile\r\n         }\r\n      }\r\n      case GET_USER_PROFILE_STATUS: {\r\n         return {\r\n            ...state,\r\n            status: action.userStatus\r\n         }\r\n      }\r\n      case SET_OWN_PROFILE_STATUS: {\r\n         return {\r\n            ...state,\r\n            status: action.status\r\n         }\r\n      }\r\n      case SAVE_PHOTO_SUCCESS: {\r\n         return {\r\n            ...state,\r\n            profile: {...state.profile, photos: action.photos}\r\n         }\r\n      }\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\n//Actions Type\r\nconst ADD_POST = 'PROFILE/ADD-POST'\r\nconst SET_USER_PROFILE = 'PROFILE/SET-USER-PROFILE'\r\nconst GET_USER_PROFILE_STATUS = 'PROFILE/SET-USER-PROFILE-STATUS'\r\nconst SET_OWN_PROFILE_STATUS = 'PROFILE/UPDATE-PROFILE-STATUS'\r\nconst DELETE_POST = 'PROFILE/DELETE-POST'\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE-PHOTO-SUCCESS'\r\n\r\n//Actions\r\nexport const addPostActionCreator = (postMessageText) => ({type: ADD_POST, postMessageText})\r\nexport const setUserProfileData = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const deletePostAC = (postId) => ({type: DELETE_POST, postId})\r\n//status\r\nexport const getUserStatus = (userStatus) => ({type: GET_USER_PROFILE_STATUS, userStatus})\r\nexport const setOwnProfileStatus = (status) => ({type: SET_OWN_PROFILE_STATUS, status})\r\n//info\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\n//Thunks\r\nexport const getUserProfileData = (userId) => async (dispatch) => {\r\n   let data = await profileAPI.getProfile(userId)\r\n   dispatch(setUserProfileData(data))\r\n}\r\n\r\nexport const getStatusFromUser = (userId) => async (dispatch) => {\r\n   try {\r\n      let res = await profileAPI.getUserStatus(userId)\r\n      dispatch(getUserStatus(res.data))\r\n   } catch (error) {\r\n      // dispatch error\r\n   }\r\n\r\n}\r\n\r\nexport const updateOwnProfileStatus = (status) => async (dispatch) => {\r\n   try {\r\n      let data = await profileAPI.updateOwnProfileStatus(status)\r\n      if (data.resultCode === 0) {\r\n         dispatch(setOwnProfileStatus(status))\r\n      }\r\n   } catch (error) {\r\n      // dispatch error\r\n   }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n   try {\r\n      let data = await profileAPI.savePhoto(file)\r\n      if (data.resultCode === 0) {\r\n         dispatch(savePhotoSuccess(data.data.photos))\r\n      }\r\n   } catch (error) {\r\n      // dispatch error\r\n   }\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n   try {\r\n      const userId = getState().auth.id\r\n      let data = await profileAPI.saveProfile(profile)\r\n      if (data.resultCode === 0) {\r\n         dispatch(getUserProfileData(userId))\r\n      } else {\r\n         let messages = data.messages.length > 0 ? data.messages[0] : 'some error'\r\n         //need changing error for different fields\r\n         // dispatch(stopSubmit('edit-profile', {'contacts': {'facebook': messages}}))\r\n         dispatch(stopSubmit('edit-profile', {_error: messages}))\r\n         return Promise.reject(messages)\r\n      }\r\n   } catch (error) {\r\n      // dispatch error\r\n   }\r\n}\r\n","let initializeState = {\r\n   dialogs: [\r\n      {id: 1, name: 'Egor'},\r\n      {id: 2, name: 'Andrew'},\r\n      {id: 3, name: 'David'}\r\n   ],\r\n   messages: [\r\n      {id: 1, message: 'Hi'},\r\n      {id: 2, message: 'How are you?'},\r\n      {id: 3, message: 'I can met with you'}\r\n   ],\r\n}\r\n\r\nexport const dialogsReducer = (state = initializeState, action) => {\r\n   switch (action.type) {\r\n      case SEND_MESSAGE:\r\n         let newMessage = action.messageText\r\n         return {\r\n            ...state,\r\n            messages: [...state.messages, {id: 6, message: newMessage}]\r\n         }\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\n//Actions Type\r\nconst SEND_MESSAGE = 'DIALOGS/ADD-MESSAGE'\r\n\r\n//Actions\r\nexport const sendMessageCreator = (messageText) => ({type: SEND_MESSAGE, messageText})\r\n\r\n\r\n","import {instance} from './api'\r\n\r\nexport const usersAPI = {\r\n\r\n   getUsers(currentPage = 1, pageSize = 10) {\r\n      return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n          .then(response => {\r\n             return response.data\r\n          })\r\n   },\r\n   follow(userId) {\r\n      return instance.post(`follow/${userId}`)\r\n          .then(response => {\r\n             return response.data\r\n          })\r\n   },\r\n   unfollow(userId) {\r\n      return instance.delete(`follow/${userId}`)\r\n          .then(response => {\r\n             return response.data\r\n          })\r\n   },\r\n}","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from '../u5-api/user-api'\r\nimport {updateObjectInArray} from '../utils/objects-helpers'\r\n\r\nlet initializeState = {\r\n   users: [],\r\n   pageSize: 10,\r\n   totalUsersCount: 0,\r\n   currentPage: 1,\r\n   isFetching: true,\r\n   followingInProgress: [1, 2]\r\n}\r\n\r\nexport const usersReducer = (state = initializeState, action) => {\r\n   switch (action.type) {\r\n      case FOLLOW:\r\n         return {\r\n            ...state,\r\n            users: updateObjectInArray(state.users,\r\n                action.userId, 'id', {followed: true})\r\n         }\r\n      case UNFOLLOW:\r\n         return {\r\n            ...state,\r\n            users: updateObjectInArray(state.users,\r\n                action.userId, 'id', {followed: false})\r\n         }\r\n      case SET_USERS: {\r\n         return {...state, users: action.users}\r\n      }\r\n      case SET_CURRENT_PAGE: {\r\n         return {...state, currentPage: action.currentPage}\r\n      }\r\n      case SET_TOTAL_USERS_COUNT: {\r\n         return {...state, totalUsersCount: action.count}\r\n      }\r\n      case TOGGLE_IS_FETCHING: {\r\n         return {...state, isFetching: action.isFetching}\r\n      }\r\n      case TOGGLE_IS_FOLLOWING_IN_PROGRESS: {\r\n         return {\r\n            ...state,\r\n            followingInProgress: action.isFetching\r\n                ? [...state.followingInProgress, action.userId]\r\n                : state.followingInProgress.filter(id => id !== action.userId)\r\n         }\r\n      }\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\n//Actions type\r\nconst FOLLOW = 'USERS/FOLLOW'\r\nconst UNFOLLOW = 'USERS/UNFOLLOW'\r\nconst SET_USERS = 'USERS/SET_USERS'\r\nconst SET_CURRENT_PAGE = 'USERS/SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'USERS/SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'USERS/IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'USERS/TOGGLE_IS_FOLLOWING_IN_PROGRESS'\r\n\r\n//Actions\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n   type: TOGGLE_IS_FOLLOWING_IN_PROGRESS,\r\n   isFetching,\r\n   userId\r\n})\r\n\r\n//Thunks\r\nexport const requestUsers = (requestingPage, pageSize) => async (dispatch) => {\r\n   dispatch(toggleIsFetching(true))\r\n   dispatch(setCurrentPage(requestingPage))\r\n   let data = await usersAPI.getUsers(requestingPage, pageSize)\r\n   dispatch(toggleIsFetching(false))\r\n   dispatch(setUsers(data.items))\r\n   dispatch(setUsersTotalCount(data.totalCount))\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n   dispatch(toggleFollowingProgress(true, userId))\r\n   let response = await apiMethod(userId)\r\n   if (response.resultCode === 0) {\r\n      dispatch(actionCreator(userId))\r\n   }\r\n   dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n   followUnfollowFlow(dispatch, userId,\r\n       usersAPI.follow.bind(usersAPI),\r\n       followSuccess)\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n   followUnfollowFlow(dispatch, userId,\r\n       usersAPI.unfollow.bind(usersAPI),\r\n       unfollowSuccess)\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"News_content__3SS2_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Music_content__3-tXG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Settings_content__2Gm9T\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.d5c02aa6.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1r2vA\"};","import * as axios from 'axios'\r\n\r\nexport const instance = axios.create({\r\n   withCredentials: true,\r\n   baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n   headers: {\r\n      'API-KEY': 'ec9092bf-d7c1-484e-b4e6-892ed49a92ea'\r\n   }\r\n})\r\n\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'Settings content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {getAuthUserData} from './auth-reducer'\r\n\r\nlet initializeState = {\r\n   initialized: false\r\n}\r\n\r\nexport const appReducer = (state = initializeState, action) => {\r\n   switch (action.type) {\r\n      case INITIALIZED_SUCCESS: {\r\n         return {...state, initialized: true}\r\n      }\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\n//Actions type\r\nconst INITIALIZED_SUCCESS = 'APP/INITIALIZED-SUCCESS'\r\n\r\n//Actions\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\n//Thunks\r\nexport const initializeApp = () => (dispatch) => {\r\n\r\n   let promise = dispatch(getAuthUserData())\r\n\r\n   Promise.all([promise])\r\n       .then(() => {\r\n          dispatch(initializedSuccess())\r\n       })\r\n}","import {applyMiddleware, combineReducers, compose, createStore} from 'redux'\r\nimport {profileReducer} from './profile-reducer'\r\nimport {dialogsReducer} from './dialogs-reducer'\r\nimport {usersReducer} from './users-reducer'\r\nimport {authReducer} from './auth-reducer'\r\nimport {appReducer} from './app-reducer'\r\nimport thinkMiddleware from 'redux-thunk'\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n   profilePage: profileReducer,\r\n   dialogsPage: dialogsReducer,\r\n   usersPage: usersReducer,\r\n   auth: authReducer,\r\n   form: formReducer,\r\n   app: appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thinkMiddleware)))\r\n\r\nwindow._store_ = store;\r\nexport default store","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nexport const News = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            This will be news\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nexport const Music = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nexport const Settings = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport const Page404 = (props) => {\r\n   return (\r\n       <div>404 NOT FOUND</div>\r\n   )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport {Preloader} from '../common/preloader/Preloader'\r\n\r\nexport const withSuspense = (Component) => {\r\n   return (props) => {\r\n      return (\r\n          <React.Suspense fallback={<Preloader/>}>\r\n             <Component {...props}/>\r\n          </React.Suspense>\r\n      )\r\n   }\r\n}","export const selectIsAuth = (state) => {\r\n   return state.auth.isAuth\r\n}\r\n\r\nexport const selectCurrentUserLogin = (state) => {\r\n   return state.auth.login\r\n}\r\n\r\n//RESELECT library example\r\n//can get 3 dependency\r\n/*const SuperUserSelector = createSelector(getUsers,(users)=>{\r\n   return users.filter(u => true)\r\n})*/\r\n//can get 3 dependency\r\n/*const SuperUserSelector2 = createSelector(getUsers,getCurrentPage,(users,currentPage)=>{\r\n   return users.filter(u => true)\r\n})*/","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {selectCurrentUserLogin, selectIsAuth} from '../../u4-redux/auth-selectors';\r\nimport {logout} from '../../u4-redux/auth-reducer';\r\n\r\nimport {Avatar, Button, Col, Layout, Menu, Row} from 'antd';\r\nimport {UserOutlined} from '@ant-design/icons';\r\nimport {Header} from 'antd/lib/layout/layout';\r\n\r\nexport const AppHeader = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const isAuth = useSelector(selectIsAuth)\r\n    const login = useSelector(selectCurrentUserLogin)\r\n\r\n    const logOut = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    const {Header} = Layout\r\n\r\n    return (\r\n        <Header className=\"header\">\r\n            <Row>\r\n                <Col span={18}>\r\n                    <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n                        <Menu.Item key=\"1\"><Link to=\"/users\">Developers</Link></Menu.Item>\r\n                    </Menu>\r\n                </Col>\r\n                {\r\n                    isAuth\r\n                        ? <><Col span={1}>\r\n                            <Avatar title={login} style={{backgroundColor: '#87d068'}} icon={<UserOutlined/>}/>\r\n                        </Col>\r\n                            <Col span={5}>\r\n                                <Button onClick={logOut}>log out</Button>\r\n                            </Col>\r\n                        </>\r\n                        : <Col span={6}>\r\n                            <Button>\r\n                                <Link to={'/login'}>Login</Link>\r\n                            </Button>\r\n                        </Col>\r\n                }\r\n            </Row>\r\n        </Header>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nimport {compose} from 'redux'\r\nimport store from './u4-redux/store'\r\nimport {connect, Provider} from 'react-redux'\r\n\r\nimport {News} from './u3-pages/News/News'\r\nimport {Music} from './u3-pages/Music/Music'\r\nimport {Settings} from './u3-pages/Settings/Settings'\r\nimport {Page404} from './u3-pages/Page404'\r\nimport {Preloader} from './u2-components/common/preloader/Preloader'\r\n\r\nimport {initializeApp} from './u4-redux/app-reducer'\r\nimport {withSuspense} from './u2-components/hoc/withSuspense'\r\nimport {BrowserRouter, Link, Redirect, Route, Switch, withRouter} from 'react-router-dom'\r\nimport {LaptopOutlined, NotificationOutlined, UserOutlined} from '@ant-design/icons';\r\nimport {Breadcrumb, Layout, Menu} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport {AppHeader} from './u3-pages/Header/Header';\r\n\r\nconst {SubMenu} = Menu;\r\nconst {Content, Footer, Sider} = Layout;\r\n\r\nconst Login = React.lazy(() => import('./u3-pages/Login/Login'))\r\nconst ProfileContainer = React.lazy(() => import('./u3-pages/Profile/ProfileContainer'))\r\nconst DialogsContainer = React.lazy(() => import('./u3-pages/Dialogs/DialogsContainer'))\r\nconst UsersContainer = React.lazy(() => import('./u3-pages/Users/UsersContainer'))\r\n\r\nclass App extends React.Component {\r\n\r\n    catchAllUnhandledErrors(reason, promise) {\r\n        alert('seme error')\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors)\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <Layout>\r\n                <AppHeader/>\r\n                <Content style={{padding: '0 50px'}}>\r\n                    <Breadcrumb style={{margin: '16px 0'}}>\r\n                        <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>List</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>App</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                    <Layout className=\"site-layout-background\" style={{padding: '24px 0'}}>\r\n                        <Sider className=\"site-layout-background\" width={200}>\r\n                            <Menu\r\n                                mode=\"inline\"\r\n                                defaultSelectedKeys={['1']}\r\n                                defaultOpenKeys={['sub1']}\r\n                                style={{height: '100%'}}\r\n                            >\r\n                                <SubMenu key=\"sub1\" icon={<UserOutlined/>} title=\"Profile\">\r\n                                    <Menu.Item key=\"1\"><Link to=\"/profile\">Profile</Link></Menu.Item>\r\n                                    <Menu.Item key=\"2\"><Link to=\"/dialogs\">Messages</Link></Menu.Item>\r\n                                </SubMenu>\r\n                                <SubMenu key=\"sub2\" icon={<LaptopOutlined/>} title=\"Developers\">\r\n                                    <Menu.Item key=\"5\"><Link to=\"/developers\">Developers</Link></Menu.Item>\r\n                                    <Menu.Item key=\"6\">option6</Menu.Item>\r\n                                </SubMenu>\r\n                            </Menu>\r\n                        </Sider>\r\n                        <Content style={{padding: '0 24px', minHeight: 280}}>\r\n                            <Switch>\r\n                                <Route exact path=\"/\" render={() => <Redirect to='/profile'/>}/>\r\n                                <Route path='/login' render={withSuspense(Login)}/>\r\n                                <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\r\n                                <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\r\n                                <Route path='/news' render={() => <News/>}/>\r\n                                <Route path='/music' render={() => <Music/>}/>\r\n                                <Route path='/settings' render={() => <Settings/>}/>\r\n                                <Route path='/developers' render={withSuspense(UsersContainer)}/>\r\n                                <Route render={() => <Page404/>}/>\r\n                            </Switch>\r\n                        </Content>\r\n                    </Layout>\r\n                </Content>\r\n                <Footer style={{textAlign: 'center'}}>ANT DESIGN</Footer>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nconst AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App)\r\n\r\nexport const MainApp = (props) => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <AppContainer/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n","import * as serviceWorker from './serviceWorker'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport {MainApp} from './App'\r\n\r\nReactDOM.render(<MainApp/> , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {instance} from './api'\r\n\r\nexport const authAPI = {\r\n   authMe() {\r\n      return instance.get(`auth/me`)\r\n   },\r\n\r\n   login(email, password, rememberMe = false, captcha = null) {\r\n      return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n   },\r\n\r\n   logout() {\r\n      return instance.delete(`auth/login`)\r\n   },\r\n}","import {instance} from './api'\r\n\r\nexport const securityAPI = {\r\n   getCaptcha() {\r\n      return instance.get(`security/get-captcha-url`)\r\n   },\r\n}","import {authAPI} from '../u5-api/auth-api'\r\nimport {stopSubmit} from 'redux-form'\r\nimport {securityAPI} from '../u5-api/security-api'\r\n\r\nlet initializeState = {\r\n   id: null,\r\n   email: null,\r\n   login: null,\r\n   isFetching: true,\r\n   isAuth: false,\r\n   captchaUrl: null\r\n}\r\n\r\nexport const authReducer = (state = initializeState, action) => {\r\n   switch (action.type) {\r\n      case SET_USER_DATA:\r\n      case GET_CAPTCHA_URL:\r\n         return {\r\n            ...state,\r\n            ...action.payload,\r\n         }\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\n//Actions Type\r\nconst SET_USER_DATA = 'AUTH/SET_USER_DATA'\r\nconst GET_CAPTCHA_URL = 'AUTH/GET-CAPTCHA-URL'\r\n\r\n//Actions\r\nexport const setAuthUserData = (id, email, login, isAuth) => (\r\n    {type: SET_USER_DATA, payload: {id, email, login, isAuth}})\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => (\r\n    {type: GET_CAPTCHA_URL, payload: {captchaUrl}})\r\n\r\n// export const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\n\r\n//Thunks\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n   let response = await authAPI.authMe()\r\n   if (response.data.resultCode === 0) {\r\n      let {id, login, email} = response.data.data\r\n      dispatch(setAuthUserData(id, login, email, true))\r\n   }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha=null) => async (dispatch) => {\r\n   let response = await authAPI.login(email, password, rememberMe, captcha)\r\n   if (response.data.resultCode === 0) {\r\n      dispatch(getAuthUserData())\r\n   } else {\r\n      //captcha\r\n      if (response.data.resultCode === 10) {\r\n         dispatch(getCaptchaUrl())\r\n      }\r\n      //incorrect form value\r\n      let messages = response.data.messages.length > 0 ? response.data.messages[0] : 'some error'\r\n      dispatch(stopSubmit('login', {_error: messages}))\r\n   }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n   const response = await securityAPI.getCaptcha()\r\n   const captchaUrl = response.data.url\r\n   dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n   let response = await authAPI.logout()\r\n   if (response.data.resultCode === 0) {\r\n      dispatch(setAuthUserData(null, null, null, false))\r\n   }\r\n}","import React from 'react'\r\nimport preloader from '../../../u1-assets/images/preloader.gif'\r\nimport s from './Preloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n   return <div><img alt={'preloader'} className={s.preloader} src={preloader}/></div>\r\n}\r\n"],"sourceRoot":""}